<?xml version="1.0" encoding="UTF-8"?>
<metadata>
<structs>
<struct>
<cat>用户API</cat>
<name>UserCredit</name>
<desc>用户信用</desc>
<props>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>信用等级（是根据score生成的），信用等级：淘宝会员在淘宝网上的信用度，分为20个级别，级别如：level = 1 时，表示一心；level = 2 时，表示二心</desc>
</prop>
<prop>
<name>score</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>信用总分（“好评”加一分，“中评”不加分，“差评”扣一分。分越高，等级越高）</desc>
</prop>
<prop>
<name>total_num</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>收到的评价总条数。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>good_num</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>收到的好评总条数。取值范围:大于零的整数</desc>
</prop>
</props>
</struct>
<struct>
<cat>用户API</cat>
<name>Location</name>
<desc>用户地址</desc>
<props>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>310000</sample>
<desc>邮政编码</desc>
</prop>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>华星路99号创业大厦</sample>
<desc>详细地址，最大256个字节（128个中文）</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>杭州</sample>
<desc>所在城市（中文名称）</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>浙江</sample>
<desc>所在省份（中文名称）</desc>
</prop>
<prop>
<name>country</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>中国</sample>
<desc>国家名称</desc>
</prop>
<prop>
<name>district</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>西湖区</sample>
<desc>区/县（只适用于物流API）</desc>
</prop>
</props>
</struct>
<struct>
<cat>用户API</cat>
<name>User</name>
<desc>用户</desc>
<props>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>10001</sample>
<desc>用户数字ID</desc>
</prop>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>10001</sample>
<desc>用户字符串ID</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>hz0799</sample>
<desc>用户昵称</desc>
</prop>
<prop>
<name>sex</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>m</sample>
<desc>性别。可选值:m(男),f(女)</desc>
</prop>
<prop>
<name>buyer_credit</name>
<type>UserCredit</type>
<level>Object</level>
<private>false</private>
<sample/>
<desc>买家信用</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>UserCredit</type>
<level>Object</level>
<private>false</private>
<sample/>
<desc>卖家信用</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<private>false</private>
<sample/>
<desc>用户当前居住地公开信息。如：location.city获取其中的city数据</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>用户注册时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>last_visit</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>最近登陆时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>birthday</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>生日</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>B</sample>
<desc>用户类型。可选值:B(B商家),C(C商家)</desc>
</prop>
<prop>
<name>has_more_pic</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否购买多图服务。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>item_img_num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5</sample>
<desc>可上传商品图片数量</desc>
</prop>
<prop>
<name>item_img_size</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1024</sample>
<desc>单张商品图片最大容量(商品主图大小)。单位:k</desc>
</prop>
<prop>
<name>prop_img_num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5</sample>
<desc>可上传属性图片数量</desc>
</prop>
<prop>
<name>prop_img_size</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1024</sample>
<desc>单张销售属性图片最大容量（非主图的商品图片和商品属性图片）。单位:k</desc>
</prop>
<prop>
<name>auto_repost</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>unlimited</sample>
<desc>是否受限制。可选值:limited(受限制),unlimited(不受限)</desc>
</prop>
<prop>
<name>promoted_type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>authentication</sample>
<desc>有无实名认证。可选值:authentication(实名认证),not authentication(没有认证)</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>normal</sample>
<desc>状态。可选值:normal(正常),inactive(未激活),delete(删除),reeze(冻结),supervise(监管)</desc>
</prop>
<prop>
<name>alipay_bind</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>bind</sample>
<desc>有无绑定。可选值:bind(绑定),notbind(未绑定)</desc>
</prop>
<prop>
<name>consumer_protection</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否参加消保</desc>
</prop>
<prop>
<name>alipay_account</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>hz0799@163.com</sample>
<desc>支付宝账户</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>10001</sample>
<desc>支付宝ID</desc>
</prop>
<prop>
<name>avatar</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://assets.taobaocdn.com/app/sns/img/default/avatar-120.png</sample>
<desc>卖家头像地址</desc>
</prop>
<prop>
<name>liangpin</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否是无名良品用户，true or  false</desc>
</prop>
<prop>
<name>vip_info</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>v1</sample>
<desc>用户的全站vip信息，可取值如下：c(普通会员),asso_vip(荣誉会员), exp_vip1,exp_vip2,exp_vip3,exp_vip4(四个等级的体验vip会员), vip1,vip2,vip3,vip4(四个等级的正式vip会员)，共10种取值，其中asso_vip是由vip会员衰退而成，与主站上的准vip对应；体验vip会员首先是普通会员或准vip会员。
供taobao.user.get和taobao.user.detail.get使用</desc>
</prop>
<prop>
<name>email</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>xiaoming@taobao.com</sample>
<desc>联系人email</desc>
</prop>
<prop>
<name>magazine_subscribe</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否订阅了淘宝天下杂志</desc>
</prop>
<prop>
<name>vertical_market</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>3C,shoes</sample>
<desc>用户参与垂直市场类型。shoes表示鞋城垂直市场用户，3C表示3C垂直市场用户。多个类型之间用","分隔。如：一个用户既是3C用户又是鞋城用户，那么这个字段返回就是"3C,shoes"。如果用户不是垂直市场用户，此字段返回为""。</desc>
</prop>
<prop>
<name>online_gaming</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>用户是否为网游用户，属于隐私信息，需要登陆才能查看自己的。 
目前仅供taobao.user.get使用</desc>
</prop>
</props>
</struct>
<struct>
<cat>产品API</cat>
<name>ProductImg</name>
<desc>产品图片</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>9684</sample>
<desc>产品图片ID</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>96899</sample>
<desc>图片所属产品的ID</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://host/image_path</sample>
<desc>图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>2355</sample>
<desc>图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>添加时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<cat>产品API</cat>
<name>Product</name>
<desc>产品结构</desc>
<props>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>3433222</sample>
<desc>产品ID</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>外部产品ID</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>tsc</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>hkjki</sample>
<desc>淘宝标准产品编码</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>50012286</sample>
<desc>商品类目ID.必须是叶子类目ID</desc>
</prop>
<prop>
<name>cat_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>日用品</sample>
<desc>商品类目名称</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>pid:vid;pid:vid</sample>
<desc>产品的关键属性列表.格式：pid:vid;pid:vid</desc>
</prop>
<prop>
<name>props_str</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>品牌:诺基亚;型号:N73</sample>
<desc>产品的关键属性字符串列表.比如:品牌:诺基亚;型号:N73(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>binds_str</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>品牌:诺基亚;型号:N73</sample>
<desc>产品的非关键属性字符串列表.格式同props_str(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>sale_props_str</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>品牌:诺基亚;型号:N73</sample>
<desc>产品的销售属性字符串列表.格式同props_str(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>惠普笔记本</sample>
<desc>产品名称</desc>
</prop>
<prop>
<name>binds</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>pid:vid;pid:vid</sample>
<desc>产品的非关键属性列表.格式:pid:vid;pid:vid.</desc>
</prop>
<prop>
<name>sale_props</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>pid:vid;pid:vid</sample>
<desc>产品的销售属性列表.格式:pid:vid;pid:vid</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>200.07</sample>
<desc>产品的市场价.单位为元.精确到2位小数;如:200.07</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>这是一款产品</sample>
<desc>产品的描述.最大25000个字节</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://host/image_path</sample>
<desc>产品的主图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>product_imgs</name>
<type>ProductImg</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>产品的子图片.目前最多支持4张。fields中设置为product_imgs.id、product_imgs.url、product_imgs.position 等形式就会返回相应的字段</desc>
</prop>
<prop>
<name>product_prop_imgs</name>
<type>ProductPropImg</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>产品的属性图片.比如说黄色对应的产品图片,绿色对应的产品图片。fields中设置为product_prop_imgs.id、  
product_prop_imgs.props、product_prop_imgs.url、product_prop_imgs.position等形式就会返回相应的字段</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>当前状态(0 商家确认 1 屏蔽 3 小二确认 2 未确认 -1 删除)</desc>
</prop>
<prop>
<name>collect_num</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12345</sample>
<desc>产品的collect次数</desc>
</prop>
<prop>
<name>level</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>2</sample>
<desc>产品的级别level</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg</sample>
<desc>产品对应的图片路径</desc>
</prop>
<prop>
<name>vertical_market</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>3</sample>
<desc>垂直市场,如：3（3C），4（鞋城）</desc>
</prop>
<prop>
<name>customer_props</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>20000:优衣库</sample>
<desc>用户自定义属性,结构：pid1:value1;pid2:value2 例如：“20000:优衣库”，表示“品牌:优衣库”</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>1627207:3232483:深深绿色</sample>
<desc>销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。</desc>
</prop>
</props>
</struct>
<struct>
<cat>交易API</cat>
<name>RefundRemindTimeout</name>
<desc>退款超时结构</desc>
<props>
<prop>
<name>remind_type</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>提醒的类型（退款详情中提示信息的类型）</desc>
</prop>
<prop>
<name>exist_timeout</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否存在超时。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>timeout</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>超时时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<cat>交易API</cat>
<name>Order</name>
<desc>订单结构</desc>
<props>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>应付金额（商品价格 * 商品数量 + 手工调整金额 - 订单优惠金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>订单优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1.01</sample>
<desc>手工调整金额.格式为:1.01;单位:元;精确到小数点后两位.</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>买家实付金额（单笔子订单时包含物流费用，多笔子订单时不包含物流费用 ，付款后这个价格不会变化）。精确到2位小数，单位:元。如:200.07，表示:200元7分。规则为：total_fee*num - audjust_fee - discount_fee - refund_fee</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>订单修改时间，目前只有taobao.trade.ordersku.update会返回此字段。</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>152e442aefe88dd41cb0879232c0dcb0</sample>
<desc>商品的字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>sku_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>5937146</sample>
<desc>商品的最小库存单位Sku的id.可以通过taobao.item.sku.get获取详细的Sku信息</desc>
</prop>
<prop>
<name>sku_properties_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>颜色:桔色;尺码:M</sample>
<desc>SKU的值。如：机身颜色:黑色;手机套餐:官方标配</desc>
</prop>
<prop>
<name>item_meal_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>M8原装电池:便携支架:M8专用座充:莫凡保护袋</sample>
<desc>套餐的值。如：M8原装电池:便携支架:M8专用座充:莫凡保护袋</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>10</sample>
<desc>购买数量。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>山寨版测试机器</sample>
<desc>商品标题</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://img08.taobao.net/bao/uploaded/i8/T1jVXXXePbXXaoPB6a_091917.jpg</sample>
<desc>商品图片的绝对路径</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>麦包包</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>碎银子</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>refund_status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>SUCCESS(退款成功)</sample>
<desc>退款状态。退款状态。可选值 WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意) WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货) WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货) SELLER_REFUSE_BUYER(卖家拒绝退款) CLOSED(退款关闭) SUCCESS(退款成功)</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>2231958349</sample>
<desc>子订单编号</desc>
</prop>
<prop>
<name>outer_iid</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>152e442aefe88dd41cb0879232c0dcb0</sample>
<desc>商家外部编码(可与商家外部系统对接)。外部商家自己定义的商品Item的id，可以通过taobao.items.custom.get获取商品的Item的信息</desc>
</prop>
<prop>
<name>outer_sku_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>81893848</sample>
<desc>外部网店自己定义的Sku编号</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>TRADE_NO_CREATE_PAY(没有创建支付宝交易)</sample>
<desc>订单状态。</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>T1mURbXopZXXXe3rLI.1257513712679_snap</sample>
<desc>订单快照URL</desc>
</prop>
<prop>
<name>snapshot</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>自定义值</sample>
<desc>订单快照详细信息</desc>
</prop>
<prop>
<name>timeout_action_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>订单超时到期时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>buyer_rate</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>买家是否已评价。可选值：true(已评价)，false(未评价)</desc>
</prop>
<prop>
<name>seller_rate</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>卖家是否已评价。可选值：true(已评价)，false(未评价)</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>2231958349</sample>
<desc>退款中的退款ID</desc>
</prop>
<prop>
<name>seller_type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>B（商城商家）</sample>
<desc>卖家类型，可选值为：B（商城商家），C（普通卖家）</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>2342344</sample>
<desc>商品数字ID</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>交易商品对应的类目ID</desc>
</prop>
<prop>
<name>is_oversold</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否超卖</desc>
</prop>
</props>
</struct>
<struct>
<cat>交易API</cat>
<name>Refund</name>
<desc>退款结构</desc>
<props>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>free</sample>
<desc>物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).</desc>
</prop>
<prop>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>83477</sample>
<desc>退款单号</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>2231884277</sample>
<desc>淘宝交易单号</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>2231884277</sample>
<desc>子订单号。如果是单笔交易oid会等于tid</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>2009101504179117</sample>
<desc>支付宝交易号</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>10.00</sample>
<desc>交易总金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>tbtest561</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>tbtest869</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>退款申请时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>更新时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>order_status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>BUYER_RECEIVED</sample>
<desc>退款对应的订单交易状态。 
可选值 
TRADE_NO_CREATE_PAY(没有创建支付宝交易)  
WAIT_BUYER_PAY(等待买家付款)  
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)  
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)  
TRADE_BUYER_SIGNED(买家已签收,货到付款专用)  
TRADE_FINISHED(交易成功)  
TRADE_CLOSED(交易关闭)  
TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭)  
ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY)  
ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)  
取自"http://open.taobao.com/dev/index.php/%E4%BA%A4%E6%98%93%E7%8A%B6%E6%80%81"</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>SUCCESS</sample>
<desc>退款状态。 
可选值 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
</prop>
<prop>
<name>good_status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>BUYER_RECEIVED</sample>
<desc>货物状态。可选值 
BUYER_NOT_RECEIVED (买家未收到货)  
BUYER_RECEIVED (买家已收到货)  
BUYER_RETURNED_GOODS (买家已退货)</desc>
</prop>
<prop>
<name>has_good_return</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>买家是否需要退货。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>10.00</sample>
<desc>退还金额(退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>支付给卖家的金额(交易总金额-退还给买家的金额)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>退还邮费</sample>
<desc>退款原因</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>11</sample>
<desc>退款说明</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>8f657c26a71ddd01b090dfbe5dbf4b0d</sample>
<desc>申请退款的商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>天堂伞龙井茶</sample>
<desc>商品标题</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>商品购买数量</desc>
</prop>
<prop>
<name>good_return_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>退货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>申通快递</sample>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>sid</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>123456789</sample>
<desc>退货运单号</desc>
</prop>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>杭州市西湖区华星路99号</sample>
<desc>卖家收货地址</desc>
</prop>
<prop>
<name>refund_remind_timeout</name>
<type>RefundRemindTimeout</type>
<level>Object</level>
<private>true</private>
<sample/>
<desc>退款超时结构RefundRemindTimeout</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>4345345</sample>
<desc>申请退款的商品数字编号</desc>
</prop>
</props>
</struct>
<struct>
<cat>交易API</cat>
<name>Trade</name>
<desc>交易结构</desc>
<props>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>交易结束时间。交易成功时间(更新交易状态为成功的同时更新)/确认收货时间或者交易关闭时间 。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>buyer_message</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>非常喜欢这款包</sample>
<desc>买家留言</desc>
</prop>
<prop>
<name>shipping_type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>free</sample>
<desc>创建交易时的物流方式（交易完成前，物流方式有可能改变，但系统里的这个字段一直不变）。可选值：ems, express, post, free, virtual。</desc>
</prop>
<prop>
<name>buyer_cod_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12.07</sample>
<desc>买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>seller_cod_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12.07</sample>
<desc>卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>express_agency_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>212.07</sample>
<desc>快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分</desc>
</prop>
<prop>
<name>alipay_warn_msg</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>抱歉，您还没有设置您的支付宝账户，&lt;a href="http://member1.taobao.com/member/manage_account.htm"&gt;请点击管理支付宝账户&lt;/a&gt;</sample>
<desc>淘宝下单成功了,但由于某种错误支付宝订单没有创建时返回的信息。taobao.trade.add接口专用</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>交易修改时间(用户对订单的任何修改都会更新此字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我在测试</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我在测试</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>麦包包</sample>
<desc>交易标题，以店铺名作为此标题的值。注:taobao.trades.get接口返回的Trade中的title是商品名称</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>fixed(一口价)</sample>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据  
可选值  
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
auto_delivery(自动发货)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>交易创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>152e442aefe88dd41cb0879232c0dcb0</sample>
<desc>商品字符串编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>200.07</sample>
<desc>商品价格。精确到2位小数；单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://img08.taobao.net/bao/uploaded/i8/T1jVXXXePbXXaoPB6a_091917.jpg</sample>
<desc>商品图片绝对途径</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>商品购买数量。取值范围：大于零的整数</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>2231958349</sample>
<desc>交易编号 (父订单的交易编号)</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>2009112081173831</sample>
<desc>支付宝交易号，如：2009112081173831</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>系统优惠金额（如打折，VIP，满就送等），精确到2位小数，单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>卖家手工调整金额，精确到2位小数，单位：元。如：200.07，表示：200元7分</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>T1mURbXopZXXXe3rLI.1257513712679_snap</sample>
<desc>交易快照地址</desc>
</prop>
<prop>
<name>snapshot</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>自定义值</sample>
<desc>交易快照详细信息</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>TRADE_NO_CREATE_PAY</sample>
<desc>交易状态。可选值: 
    * TRADE_NO_CREATE_PAY(没有创建支付宝交易) 
    * WAIT_BUYER_PAY(等待买家付款) 
    * WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
    * WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
    * TRADE_BUYER_SIGNED(买家已签收,货到付款专用) 
    * TRADE_FINISHED(交易成功) 
    * TRADE_CLOSED(交易关闭) 
    * TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) 
    * ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) 
    * ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)</desc>
</prop>
<prop>
<name>seller_rate</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>卖家是否已评价。可选值:true(已评价),false(未评价)</desc>
</prop>
<prop>
<name>buyer_rate</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>买家是否已评价。可选值:true(已评价),false(未评价)</desc>
</prop>
<prop>
<name>buyer_memo</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>上衣要大一号</sample>
<desc>买家备注（与淘宝网上订单的买家备注对应）</desc>
</prop>
<prop>
<name>seller_memo</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>好的</sample>
<desc>卖家备注（与淘宝网上订单的卖家备注对应）</desc>
</prop>
<prop>
<name>trade_memo</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>这是一次成功的交易</sample>
<desc>交易备注，通过taobao.trade.add接口创建</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>buyer_obtain_point_fee</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>0</sample>
<desc>买家获得积分,返点的积分。格式:100;单位:个</desc>
</prop>
<prop>
<name>point_fee</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>0</sample>
<desc>买家使用积分。格式:100;单位:个.</desc>
</prop>
<prop>
<name>real_point_fee</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>0</sample>
<desc>买家实际使用积分（扣除部分退款使用的积分）。格式:100;单位:个</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>商品金额（商品价格乘以数量的总金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>post_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>buyer_alipay_no</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>tbtest1063@taobaotest.com</sample>
<desc>买家支付宝账号</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>东方不败</sample>
<desc>收货人的姓名</desc>
</prop>
<prop>
<name>receiver_state</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>浙江省</sample>
<desc>收货人的所在省份</desc>
</prop>
<prop>
<name>receiver_city</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>杭州市</sample>
<desc>收货人的所在城市</desc>
</prop>
<prop>
<name>receiver_district</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>西湖区</sample>
<desc>收货人的所在地区</desc>
</prop>
<prop>
<name>receiver_address</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>淘宝城911号</sample>
<desc>收货人的详细地址</desc>
</prop>
<prop>
<name>receiver_zip</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>223700</sample>
<desc>收货人的邮编</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>13512501826</sample>
<desc>收货人的手机号码</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>13819175372</sample>
<desc>收货人的电话号码</desc>
</prop>
<prop>
<name>consign_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>卖家发货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>buyer_email</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>tbtest1064@taobaotest.com</sample>
<desc>买家邮件地址</desc>
</prop>
<prop>
<name>commission_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>seller_alipay_no</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>tbtest1063@taobaotest.com</sample>
<desc>卖家支付宝账号</desc>
</prop>
<prop>
<name>seller_mobile</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>13512501826</sample>
<desc>卖家手机</desc>
</prop>
<prop>
<name>seller_phone</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>13512501826</sample>
<desc>卖家电话</desc>
</prop>
<prop>
<name>seller_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>我在测试</sample>
<desc>卖家姓名</desc>
</prop>
<prop>
<name>seller_email</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>tbtest1063@taobaotest.com</sample>
<desc>卖家邮件地址</desc>
</prop>
<prop>
<name>available_confirm_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>交易中剩余的确认收货金额（这个金额会随着子订单确认收货而不断减少，交易成功后会变为零）。精确到2位小数;单位:元。如:200.07，表示:200 元7分</desc>
</prop>
<prop>
<name>has_post_fee</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否包含邮费。与available_confirm_fee同时使用。可选值:true(包含),false(不包含)</desc>
</prop>
<prop>
<name>received_payment</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>卖家实际收到的支付宝打款金额（由于子订单可以部分确认收货，这个金额会随着子订单的确认收货而不断增加，交易成功后等于买家实付款减去退款金额）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>cod_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12.07</sample>
<desc>货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>cod_status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>EW_CREATED(订单已创建)</sample>
<desc>货到付款物流状态。</desc>
</prop>
<prop>
<name>timeout_action_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>超时到期时间。格式:yyyy-MM-dd HH:mm:ss。业务规则： 
前提条件：只有在买家已付款，卖家已发货的情况下才有效 
如果申请了退款，那么超时会落在子订单上；比如说3笔ABC，A申请了，那么返回的是BC的列表, 主定单不存在 
如果没有申请过退款，那么超时会挂在主定单上；比如ABC，返回主定单，ABC的超时和主定单相同</desc>
</prop>
<prop>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否是3D淘宝交易</desc>
</prop>
<prop>
<name>orders</name>
<type>Order</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>订单列表</desc>
</prop>
<prop>
<name>buyer_flag</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>买家备注旗帜（与淘宝网上订单的买家备注旗帜对应）</desc>
</prop>
<prop>
<name>seller_flag</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>卖家备注旗帜（与淘宝网上订单的卖家备注旗帜对应）</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>3424234</sample>
<desc>商品数字编号</desc>
</prop>
<prop>
<name>promotion</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>hello world</sample>
<desc>交易促销详细信息</desc>
</prop>
<prop>
<name>promotion_details</name>
<type>PromotionDetail</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>优惠详情</desc>
</prop>
<prop>
<name>invoice_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>淘宝</sample>
<desc>发票抬头</desc>
</prop>
<prop>
<name>trade_from</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>WAP</sample>
<desc>交易来源。 
WAP(手机);HITAO(嗨淘);TOP(TOP平台);TAOBAO(普通淘宝)</desc>
</prop>
<prop>
<name>alipay_url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://trade.taobao.com/trade/pay.htm?biz_order_id=24004620017127&amp;biz_type=200&amp;ispayforanother=false</sample>
<desc>创建交易接口成功后，返回的支付url</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>PostageMode</name>
<desc>运费方式模板收费方式</desc>
<props>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>12312</sample>
<desc>运费模板ID</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>11</sample>
<desc>运费方式项id</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>平邮(post),快递公司(express),EMS(ems)</sample>
<desc>运费方式(目前提供):平邮(post),快递公司(express),EMS(ems)</desc>
</prop>
<prop>
<name>dests</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>110000</sample>
<desc>邮费子项涉及的地区,多个地区用逗号连接数量串;可以用taobao.areas.get接口获取.或者参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm 例 (110000,310000,320000,330000).就代表邮费子项涉  
及(北京,上海,江苏,浙江)四个地区.填写时要注意对照地区代码值,如果填入错误地区代码,将会出现错误信息.</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>运费单价</desc>
</prop>
<prop>
<name>increase</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>运费增价</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>Sku</name>
<desc>Sku结构</desc>
<props>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123</sample>
<desc>sku的id</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12345</sample>
<desc>sku所属商品数字id</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>1243:1215;5626:5125</sample>
<desc>sku的销售属性组合字符串（颜色，大小，等等，可通过类目API获取某类目下的销售属性）,格式是p1:v1;p2:v2</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>3</sample>
<desc>属于这个sku的商品的数量，</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>200.07</sample>
<desc>属于这个sku的商品的价格 取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>12345</sample>
<desc>商家设置的外部id</desc>
</prop>
<prop>
<name>created</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2009-11-04 15:24:43</sample>
<desc>sku创建日期 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2009-11-04 15:24:43</sample>
<desc>sku最后修改日期 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>normal</sample>
<desc>sku状态。 normal:正常 ；delete:删除</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>Video</name>
<desc>商品视频关联记录</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>视频关联记录的id，和商品相对应</desc>
</prop>
<prop>
<name>video_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>video的id，对应于视频在淘秀的存储记录</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://js.tudouui.com/bin/taobaoisv/TaoBaoPlayer.swf……</sample>
<desc>video的url连接地址。淘秀里视频记录里面存储的url地址</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>视频关联记录创建时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>视频关联记录修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>94bccd061369cba108c2665445235154</sample>
<desc>视频记录关联的商品的数字id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1497217011</sample>
<desc>视频记录所关联的商品的数字id</desc>
</prop>
</props>
</struct>
<struct>
<cat>店铺API</cat>
<name>ShopScore</name>
<desc>店铺动态评分信息</desc>
<props>
<prop>
<name>item_score</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>60</sample>
<desc>商品描述评分</desc>
</prop>
<prop>
<name>service_score</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>服务态度评分</desc>
</prop>
<prop>
<name>delivery_score</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>90</sample>
<desc>发货速度评分</desc>
</prop>
</props>
</struct>
<struct>
<cat>店铺API</cat>
<name>SellerCat</name>
<desc>店铺内卖家自定义类目</desc>
<props>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>manual_type</sample>
<desc>店铺类目类型：可选值：manual_type：手动分类，new_type：新品上价， tree_type：二三级类目树 ，property_type：属性叶子类目树， brand_type：品牌推广</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12345</sample>
<desc>卖家自定义类目编号</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12</sample>
<desc>父类目编号，值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>自定义类型名称</sample>
<desc>卖家自定义类目名称</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>xva1sdfxxx.jpg</sample>
<desc>链接图片地址</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>该类目在页面上的排序位置</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<cat>画报API</cat>
<name>PosterPicture</name>
<desc>画报图片结构</desc>
<props>
<prop>
<name>poster_id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>画报ID。</desc>
</prop>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>图片ID。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建时间。</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间。</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://www.taobao.com/XXXXXX</sample>
<desc>图片地址。</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>说明</sample>
<desc>相关说明。</desc>
</prop>
</props>
</struct>
<struct>
<cat>画报API</cat>
<name>Poster</name>
<desc>画报结构</desc>
<props>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>画报ID。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建时间。</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间。</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>图片标题</sample>
<desc>图片标题。</desc>
</prop>
<prop>
<name>short_title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>图片短标题</sample>
<desc>图片短标题。</desc>
</prop>
<prop>
<name>tags</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>tag1,tag2</sample>
<desc>画报相关标签，由逗号(',')分开，最多5个。</desc>
</prop>
<prop>
<name>weight</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>5</sample>
<desc>权重。-1 至 10 。10为最高。</desc>
</prop>
<prop>
<name>cover_urls</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://www.taobao.com/XXXXXX</sample>
<desc>封面路径。由逗号(',')分开，最多2个</desc>
</prop>
<prop>
<name>hits</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>画报的点击总数。</desc>
</prop>
<prop>
<name>channel_id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>画报所属频道id。</desc>
</prop>
</props>
</struct>
<struct>
<cat>画报API</cat>
<name>PosterChannel</name>
<desc>画报频道结构</desc>
<props>
<prop>
<name>wapurl</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://poster.wap.taobao.com/digital.htm</sample>
<desc>手机画报对应频道页的链接</desc>
</prop>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>频道ID号。</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>abc</sample>
<desc>频道名称。</desc>
</prop>
<prop>
<name>cn_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>中文名</sample>
<desc>频道的中文名称。</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>说明</sample>
<desc>频道的说明。</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://www.taobao.com/XXXXXX</sample>
<desc>淘宝频道链接地址。</desc>
</prop>
</props>
</struct>
<struct>
<cat>交易API</cat>
<name>TradeConfirmFee</name>
<desc>确认收货费用结构</desc>
<props>
<prop>
<name>confirm_fee</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>确认收货的金额(不包含邮费)。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>confirm_post_fee</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>需确认收货的邮费，当不是最后一笔收货或者没有邮费时是0.00。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>is_last_order</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否是最后一笔订单（只对子订单有效，当其他子订单都是交易完成时，返回true，否则false）</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>ItemImg</name>
<desc>ItemImg结构</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1645920</sample>
<desc>商品图片的id，和商品相对应</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg</sample>
<desc>图片链接地址</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<cat>店铺API</cat>
<name>ShopCat</name>
<desc>店铺类目</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12345678</sample>
<desc>类目编号</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>父类目编号，注：此类目指前台类目，值等于0：表示此类目为一级类目，值不等于0：表示此类目有父类目</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>名称</sample>
<desc>类目名称</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>该类目是否为父类目。即：该类目是否还有子类目</desc>
</prop>
</props>
</struct>
<struct>
<cat>产品API</cat>
<name>ProductPropImg</name>
<desc>产品属性图片</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>674443</sample>
<desc>产品属性图片ID</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>96899</sample>
<desc>图片所属产品的ID</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>颜色:红色表示为　1627207:28326</sample>
<desc>属性串(pid:vid),目前只有颜色属性.如:颜色:红色表示为　1627207:28326</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://host/image_path</sample>
<desc>图片地址.(绝对地址,格式:http://host/image_path)</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>2355</sample>
<desc>图片序号。产品里的图片展示顺序，数据越小越靠前。要求是正整数。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>添加时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间.格式:yyyy-mm-dd hh:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<cat>收费API</cat>
<name>GuarantyFund</name>
<desc>保证金</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123456</sample>
<desc>保证金编号</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>保证金类型（冻结保证金1，解冻保证金2，转移保证金3）</desc>
</prop>
<prop>
<name>amount</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123456</sample>
<desc>保证金金额</desc>
</prop>
<prop>
<name>balance</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>500</sample>
<desc>保证金余额</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123456</sample>
<desc>商家编号</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>商家昵称</sample>
<desc>商家昵称</desc>
</prop>
<prop>
<name>buyer_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123456</sample>
<desc>买家编号</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>买家昵称</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>35572326056594</sample>
<desc>淘宝交易号（主订单的编号）</desc>
</prop>
<prop>
<name>accuse_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123456</sample>
<desc>投诉编号（退款ID）</desc>
</prop>
<prop>
<name>operation_type</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5</sample>
<desc>保证金操作类型 (入驻商城冻结1，补缴保证金2，交易纠纷3，退出商城解冻4，提高保证金额度5，降低保证金额度6，人工解冻保证金7，人工转移保证金8，返点9)</desc>
</prop>
<prop>
<name>operation_action</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>保证金操作动作</sample>
<desc>保证金操作动作</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>备注</sample>
<desc>备注（一般为操作类型加上操作动作）</desc>
</prop>
<prop>
<name>creator</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>保证金创建者</sample>
<desc>保证金创建者</desc>
</prop>
<prop>
<name>operator</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>保证金操作者</sample>
<desc>保证金操作者</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>保证金创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>保证金修改时间</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>0</sample>
<desc>保证金状态（失败0，成功1）</desc>
</prop>
</props>
</struct>
<struct>
<cat>增量API</cat>
<name>NotifyRefund</name>
<desc>退款通知消息</desc>
<props>
<prop>
<name>rid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>退款编号</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>父订单退款交易编号</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>子订单退款交易编号</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我是一个用户名</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我是一个用户名</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>10.80</sample>
<desc>退款金额</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>RefundSuccess</sample>
<desc>退款操作所对应的退款增量消息状态  
可选值：  
RefundSuccess（退款成功）  
RefundClosed（退款关闭）  
RefundCreated（退款创建）  
RefundSellerAgreeAgreement（卖家同意退款协议）  
RefundSellerRefuseAgreement（卖家拒绝退款协议）  
RefundBuyerModifyAgreement（买家修改退款协议）  
RefundBuyerReturnGoods（买家退货给卖家）  
RefundCreateMessage（发表留言）  
RefundBlockMessage（屏蔽留言）  
RefundTimeoutRemind（退款超时提醒）</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
</props>
</struct>
<struct>
<cat>店铺API</cat>
<name>Shop</name>
<desc>店铺信息</desc>
<props>
<prop>
<name>sid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>44750468</sample>
<desc>店铺编号</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>店铺所属的类目编号</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>csuky</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我的店铺</sample>
<desc>店铺标题</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我的店铺的描述</sample>
<desc>店铺描述</desc>
</prop>
<prop>
<name>bulletin</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我的店铺的公告</sample>
<desc>店铺公告</desc>
</prop>
<prop>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>/e2/c0/T1KVXXXhGvt0L1upjX.jpg</sample>
<desc>店标地址。返回相对路径，可以用"http://logo.taobao.com/shop-logo"来拼接成绝对路径</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>开店时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>最后修改时间。格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>shop_score</name>
<type>ShopScore</type>
<level>Object</level>
<private>false</private>
<sample/>
<desc>店铺动态评分信息</desc>
</prop>
<prop>
<name>remain_count</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>9</sample>
<desc>剩余橱窗数量，对于C卖家返回甚于橱窗数，对于B卖家返回-1</desc>
</prop>
<prop>
<name>all_count</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12</sample>
<desc>总橱窗数量，对于C卖家返回总橱窗数，对于B卖家返回0</desc>
</prop>
<prop>
<name>used_count</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>3</sample>
<desc>已用的橱窗数量，对于C卖家返回已使用的橱窗数，对于B卖家返回-1</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>PropImg</name>
<desc>商品属性图片结构</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1646146</sample>
<desc>属性图片的id，和商品相对应</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg</sample>
<desc>图片链接地址</desc>
</prop>
<prop>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>1627207:28326</sample>
<desc>图片所对应的属性组合的字符串</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>图片放在第几张（多图时可设置）</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>图片创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
</props>
</struct>
<struct>
<cat>增量API</cat>
<name>NotifyTrade</name>
<desc>交易通知消息</desc>
<props>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>交易编号</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我是一个用户名</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我是一个用户名</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>payment</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>10.80</sample>
<desc>买家实付金额</desc>
</prop>
<prop>
<name>trade_mark</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>交易来源:top;交易来源:手机淘宝</sample>
<desc>交易信息中符合用户订阅的attributes标记的key1name:value1name;key2name:value2name;……标记串。必需在SubscribeMessage的attributes中订阅过的标记，并且交易上有此标记才会返回，否则此字段为空。返回值的keyname和valuename根据用户的自定义的key名称和value值别名返回。</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>cod</sample>
<desc>交易类型。除了交易超时提醒消息没有类型以外，其他消息都有交易类型。 
 
具体分类有：  
 
可选值  
ec（直冲）  
guarantee_trade（一口价、拍卖）  
auto_delivery（自动发货）  
cod（货到付款）  
independent_shop_trade（旺店标准版交易）  
independent_simple_trade（旺店入门版交易）  
shopex_trade（ShopEX版)  
netcn_trade（淘宝与万网合作版网）  
travel（旅游产品交易）  
fenxiao（分销平台交易）  
game_equipment（网游虚拟交易）</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>TradeClose</sample>
<desc>交易操作所对应的交易增量消息状态，对应与NotifyTrade的status字段  
 
可选值  
TradeCreate（创建交易）  
TradeModifyFee（修改交易费用）  
TradeCloseAndModifyDetailOrder（关闭或修改子订单）  
TradeClose（关闭交易）  
TradeBuyerPay（买家付款）  
TradeSellerShip（卖家发货）  
TradeDelayConfirmPay（延长收货时间）  
TradePartlyRefund（子订单退款成功）  
TradePartlyConfirmPay（子订单打款成功）  
TradeSuccess（交易成功）  
TradeTimeoutRemind（交易超时提醒）  
TradeRated（交易评价变更）  
TradeMemoModified（交易备注修改）  
TradeLogisticsAddressChanged（修改交易收货地址）  
TradeChanged（修改订单信息（SKU等））</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>交易修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
</props>
</struct>
<struct>
<cat>用户API</cat>
<name>UserSubscribe</name>
<desc>用户订购信息</desc>
<props>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>subscribeUser</sample>
<desc>订购状况。应用订购者：subscribeUser;尚未订购：unsubscribeUser；非法用户：invalidateUser</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>订购开始时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-31 00:00:00</sample>
<desc>订购结束时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>version_no</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>0-无版本信息；1-初级版；2-中级版；3-高级版</desc>
</prop>
</props>
</struct>
<struct>
<cat>增量API</cat>
<name>Subscription</name>
<desc>订阅类型</desc>
<props>
<prop>
<name>topic</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>trade</sample>
<desc>增量消息所属的主题。 
可选值  
trade（交易类型）  
item（商品类型）  
refund（退款类型）</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>ItemAdd</sample>
<desc>增量消息的状态（隶属于主题）。具体选值请见：商品消息状态、退款消息状态、交易消息状态中的说明。</desc>
</prop>
</props>
</struct>
<struct>
<cat>类目属性API</cat>
<name>Brand</name>
<desc>品牌</desc>
<props>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>3709439</sample>
<desc>对应属性的 pid:vid 串中的vid</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>测试品牌</sample>
<desc>vid的值</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>20000</sample>
<desc>品牌的属性id</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>品牌</sample>
<desc>品牌的属性名</desc>
</prop>
</props>
</struct>
<struct>
<cat>类目属性API</cat>
<name>ItemCat</name>
<desc>商品类目结构</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>50011999</sample>
<desc>商品所属类目ID</desc>
</prop>
<prop>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>0</sample>
<desc>父类目ID=0时，代表的是一级的类目</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>单方精油</sample>
<desc>类目名称</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>该类目是否为父类目(即：该类目是否还有子类目)</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>normal</sample>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>排列序号，表示同级类目的展现次序，如数值相等则按名称次序排列。取值范围:大于零的整数</desc>
</prop>
</props>
</struct>
<struct>
<cat>增量API</cat>
<name>AuthorizeMessage</name>
<desc>用户授权信息</desc>
<props>
<prop>
<name>app_key</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12023790</sample>
<desc>ISV的AppKey</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>我是一个用户名</sample>
<desc>授权用户的淘宝昵称</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>用户的授权开始时间。授权当天开始计算。start_date是每个授权周期开始的时间，如果这个周期没有结束用户就延长或修改了授权周期，这个开始时间是不会变的，除非这个周期结束以后再重新开始新的周期，这个字段才会被改变</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>用户的授权到期时间</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>用户创建授权给当前ISV的时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>用户的授权信息修改时间</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>normal</sample>
<desc>用户的授权状态：normal（正常），expired（过期）</desc>
</prop>
<prop>
<name>valid</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>用户的授权是否已经生效（生效表示能够收到变更消息）</desc>
</prop>
</props>
</struct>
<struct>
<cat>类目属性API</cat>
<name>PropValue</name>
<desc>属性值</desc>
<props>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>50010538</sample>
<desc>类目ID</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1627207</sample>
<desc>属性 ID</desc>
</prop>
<prop>
<name>prop_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>颜色</sample>
<desc>属性名</desc>
</prop>
<prop>
<name>vid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>3232483</sample>
<desc>属性值ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>军绿色</sample>
<desc>属性值</desc>
</prop>
<prop>
<name>name_alias</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>军绿色</sample>
<desc>属性值别名</desc>
</prop>
<prop>
<name>is_parent</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否为父类目属性</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>normal</sample>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>0</sample>
<desc>排列序号。取值范围:大于零的整数</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>Postage</name>
<desc>运费模板结构</desc>
<props>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>37181</sample>
<desc>运费模板ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>运费模板1</sample>
<desc>运费模板名称</desc>
</prop>
<prop>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>备注</sample>
<desc>备注</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建日期</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>最后修改日期</desc>
</prop>
<prop>
<name>post_price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>平邮收费</desc>
</prop>
<prop>
<name>post_increase</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>平邮加件收费</desc>
</prop>
<prop>
<name>express_price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>快递收费</desc>
</prop>
<prop>
<name>express_increase</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>快递加件费用</desc>
</prop>
<prop>
<name>ems_price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>EMS收费</desc>
</prop>
<prop>
<name>ems_increase</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>EMS加件费用</desc>
</prop>
<prop>
<name>postage_modes</name>
<type>PostageMode</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>运费方式模板收费方式。如果需要获取邮费子模板的相关数据，请设置为postage_mode.id,postage_mode.type,postage_mode.dests,postage_mode.price等形式</desc>
</prop>
</props>
</struct>
<struct>
<cat>增量API</cat>
<name>NotifyItem</name>
<desc>商品通知消息</desc>
<props>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>239482423</sample>
<desc>商品SKU编号</desc>
</prop>
<prop>
<name>sku_num</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>商品SKU库存</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>商品编号(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>商品数字编号</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>淘宝手机，500元一部</sample>
<desc>商品标题,不能超过60字节</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>我是一个用户名</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123</sample>
<desc>商品数量</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>ItemAdd</sample>
<desc>商品操作所对应的商品增量消息状态。 
可选值  
ItemAdd（新增商品）  
ItemUpshelf（上架商品）  
ItemDownshelf（下架商品）  
ItemDelete（删除商品）  
ItemUpdate（更新商品）  
ItemRecommendDelete（取消橱窗推荐商品）  
ItemRecommendAdd（橱窗推荐商品）  
ItemZeroStock（商品卖空）</desc>
</prop>
<prop>
<name>changed_fields</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>title,price</sample>
<desc>商品此次操作所变更的字段，以“,”分割，对应于商品Item的字段名称。目前支持title，price，num，item_img，prop_img，location，cid，approve_status， list_time几个字段的更改标记返回，其中“item_img，prop_img”会同时出现表示商品相关图片列表发生了修改</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>10.80</sample>
<desc>商品价格，格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
</props>
</struct>
<struct>
<cat>增量API</cat>
<name>SubscribeMessage</name>
<desc>ISV订阅信息</desc>
<props>
<prop>
<name>app_key</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12023790</sample>
<desc>ISV的应用AppKey</desc>
</prop>
<prop>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>ISV的订阅开始时间。订阅当天开始计算</desc>
</prop>
<prop>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>ISV的订阅到期时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>ISV的订阅信息修改时间</desc>
</prop>
<prop>
<name>subscriptions</name>
<type>Subscription</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>ISV的订阅消息类型列表。如果需要获取ISV的授权列表，传入subscription即可</desc>
</prop>
<prop>
<name>valid</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>ISV的订阅是否已经生效（生效表示能够正常接收消息等）</desc>
</prop>
<prop>
<name>notify_infos</name>
<type>NotifyInfo</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>ISV的主动发送消息列表。表示哪些消息需要主动发送给App。如果需要获取ISV的消息列表，传入notifyInfo即可</desc>
</prop>
<prop>
<name>notify_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://abc.def</sample>
<desc>App接受消息的地址</desc>
</prop>
<prop>
<name>user_role</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>seller</sample>
<desc>应用所属的用户分类。目前一共分为3种：all(一个用户所有的消息都能接收，包扩用户作为卖家和作为买家所关联的消息);seller(只能接收一个用户作为卖家所关联的消息);buyer(只能接收一个用户作为买家所关联的消息)。默认是all。 
目前的消息中，商品消息对此字段不敏感（不受买家卖家过滤），交易退款相关的消息会根据此字段进行存储</desc>
</prop>
<prop>
<name>attributes</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>from:wap:交易来源:手机淘宝;from:top:交易来源:top</sample>
<desc>此字段标记用户对于交易订单的过滤字段。字段格式key1:value1:key1name:value1name;key2:value2:key2name:value2name;……每个标记有4个部分：key(交易中标记的key)，value(交易中标记的value)，keyname(交易消息中标记的key的别名)，valuename(交易消息中标记的value的别名)，4个部分之间以冒号":"连接。不同标记之间以分号";"。连接默认此字段为空，表示不判断交易的标记，是要订阅的都存下来。如果此字段不为空，则根据定义的key和value对交易消息进行过滤。如果一个标记都没有命中，则此交易消息不被保存下来。</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>Item</name>
<desc>Item(商品)结构</desc>
<props>
<prop>
<name>detail_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://item.taobao.com/item.htm?id=4947813209</sample>
<desc>商品url</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1489161932</sample>
<desc>商品数字id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>Google test item</sample>
<desc>商品标题,不能超过60字节</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>tbtest561</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>fixed</sample>
<desc>商品类型(fixed:一口价;auction:拍卖)注：取消团购</desc>
</prop>
<prop>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>&lt;a href="http://open.taobao.com/dev/index.php/Sku"&gt;Sku&lt;/a&gt;列表。fields中只设置sku可以返回Sku结构体中所有字段，如果设置为sku.sku_id、sku.properties、sku.quantity等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>props_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>20000:3275069:品牌:盈讯;1753146:3485013:型号:F908;30606:112030:上市时间:2008年</sample>
<desc>商品属性名称。标识着props内容里面的pid和vid所对应的名称。格式为：pid1:vid1:pid_name1:vid_name1;pid2:vid2:pid_name2:vid_name2……(&lt;strong&gt;注：&lt;/strong&gt;&lt;font color="red"&gt;属性名称中的冒号":"被转换为："#cln#";  
分号";"被转换为："#scln#"
&lt;/font&gt;)</desc>
</prop>
<prop>
<name>promoted_service</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2</sample>
<desc>消保类型，多个类型以,分割。可取以下值：
2：假一赔三；4：7天无理由退换货；taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>132443</sample>
<desc>商品所属的叶子类目 id</desc>
</prop>
<prop>
<name>seller_cids</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2234445,3344466,446434</sample>
<desc>商品所属的店铺内卖家自定义类目列表</desc>
</prop>
<prop>
<name>props</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>135255:344454</sample>
<desc>商品属性 格式：pid:vid;pid:vid</desc>
</prop>
<prop>
<name>input_pids</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2432,5353,656425</sample>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
</prop>
<prop>
<name>input_str</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>耐克;耐克系列;科比系列;科比系列;2K5</sample>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5”，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过 3999字节。</desc>
</prop>
<prop>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>这是一个好商品</sample>
<desc>商品描述, 字数要大于5个字节，小于25000个字节</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg</sample>
<desc>商品主图片地址</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>8888</sample>
<desc>商品数量</desc>
</prop>
<prop>
<name>valid_thru</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>7</sample>
<desc>有效期,7或者14（默认是14天）</desc>
</prop>
<prop>
<name>list_time</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2009-10-22 14:22:06</sample>
<desc>上架时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>delist_time</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>下架时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>stuff_status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>new</sample>
<desc>商品新旧程度(全新:new，闲置:unused，二手：second)</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<private>false</private>
<sample/>
<desc>商品所在地</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>5.00</sample>
<desc>商品价格，格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>5.00</sample>
<desc>平邮费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>express_fee</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>5.00</sample>
<desc>快递费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>ems_fee</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>5.00</sample>
<desc>ems费用,格式：5.00；单位：元；精确到：分</desc>
</prop>
<prop>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>支持会员打折,true/false</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>seller</sample>
<desc>运费承担方式,seller（卖家承担），buyer(买家承担）</desc>
</prop>
<prop>
<name>has_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否有发票,true/false</desc>
</prop>
<prop>
<name>has_warranty</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否有保修,true/false</desc>
</prop>
<prop>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>橱窗推荐,true/false</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>商品修改时间（格式：yyyy-MM-dd HH:mm:ss）</desc>
</prop>
<prop>
<name>increment</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>0</sample>
<desc>加价幅度。如果为0，代表系统代理幅度。 
在竞拍中，为了超越上一个出价，会员需要在当前出价上增加金额，这个金额就是加价幅度。卖家在发布宝贝的时候可以自定义加价幅度，也可以让系统自动代理加价。系统自动代理加价的加价幅度随着当前出价金额的增加而增加，我们建议会员使用系统自动代理加价，并请买家在出价前看清楚加价幅度的具体金额。另外需要注意是，此功能只适用于拍卖的商品。 
以下是系统自动代理加价幅度表： 
当前价（加价幅度 ） 
1-40（ 1 ）、41-100（ 2 ）、101-200（5 ）、201-500 （10）、501-1001（15）、001-2000（25）、2001-5000（50）、5001-10000（100） 
10001以上         200</desc>
</prop>
<prop>
<name>approve_status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>onsale</sample>
<desc>商品上传后的状态。onsale出售中，instock库中</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>32</sample>
<desc>宝贝所属的运费模板ID，如果没有返回则说明没有使用运费模板</desc>
</prop>
<prop>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>85883030</sample>
<desc>宝贝所属产品的id(可能为空). 该字段可以通过taobao.products.search 得到</desc>
</prop>
<prop>
<name>auction_point</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>15</sample>
<desc>返点比例</desc>
</prop>
<prop>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>property</sample>
<desc>属性值别名</desc>
</prop>
<prop>
<name>item_imgs</name>
<type>ItemImg</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>商品图片列表(包括主图)。fields中只设置item_img可以返回ItemImg结构体中所有字段，如果设置为item_img.id、item_img.url、item_img.position等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>prop_imgs</name>
<type>PropImg</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>商品属性图片列表。fields中只设置prop_img可以返回PropImg结构体中所有字段，如果设置为prop_img.id、prop_img.url、prop_img.properties、prop_img.position等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>34143554352</sample>
<desc>商家外部编码(可与商家外部系统对接)</desc>
</prop>
<prop>
<name>is_virtual</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>虚拟商品的状态字段</desc>
</prop>
<prop>
<name>is_taobao</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否在淘宝显示</desc>
</prop>
<prop>
<name>is_ex</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否在外部网店显示</desc>
</prop>
<prop>
<name>is_timing</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否定时上架商品</desc>
</prop>
<prop>
<name>videos</name>
<type>Video</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>商品视频列表(目前只支持单个视频关联)。fields中只设置video可以返回Video结构体中所有字段，如果设置为video.id、video.video_id、 
video.url等形式就只会返回相应的字段</desc>
</prop>
<prop>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否是3D淘宝的商品</desc>
</prop>
<prop>
<name>score</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>2</sample>
<desc>商品所属卖家的信用等级数，1表示1心，2表示2心……，只有调用商品搜索:taobao.items.get和taobao.items.search的时候才能返回</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>22</sample>
<desc>商品30天交易量，只有调用商品搜索:taobao.items.get和taobao.items.search的时候才能返回</desc>
</prop>
<prop>
<name>one_station</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否淘1站商品</desc>
</prop>
<prop>
<name>second_kill</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>web_only</sample>
<desc>秒杀商品类型。打上秒杀标记的商品，用户只能下架并不能再上架，其他任何编辑或删除操作都不能进行。如果用户想取消秒杀标记，需要联系小二进行操作。如果秒杀结束需要自由编辑请联系活动负责人（小二）去掉秒杀标记。可选类型 
web_only(只能通过web网络秒杀) 
wap_only(只能通过wap网络秒杀) 
web_and_wap(既能通过web秒杀也能通过wap秒杀)</desc>
</prop>
<prop>
<name>auto_fill</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>time_card</sample>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： 
time_card(点卡软件代充) 
fee_card(话费软件代充)</desc>
</prop>
<prop>
<name>violation</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>商品是否违规，违规：true , 不违规：false</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>Item的发布时间,暂时仅供taobao.item.add使用</desc>
</prop>
<prop>
<name>is_prepay</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>商品是否为先行赔付 
taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>ww_status</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>商品所属的商家的旺旺在线状况， 
taobao.items.search和taobao.items.vip.search专用</desc>
</prop>
<prop>
<name>wap_desc</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>Wap宝贝详情</sample>
<desc>不带html标签的desc文本信息，该字段只在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>wap_detail_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://auction1.wap.taobao.com/auction/item_detail-0db0-1234567.jhtml</sample>
<desc>适合wap应用的商品详情url ，该字段只在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123</sample>
<desc>售后服务ID,该字段紧在taobao.item.get接口中返回</desc>
</prop>
<prop>
<name>cod_postage_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>53899</sample>
<desc>货到付款运费模板ID</desc>
</prop>
<prop>
<name>sell_promise</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否承诺退换货服务!</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>ItemCategory</name>
<desc>商品查询分类结果</desc>
<props>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>2132342</sample>
<desc>分类ID</desc>
</prop>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>100</sample>
<desc>商品数量</desc>
</prop>
</props>
</struct>
<struct>
<cat>类目属性API</cat>
<name>SellerAuthorize</name>
<desc>授权</desc>
<props>
<prop>
<name>item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>类目列表</desc>
</prop>
<prop>
<name>brands</name>
<type>Brand</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>品牌列表</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>Msg</name>
<desc>聊天消息内容</desc>
<props>
<prop>
<name>direction</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>direction=0为from_id发送消息给to_id，direction=1为to_id发送消息给from_id</desc>
</prop>
<prop>
<name>time</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>2010-03-24</sample>
<desc>消息日期</desc>
</prop>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>你好，在吗？</sample>
<desc>消息内容</desc>
</prop>
</props>
</struct>
<struct>
<cat>类目属性API</cat>
<name>ItemProp</name>
<desc>商品属性</desc>
<props>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>20000</sample>
<desc>属性 ID 例：品牌的PID=20000</desc>
</prop>
<prop>
<name>parent_pid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>10000</sample>
<desc>上级属性ID</desc>
</prop>
<prop>
<name>parent_vid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>24455</sample>
<desc>上级属性值ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>颜色</sample>
<desc>属性名</desc>
</prop>
<prop>
<name>is_key_prop</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否关键属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_sale_prop</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否销售属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_color_prop</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否颜色属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_enum_prop</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否枚举属性。可选值:true(是),false(否)。如果返回true，属性值是下拉框选择输入，如果返回false，属性值是用户自行手工输入。</desc>
</prop>
<prop>
<name>is_input_prop</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>is_item_prop</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否商品属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>must</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>发布产品或商品时是否为必选属性。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>multi</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>发布产品或商品时是否可以多选。可选值:true(是),false(否)</desc>
</prop>
<prop>
<name>prop_values</name>
<type>PropValue</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc/>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>normal</sample>
<desc>状态。可选值:normal(正常),deleted(删除)</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>排列序号。取值范围:大于零的整排列序号。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>child_template</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>SomeTemplate</sample>
<desc>子属性的模板（卖家自行输入属性时需要用到）</desc>
</prop>
<prop>
<name>is_allow_alias</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否允许别名。可选值：true（是），false（否）</desc>
</prop>
</props>
</struct>
<struct>
<cat>店铺API</cat>
<name>Picture</name>
<desc>图片</desc>
<props>
<prop>
<name>picture_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123</sample>
<desc>图片ID</desc>
</prop>
<prop>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12</sample>
<desc>图片分类ID</desc>
</prop>
<prop>
<name>picture_path</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://img07.taobaocdn.com/imgextra/i7/22670458/T2dD0kXb4cXXXXXXXX_!!22670458.jpg</sample>
<desc>返回的是绝对路径如：http://img07.taobaocdn.com/imgextra/i7/22670458/T2dD0kXb4cXXXXXXXX_!!22670458.jpg</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>title</sample>
<desc>图片标题</desc>
</prop>
<prop>
<name>sizes</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>图片大小,bite单位</desc>
</prop>
<prop>
<name>uid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1234567</sample>
<desc>卖家ID</desc>
</prop>
<prop>
<name>pixel</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>450x150</sample>
<desc>图片相素,格式:长x宽，如450x150</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>unfroze</sample>
<desc>图片状态,unfroze代表没有被冻结，froze代表被冻结,pass代表排查通过</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>上传时间</desc>
</prop>
<prop>
<name>gmt_modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间</desc>
</prop>
<prop>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否删除</desc>
</prop>
<prop>
<name>deleted</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>deleted</sample>
<desc>图片是否删除的标记</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>图片的创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>图片的修改时间</desc>
</prop>
</props>
</struct>
<struct>
<cat>物流API</cat>
<name>Area</name>
<desc>地址区域结构</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>255</sample>
<desc>标准行政区域代码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm.</desc>
</prop>
<prop>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>区域类型.area区域 1:country/国家;2:province/省/自治区/直辖市;3:city/地区(省下面的地级市);4:district/县/市(县级市)/区;abroad:海外. 比如北京市的area_type = 2,朝阳区是北京市的一个区,所以朝阳区的area_type = 4.</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>北京市</sample>
<desc>地域名称.如北京市,杭州市,西湖区,每一个area_id 都代表了一个具体的地区.</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>141141</sample>
<desc>父节点区域标识.如北京市的area_id是110100,朝阳区是北京市的一个区,所以朝阳区的parent_id就是北京市的area_id.</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>421403</sample>
<desc>具体一个地区的邮编</desc>
</prop>
</props>
</struct>
<struct>
<cat>物流API</cat>
<name>LogisticsCompany</name>
<desc>物流公司结构</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>44555</sample>
<desc>物流公司标识</desc>
</prop>
<prop>
<name>code</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>AB15555</sample>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>pingpaiming</sample>
<desc>物流公司简称</desc>
</prop>
</props>
</struct>
<struct>
<cat>物流API</cat>
<name>Shipping</name>
<desc>物流数据结构</desc>
<props>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>125555221</sample>
<desc>交易ID</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>huzh</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>ddd</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>delivery_start</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>预约取货开始时间</desc>
</prop>
<prop>
<name>delivery_end</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>预约取货结束时间</desc>
</prop>
<prop>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>1455858255</sample>
<desc>运单号.具体一个物流公司的运单号码.</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>连衣花裙</sample>
<desc>货物名称</desc>
</prop>
<prop>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>周锦</sample>
<desc>收件人姓名</desc>
</prop>
<prop>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>057188155188</sample>
<desc>收件人电话</desc>
</prop>
<prop>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1384567842</sample>
<desc>收件人手机号码</desc>
</prop>
<prop>
<name>location</name>
<type>Location</type>
<level>Object</level>
<private>true</private>
<sample/>
<desc>收件人地址信息(在传输请求参数Fields字段时，必须使用“receiver_location”才能返回此字段)</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>CREATED</sample>
<desc>物流订单状态,可选值: 
CREATED(订单已创建)  
RECREATED(订单重新创建)  
CANCELLED(订单已取消)  
CLOSED(订单关闭)  
SENDING(等候发送给物流公司)  
ACCEPTING(已发送给物流公司,等待接单)  
ACCEPTED(物流公司已接单)  
REJECTED(物流公司不接单)  
PICK_UP(物流公司揽收成功)  
PICK_UP_FAILED(物流公司揽收失败)  
LOST(物流公司丢单)  
REJECTED_BY_RECEIVER(对方拒签)  
ACCEPTED_BY_RECEIVER(对方已签收)</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>free</sample>
<desc>物流方式.可选值:free(卖家包邮),post(平邮),express(快递),ems(EMS).</desc>
</prop>
<prop>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>buyer</sample>
<desc>谁承担运费.可选值:buyer(买家承担),seller(卖家承担运费).</desc>
</prop>
<prop>
<name>seller_confirm</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>yes</sample>
<desc>卖家是否确认发货.可选值:yes(是),no(否).</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>sto</sample>
<desc>物流公司名称</desc>
</prop>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>返回发货是否成功。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>运单创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>运单修改时间</desc>
</prop>
</props>
</struct>
<struct>
<cat>评价API</cat>
<name>TradeRate</name>
<desc>评价列表</desc>
<props>
<prop>
<name>valid_score</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>评价信息是否用于记分， 
可取值：true(参与记分)和false(不参与记分)</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1234</sample>
<desc>交易ID</desc>
</prop>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1234</sample>
<desc>子订单ID</desc>
</prop>
<prop>
<name>role</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>seller</sample>
<desc>评价者角色.可选值:seller(卖家),buyer(买家)</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>张三</sample>
<desc>评价者昵称</desc>
</prop>
<prop>
<name>result</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>good</sample>
<desc>评价结果,可选值:good(好评),neutral(中评),bad(差评)</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2010-01-01 13:30:05</sample>
<desc>评价创建时间,格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>rated_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>李四</sample>
<desc>被评价者昵称</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>cdma冲值卡</sample>
<desc>商品标题</desc>
</prop>
<prop>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>200.07</sample>
<desc>商品价格,精确到2位小数;单位:元.如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>很快、很好</sample>
<desc>评价内容,最大长度:500个汉字</desc>
</prop>
<prop>
<name>reply</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>谢谢</sample>
<desc>评价解释,最大长度:500个汉字</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>FenxiaoSku</name>
<desc>分销产品</desc>
<props>
<prop>
<name>standard_price</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>20.23</sample>
<desc>市场价</desc>
</prop>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>jayzhou</sample>
<desc>SkuID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>如鞋子的sku：“红色，35”</sample>
<desc>名称</desc>
</prop>
<prop>
<name>cost_price</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>采购价格，单位：元</desc>
</prop>
<prop>
<name>quantity</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>库存</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>商家编码</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘客API</cat>
<name>TaobaokeReportMember</name>
<desc>淘宝客报表成员</desc>
<props>
<prop>
<name>commission_rate</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>1200</sample>
<desc>佣金比率。比如：1234代表12.34%</desc>
</prop>
<prop>
<name>real_pay_fee</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>123.12</sample>
<desc>实际支付金额</desc>
</prop>
<prop>
<name>app_key</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>12</sample>
<desc>应用授权码</desc>
</prop>
<prop>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>12</sample>
<desc>推广渠道</desc>
</prop>
<prop>
<name>trade_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>12</sample>
<desc>淘宝交易号</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>成交时间</desc>
</prop>
<prop>
<name>pay_price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>12.15</sample>
<desc>成交价格</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>12</sample>
<desc>商品ID</desc>
</prop>
<prop>
<name>item_title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>好</sample>
<desc>商品标题</desc>
</prop>
<prop>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>12</sample>
<desc>商品成交数量</desc>
</prop>
<prop>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>12</sample>
<desc>所购买商品的类目ID</desc>
</prop>
<prop>
<name>category_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12</sample>
<desc>所购买商品的类目名称</desc>
</prop>
<prop>
<name>shop_title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>很好</sample>
<desc>店铺名称</desc>
</prop>
<prop>
<name>commission</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>12.15</sample>
<desc>用户获得的佣金</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12</sample>
<desc>商品字符串ID(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>jayzhou</sample>
<desc>卖家昵称</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>Receiver</name>
<desc>收货人详细信息</desc>
<props>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>zhangsan</sample>
<desc>收货人全名。</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>057188155188</sample>
<desc>固定电话。</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1384567895</sample>
<desc>移动电话。</desc>
</prop>
<prop>
<name>address</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>浙江省杭州市西湖区华星路99号</sample>
<desc>收货人的详细地址信息</desc>
</prop>
<prop>
<name>district</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>西湖区</sample>
<desc>区/县</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>杭州</sample>
<desc>收货人的城市</desc>
</prop>
<prop>
<name>zip</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>310000</sample>
<desc>邮政编码</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>浙江</sample>
<desc>收货人所在省份</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>ItemSearch</name>
<desc>商品搜索</desc>
<props>
<prop>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>商品列表</desc>
</prop>
<prop>
<name>item_categories</name>
<type>ItemCategory</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>商品搜索分类</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘客API</cat>
<name>TaobaokeReport</name>
<desc>淘宝客报表</desc>
<props>
<prop>
<name>taobaoke_report_members</name>
<type>TaobaokeReportMember</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>淘宝客报表成员列表</desc>
</prop>
<prop>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>搜索到的结果的总条数</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>PurchaseOrder</name>
<desc>采购单及子采购单信息</desc>
<props>
<prop>
<name>supplier_memo</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>供应商信息描述</sample>
<desc>供应商备注（新增）</desc>
</prop>
<prop>
<name>fenxiao_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1001</sample>
<desc>分销平台产生的采购单主键</desc>
</prop>
<prop>
<name>pay_type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>ALIPAY_SURETY</sample>
<desc>支付方式：ALIPAY_SURETY（支付宝担保交易）、TRANSFER（转账汇款）、PREPAY（企业预存款）、SETTLEMENT（后期结算）</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>AGENT</sample>
<desc>分销方式：AGENT（代销）、DEALER（经销）</desc>
</prop>
<prop>
<name>supplier_from</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>values: taobao</sample>
<desc>供应商来源网站, values: taobao, alibaba</desc>
</prop>
<prop>
<name>supplier_username</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>zhangsan</sample>
<desc>供应商在来源网站的帐号名。</desc>
</prop>
<prop>
<name>distributor_from</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>taobao</sample>
<desc>分销商来源网站（暂时只有taobao）。</desc>
</prop>
<prop>
<name>distributor_username</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>zhangsan</sample>
<desc>分销商在来源网站的帐号名。</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>zhangsan</sample>
<desc>买家nick。</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>values:daixiao</sample>
<desc>采购单类型（代销、零批） values:daixiao,lingpi。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>采购单创建时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>555</sample>
<desc>采购单编号。</desc>
</prop>
<prop>
<name>distributor_memo</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>分销商留言。</sample>
<desc>分销商留言。</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>5588</sample>
<desc>支付宝交易号。</desc>
</prop>
<prop>
<name>total_fee</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>采购单总额（不含邮费,精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>采购单邮费。(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>distributor_payment</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>分销商实付金额。(精确到2位小数;单位:元。如:200.07，表示:200元7分 )</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>www.vancl.com</sample>
<desc>订单快照URL</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>TRADE_FINISHED(交易成功)</sample>
<desc>交易状态。可选值:</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>consign_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>物流发货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>交易修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>sub_purchase_orders</name>
<type>SubPurchaseOrder</type>
<level>Object Array</level>
<private>true</private>
<sample>详细列表</sample>
<desc>子订单的详细信息列表。</desc>
</prop>
<prop>
<name>receiver</name>
<type>Receiver</type>
<level>Object</level>
<private>true</private>
<sample>详细信息</sample>
<desc>买家详细的信息。</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>FenxiaoProduct</name>
<desc>分销产品</desc>
<props>
<prop>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>100001</sample>
<desc>折扣ID（新增参数）</desc>
</prop>
<prop>
<name>trade_type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>AGENT</sample>
<desc>分销方式：AGENT（只做代销，默认值）、DEALER（只做经销）、ALL（代销和经销都做）</desc>
</prop>
<prop>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1255</sample>
<desc>产品ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>jayzhou</sample>
<desc>产品名称</desc>
</prop>
<prop>
<name>productcat_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>444</sample>
<desc>产品线ID</desc>
</prop>
<prop>
<name>standard_price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>5</sample>
<desc>采购价格，单位：元。</desc>
</prop>
<prop>
<name>cost_price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>5</sample>
<desc>采购价格，单位：元。</desc>
</prop>
<prop>
<name>retail_price_low</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>10.56</sample>
<desc>最低零售价，单位：分。</desc>
</prop>
<prop>
<name>retail_price_high</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>10.56</sample>
<desc>最高零售价，单位：分。</desc>
</prop>
<prop>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>4444</sample>
<desc>商家编码</desc>
</prop>
<prop>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>444</sample>
<desc>产品库存</desc>
</prop>
<prop>
<name>alarm_number</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>444</sample>
<desc>警戒库存</desc>
</prop>
<prop>
<name>pictures</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://img01.taobaocdn.com/xxx.jpg,http://img01.taobaocdn.com/xxx.jpg</sample>
<desc>产品图片路径</desc>
</prop>
<prop>
<name>desc_path</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://img03.taobaocdn.com/xxx.dpc</sample>
<desc>产品描述路径，通过http请求获取</desc>
</prop>
<prop>
<name>prov</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>浙江</sample>
<desc>所在地：省</desc>
</prop>
<prop>
<name>city</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>杭州</sample>
<desc>所在地：市</desc>
</prop>
<prop>
<name>postage_type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12</sample>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）</desc>
</prop>
<prop>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5545</sample>
<desc>运费模板ID</desc>
</prop>
<prop>
<name>postage_ordinary</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>10.56</sample>
<desc>平邮费用，单位：元</desc>
</prop>
<prop>
<name>postage_fast</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>10.56</sample>
<desc>快递费用，单位：元</desc>
</prop>
<prop>
<name>postage_ems</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>12.2</sample>
<desc>ems费用，单位：元</desc>
</prop>
<prop>
<name>have_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<private>true</private>
<sample>true</sample>
<desc>是否有发票，可选值：false（否）、true（是）</desc>
</prop>
<prop>
<name>have_guarantee</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否有保修，可选值：false（否）、true（是）</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>up</sample>
<desc>发布状态，可选值：up（上架）、down（下架）</desc>
</prop>
<prop>
<name>items_count</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5</sample>
<desc>下载人数</desc>
</prop>
<prop>
<name>orders_count</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5</sample>
<desc>累计采购次数</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>更新时间</desc>
</prop>
<prop>
<name>skus</name>
<type>FenxiaoSku</type>
<level>Object Array</level>
<private>true</private>
<sample>1</sample>
<desc>sku列表</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘客API</cat>
<name>TaobaokeItem</name>
<desc>淘宝客商品</desc>
<props>
<prop>
<name>commission_rate</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>1200</sample>
<desc>淘宝客佣金比率，比如：1234代表12.34%</desc>
</prop>
<prop>
<name>iid</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>234</sample>
<desc>淘宝客商品id(注意：iid近期即将废弃，请用num_iid参数)</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123</sample>
<desc>淘宝客商品数字id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>1212</sample>
<desc>商品title 宝贝名称</desc>
</prop>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>jayzhou</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://img01.taobaocdn.com/bao/uploaded/i1/T1GM8KXkheXXXz9q_b_093149.jpg</sample>
<desc>图片url</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>12.15</sample>
<desc>商品价格</desc>
</prop>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://s.click.taobao.com/.....&amp;p=mm_15999136_0_0&amp;n=19&amp;u=12001469</sample>
<desc>推广点击url</desc>
</prop>
<prop>
<name>commission</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>12.15</sample>
<desc>淘宝客佣金</desc>
</prop>
<prop>
<name>commission_num</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>123</sample>
<desc>累计成交量.注：返回的数据是30天内累计推广量</desc>
</prop>
<prop>
<name>commission_volume</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>12.15</sample>
<desc>累计总支出佣金量</desc>
</prop>
<prop>
<name>shop_click_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://s.click.taobao.com/.....&amp;p=mm_15999136_0_0&amp;n=19&amp;u=12001469</sample>
<desc>商品所在店铺的推广点击url</desc>
</prop>
<prop>
<name>seller_credit_score</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12</sample>
<desc>卖家信用等级</desc>
</prop>
<prop>
<name>item_location</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>北京</sample>
<desc>商品所在地</desc>
</prop>
<prop>
<name>volume</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>30天内交易量</desc>
</prop>
<prop>
<name>taobaoke_cat_click_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://www.taobao.com</sample>
<desc>淘宝客类目推广URL</desc>
</prop>
<prop>
<name>keyword_click_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://www.taobao.com</sample>
<desc>淘宝客关键词搜索URL</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘客API</cat>
<name>TaobaokeShop</name>
<desc>淘宝客店铺</desc>
<props>
<prop>
<name>user_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1212</sample>
<desc>店铺用户id</desc>
</prop>
<prop>
<name>shop_title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>好</sample>
<desc>店铺名称</desc>
</prop>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://blog.open.taobao.com</sample>
<desc>店铺推广URL</desc>
</prop>
<prop>
<name>commission_rate</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>12%</sample>
<desc>淘宝客店铺佣金比率</desc>
</prop>
<prop>
<name>seller_credit</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>14</sample>
<desc>店铺掌柜信用等级</desc>
</prop>
<prop>
<name>shop_type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>B</sample>
<desc>店铺类型 B=商城卖家 C=普通卖家</desc>
</prop>
<prop>
<name>total_auction</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>200</sample>
<desc>累计推广量</desc>
</prop>
<prop>
<name>auction_count</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>店铺内商品总数</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>SubPurchaseOrder</name>
<desc>子采购单详细信息</desc>
<props>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>WAIT_BUYER_PAY(等待买家付款)</sample>
<desc>交易状态&lt;br&gt; 
等待买家付款WAIT_BUYER_PAY&lt;br&gt; 
等待专家发货WAIT_SELLER_SEND_GOODS&lt;br&gt; 
等待买家确认收货WAIT_BUYER_CONFIRM_GOODS&lt;br&gt; 
交易完成TRADE_FINISHED&lt;br&gt; 
交易结束TRADE_CLOSED&lt;br&gt; 
已退款TRADE_REFUNDED&lt;br&gt; 
退款中TRADE_REFUNDING&lt;br&gt;</desc>
</prop>
<prop>
<name>refund_fee</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>12.23</sample>
<desc>退款金额</desc>
</prop>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5552</sample>
<desc>子采购单id，淘宝交易主键，采购单未付款时为0.</desc>
</prop>
<prop>
<name>fenxiao_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1000</sample>
<desc>分销平台的子采购单主键</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5555</sample>
<desc>分销平台上商品id</desc>
</prop>
<prop>
<name>item_outer_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>555</sample>
<desc>分销平台上商品商家编码。</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>555</sample>
<desc>商品的SKU id。</desc>
</prop>
<prop>
<name>sku_outer_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>5555</sample>
<desc>SKU商家编码。</desc>
</prop>
<prop>
<name>sku_properties</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>颜色:红色</sample>
<desc>SKU属性值。如: 颜色:红色:别名;尺码:L:别名</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>50</sample>
<desc>商品购买数量。取值范围:大于零的整数</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>裙子</sample>
<desc>商品标题。</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>50</sample>
<desc>单个商品价格。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>snapshot_url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>www.vancl.com</sample>
<desc>快照地址。</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建时间。格式 yyyy-MM-dd HH:mm:ss 。</desc>
</prop>
<prop>
<name>total_fee</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>分销商应付金额。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>distributor_payment</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>分销商实付金额。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
<prop>
<name>buyer_payment</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>买家实付金额。（精确到2位小数;单位:元。如:200.07，表示:200元7分）</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>ProductCat</name>
<desc>产品线</desc>
<props>
<prop>
<name>id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>a</sample>
<desc>产品线ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>d</sample>
<desc>产品线名称</desc>
</prop>
<prop>
<name>product_num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>10</sample>
<desc>产品数量</desc>
</prop>
</props>
</struct>
<struct>
<cat>店铺API</cat>
<name>PictureCategory</name>
<desc>图片分类</desc>
<props>
<prop>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1234</sample>
<desc>图片分类ID</desc>
</prop>
<prop>
<name>picture_category_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>名称</sample>
<desc>图片分类名</desc>
</prop>
<prop>
<name>type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>sys-fixture</sample>
<desc>图片分类型别，sys-fixture代表店铺装修分类(系统分类)，sys-auction代表宝贝图片分类(系统分类)，user-define代表用户自定义分类</desc>
</prop>
<prop>
<name>total</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>分类下的图片数</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>图片类目的创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>图片分类的修改时间</desc>
</prop>
<prop>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>图片分类排序</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>0</sample>
<desc>一级分类的parent_id为0 
二级分类的则为其父分类的picture_category_id</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>Distributor</name>
<desc>分销API返回数据结构</desc>
<props>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>分销商创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>alipay_account</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>hz0799@163.com</sample>
<desc>分销商的支付宝帐户</desc>
</prop>
<prop>
<name>contact_person</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>赵六</sample>
<desc>联系人</desc>
</prop>
<prop>
<name>distributor_id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>10001</sample>
<desc>分销商Id</desc>
</prop>
<prop>
<name>distributor_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>王二</sample>
<desc>分销商姓名</desc>
</prop>
<prop>
<name>email</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>abc@126.com</sample>
<desc>分销商的email</desc>
</prop>
<prop>
<name>mobile_phone</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>13737631234</sample>
<desc>分销商的手机号</desc>
</prop>
<prop>
<name>phone</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>0571-88156789-1098</sample>
<desc>分销商的电话</desc>
</prop>
<prop>
<name>shop_web_link</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://shopxxx.com</sample>
<desc>分销商的网店链接</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘客API</cat>
<name>TaobaokeItemDetail</name>
<desc>淘宝客商品详情</desc>
<props>
<prop>
<name>item</name>
<type>Item</type>
<level>Object</level>
<private>false</private>
<sample/>
<desc>商品详细信息. fields中需要设置Item下的字段,如设置:iid,detail_url等; 只设置item_detail,则不返回的Item下的所有信息.</desc>
</prop>
<prop>
<name>click_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://taobao.xxx.com</sample>
<desc>商品推广URL</desc>
</prop>
<prop>
<name>shop_click_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://easesou.taobao.com</sample>
<desc>商品所在的店铺的推广URL</desc>
</prop>
<prop>
<name>seller_credit_score</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>90</sample>
<desc>商品所属卖家的信用等级</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>WaitingTimesOnDay</name>
<desc>客户等待（客服）平均时长列表</desc>
<props>
<prop>
<name>waiting_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>等待时长（统计）日期</desc>
</prop>
<prop>
<name>waiting_time_by_ids</name>
<type>WaitingTimeById</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>等待时长列表</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>NonReplyStatOnDay</name>
<desc>未回复统计列表(按天)</desc>
<props>
<prop>
<name>nonreply_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>（某天的）未回复统计</desc>
</prop>
<prop>
<name>nonreply_stat_by_ids</name>
<type>NonreplyStatById</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>未回复统计列表</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>StaffEvalStatOnDay</name>
<desc>客服评价统计列表(按天)</desc>
<props>
<prop>
<name>eval_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>评价产生的日期</desc>
</prop>
<prop>
<name>staff_eval_stat_by_ids</name>
<type>StaffEvalStatById</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>客服评价统计列表</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>OnlineTimesOnDay</name>
<desc>某天的客服在线时长列表</desc>
<props>
<prop>
<name>online_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>在线日期</desc>
</prop>
<prop>
<name>online_time_by_ids</name>
<type>OnlineTimeById</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>在线时长列表</desc>
</prop>
</props>
</struct>
<struct>
<cat>增量API</cat>
<name>NotifyInfo</name>
<desc>表示需要主动发送的消息信息</desc>
<props>
<prop>
<name>topic</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>trade</sample>
<desc>增量消息所属的主题。可选值 trade（交易类型） item（商品类型） refund（退款类型）</desc>
</prop>
<prop>
<name>is_notify</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>TradeCreate</sample>
<desc>增量消息的状态（隶属于主题）。具体选值请见：商品消息状态、退款消息状态、交易消息状态中的说明。isNotify应为隶属于topic类型的子类型，比如topic为trade，则isNotify应为TradeCreate</desc>
</prop>
</props>
</struct>
<struct>
<cat>异步API</cat>
<name>Task</name>
<desc>批量异步任务结果</desc>
<props>
<prop>
<name>task_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12345</sample>
<desc>异步任务id。创建异步任务时返回的任务id号</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>done</sample>
<desc>异步任务处理状态。new（还未开始处理），doing（处理中），done（处理结束）。</desc>
</prop>
<prop>
<name>subtasks</name>
<type>Subtask</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>子任务处理结果，如果任务还没有处理完，返回的结果列表为空。如果任务处理完毕，返回子任务结果列表</desc>
</prop>
<prop>
<name>method</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>taobao.topats.trades.fullinfo.get</sample>
<desc>此任务是由哪个api产生的</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>任务创建时间</desc>
</prop>
<prop>
<name>download_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://download.api.taobao.com/download?id=bacnoiewothoi</sample>
<desc>大任务结果下载地址。当创建的认任务是大数据量的任务时，获取结果会返回此字段，同时subtasks列表会为空。 
通过这个地址可以下载到结果的结构体，格式同普通任务下载的一样。 
每次获取到的地址只能下载一次。</desc>
</prop>
</props>
</struct>
<struct>
<cat>收藏夹API</cat>
<name>CollectItem</name>
<desc>商品或店铺的信息</desc>
<props>
<prop>
<name>item_numid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>11111</sample>
<desc>商品或店铺的id号</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>金元宝</sample>
<desc>收藏目标的标题名字</desc>
</prop>
</props>
</struct>
<struct>
<cat>异步API</cat>
<name>Subtask</name>
<desc>批量异步任务的子任务结果</desc>
<props>
<prop>
<name>sub_task_request</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>{"tid":123456,"fields":"tid,seller_nick"}</sample>
<desc>子任务的有效请求参数，以json格式进行key:value的组合</desc>
</prop>
<prop>
<name>sub_task_result</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}</sample>
<desc>子任务返回的结果，以json格式进行key:value组合，可以和单个api请求结果解析复用。以获取交易订单详情为例：子任务执行成功返回的结果格式为：{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}；子任务执行失败结果格式为{"sub_code":"isv.trade-not-exist","sub_msg":"交易订单不存在"}</desc>
</prop>
<prop>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>标记子任务是否成功。为true表示子任务成功，用户可以按照正确执行的结果格式解析sub_task_result。为false表示子任务失败了，用户需要按照失败的结果格式解析sub_task_result（里面只有sub_code和sub_msg）</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>ReplyStatOnDay</name>
<desc>(某天)回复统计列表</desc>
<props>
<prop>
<name>reply_date</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>某天（的回复统计）</desc>
</prop>
<prop>
<name>reply_stat_by_ids</name>
<type>ReplyStatById</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>客服回复统计</desc>
</prop>
</props>
</struct>
<struct>
<cat>收费API</cat>
<name>ArticleUserSubscribe</name>
<desc>用户订购信息</desc>
<props>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>ts-123-1</sample>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>deadline</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>到期时间</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>状态，1=等待开通（有效） 2=开通（有效） 4=审核中（有效） 5=退款中（有效）  3=关闭（无效）</desc>
</prop>
</props>
</struct>
<struct>
<cat>收费API</cat>
<name>ArticleBizOrder</name>
<desc>应用订单信息</desc>
<props>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>hz0799</sample>
<desc>淘宝会员名</desc>
</prop>
<prop>
<name>article_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>阿里网店版</sample>
<desc>应用名称</desc>
</prop>
<prop>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>ts-123</sample>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</prop>
<prop>
<name>article_item_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>阿里网店版_批量续费</sample>
<desc>收费项目名称</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>ts-123-1</sample>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>gmt_create</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>订购时间</desc>
</prop>
<prop>
<name>order_cycle</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>1月</sample>
<desc>订购周期</desc>
</prop>
<prop>
<name>biz_type</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>订单类型，1=订购 2=续费 3=升级 4=后台赠送 5=自动续费 6=订单审核后生成</desc>
</prop>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>7000011</sample>
<desc>子订单号</desc>
</prop>
<prop>
<name>fee</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>10</sample>
<desc>原价</desc>
</prop>
<prop>
<name>prom_fee</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>5</sample>
<desc>优惠</desc>
</prop>
<prop>
<name>total_pay_fee</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>5</sample>
<desc>实付</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>FenxiaoGrade</name>
<desc>分销商等级</desc>
<props>
<prop>
<name>grade_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>100001</sample>
<desc>主键</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>第一级分销商</sample>
<desc>分销商等级名称</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>记录创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>记录最后修改时间</desc>
</prop>
</props>
</struct>
<struct>
<cat>交易API</cat>
<name>PromotionDetail</name>
<desc>交易的优惠信息详情</desc>
<props>
<prop>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>22331764490705</sample>
<desc>交易的主订单或子订单号</desc>
</prop>
<prop>
<name>promotion_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>满就减钱</sample>
<desc>优惠信息的名称</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>10.00</sample>
<desc>优惠金额（免运费、限时打折时为空）,单位：元</desc>
</prop>
<prop>
<name>gift_item_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>晨光签字笔</sample>
<desc>满就送商品时，所送商品的名称</desc>
</prop>
</props>
</struct>
<struct>
<cat>信息安全API</cat>
<name>KfcSearchResult</name>
<desc>KFC 关键词过滤匹配结果</desc>
<props>
<prop>
<name>matched</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否匹配到关键词,匹配到则为true.</desc>
</prop>
<prop>
<name>level</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>A</sample>
<desc>匹配到的关键词的等级，值为null，或为A、B、C、D。 
当匹配不到关键词时，值为null，否则值为A、B、C、D中的一个。 
A、B、C、D等级按严重程度从高至低排列。</desc>
</prop>
<prop>
<name>content</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>你好，***，世界</sample>
<desc>过滤后的文本： 
当匹配到B等级的词时，文本中的关键词被替换为*号，content即为关键词替换后的文本； 
其他情况，content始终为null</desc>
</prop>
</props>
</struct>
<struct>
<cat>画报API</cat>
<name>PosterGoodsInfo</name>
<desc>与对应画报相关联的商品的信息</desc>
<props>
<prop>
<name>num_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>商品id</desc>
</prop>
<prop>
<name>poster_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>画报id</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>吉他</sample>
<desc>商品标题</desc>
</prop>
<prop>
<name>short_title</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>吉他</sample>
<desc>商品短标题</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>false</private>
<sample>100.00</sample>
<desc>商品价格</desc>
</prop>
<prop>
<name>note</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>白</sample>
<desc>商品描述信息</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://auction1.wap.taobao.com/auction/item_detail--7040991384.htm?</sample>
<desc>手机上相应购买地址</desc>
</prop>
<prop>
<name>pic_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123</sample>
<desc>图片id</desc>
</prop>
</props>
</struct>
<struct>
<cat>收费API</cat>
<name>ArticleSub</name>
<desc>应用订购信息</desc>
<props>
<prop>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>hz0799</sample>
<desc>淘宝会员名</desc>
</prop>
<prop>
<name>article_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>阿里网店版</sample>
<desc>应用名称</desc>
</prop>
<prop>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>ts-123</sample>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
</prop>
<prop>
<name>article_item_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>阿里网店版_批量续费</sample>
<desc>收费项目名称</desc>
</prop>
<prop>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>ts-123-1</sample>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
</prop>
<prop>
<name>deadline</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>到期时间</desc>
</prop>
<prop>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>状态，1=等待开通（有效） 2=开通（有效） 4=审核中（有效） 5=退款中（有效） 3=关闭（无效）</desc>
</prop>
<prop>
<name>autosub</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否自动续费</desc>
</prop>
<prop>
<name>expire_notice</name>
<type>Boolean</type>
<level>Basic</level>
<private>false</private>
<sample>true</sample>
<desc>是否到期提醒</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>GroupMember</name>
<desc>组及其成员列表</desc>
<props>
<prop>
<name>group_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>group1</sample>
<desc>组名称</desc>
</prop>
<prop>
<name>member_list</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>cntaobaohello,cntaobaoabc</sample>
<desc>组成员列表，逗号分隔</desc>
</prop>
<prop>
<name>group_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>12345</sample>
<desc>组编号</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaSearchItems</name>
<desc>淘花商品列表</desc>
<props>
<prop>
<name>taohua_search_items</name>
<type>TaohuaSearchItem</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>淘花搜索商品对象列表数据结构</desc>
</prop>
<prop>
<name>cate_paths</name>
<type>TaohuaCategory</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>淘花类目路径数据结构</desc>
</prop>
<prop>
<name>cate_stats</name>
<type>TaohuaCateStat</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>搜索引擎根据搜索条件中的上一级类目统计出的子类目列表</desc>
</prop>
<prop>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>100</sample>
<desc>搜索出来的商品总数</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaItemPVPair</name>
<desc>商品属性值配对数据结构</desc>
<props>
<prop>
<name>taohua_cate_prop</name>
<type>TaohuaCateProp</type>
<level>Object</level>
<private>true</private>
<sample/>
<desc>淘花类目属性数据结构</desc>
</prop>
<prop>
<name>taohua_cate_prop_values</name>
<type>TaohuaCatePropValue</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>淘花类目属性值数据结构</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaSearchItem</name>
<desc>淘花搜索商品对象数据结构</desc>
<props>
<prop>
<name>favorite</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>156</sample>
<desc>描述用户对某一商品的喜欢程度，值越大，则表示越喜欢</desc>
</prop>
<prop>
<name>author</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>张爱玲</sample>
<desc>描述图书作者</desc>
</prop>
<prop>
<name>publish_date</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2011-03-16</sample>
<desc>描述图书出版日期</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123123</sample>
<desc>商品ID</desc>
</prop>
<prop>
<name>root_cate_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1233</sample>
<desc>根类目ID</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://img02.taobaocdn.com/bao/uploaded/i2/$!detail.picPath/T1Z8JhXn6EctP1upjX.jpg</sample>
<desc>商品图片链接</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>侠客行</sample>
<desc>商品标题</desc>
</prop>
<prop>
<name>two_level_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>武侠</sample>
<desc>二级类目的名称</desc>
</prop>
<prop>
<name>suffix</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>pdf</sample>
<desc>文档后缀名</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>石破天</sample>
<desc>商品描述信息</desc>
</prop>
<prop>
<name>shop_title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>淘花专卖</sample>
<desc>商品所属店铺名称</desc>
</prop>
<prop>
<name>seller_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>4984</sample>
<desc>淘花卖家的编号，注意：不是淘宝会员的编号。</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>兔斯基</sample>
<desc>卖家的淘宝nick</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>0.02</sample>
<desc>商品价格，单位：分</desc>
</prop>
<prop>
<name>doc_pages</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>22</sample>
<desc>文档总页数</desc>
</prop>
<prop>
<name>view_count</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1065</sample>
<desc>浏览量</desc>
</prop>
<prop>
<name>sell_count</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>11233</sample>
<desc>销量</desc>
</prop>
<prop>
<name>size</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>65000</sample>
<desc>文件大小，单位:byte</desc>
</prop>
</props>
</struct>
<struct>
<cat>物流API</cat>
<name>TransitStepInfo</name>
<desc>物流跟踪信息的一条</desc>
<props>
<prop>
<name>status_time</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>状态发生的时间</desc>
</prop>
<prop>
<name>status_desc</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>达到杭州物流集中地</sample>
<desc>状态描述</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaOrder</name>
<desc>淘花订单对象数据结构</desc>
<props>
<prop>
<name>order_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1233</sample>
<desc>订单编号</desc>
</prop>
<prop>
<name>modified</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>2010-12-27 10:48:00</sample>
<desc>最后修改时间</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://img02.taobaocdn.com/bao/uploaded/i2/$!detail.picPath/T1Z8JhXn6EctP1upjX.jpg</sample>
<desc>商品图片链接</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>侠客行</sample>
<desc>商品标题</desc>
</prop>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>0.02</sample>
<desc>商品价格</desc>
</prop>
<prop>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>淘花卖家</sample>
<desc>卖家昵称</desc>
</prop>
<prop>
<name>pay_status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>wait_pay</sample>
<desc>1、wait_pay:等待买家付款、 
2、timeout_close: 系统超时关闭、 　 
3、pay_suc:交易成功、　　　　　　 
4、uncreate_trade:没有创建外部交易（支付宝交易）、　 　　            
 　　　　　 
5、micropay_trade_close: 交易被淘宝微支付关闭、　 　　           　　　　　　　6、alipay_trade_close:交易被支付宝关闭、　 　　</desc>
</prop>
</props>
</struct>
<struct>
<cat>交易API</cat>
<name>OrderAmount</name>
<desc>子订单的帐务数据结构</desc>
<props>
<prop>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123456</sample>
<desc>子交易订单编号</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>山寨版测试机器</sample>
<desc>商品标题</desc>
</prop>
<prop>
<name>sku_properties_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>颜色:桔色;尺码:M</sample>
<desc>SKU的值。如：机身颜色:黑色;手机套餐:官方标配</desc>
</prop>
<prop>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>12</sample>
<desc>子交易订单中购买商品的数量</desc>
</prop>
<prop>
<name>price</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>商品价格。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>discount_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>子订单的系统优惠金额。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>adjust_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1.01</sample>
<desc>卖家手工调整的子订单的优惠金额.格式为:1.01;单位:元;精确到小数点后两位.</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>子订单实付金额。精确到2位小数，单位:元。如:200.07，表示:200元7分。计算公式如下：payment = price * num + adjust_fee - discount_fee + post_fee(邮费，单笔子订单时子订单实付金额包含邮费，多笔子订单时不包含邮费)；对于退款成功的子订单，如果其所属的主订单只有一笔交易，则payment的值按上面公式计算；如果其所属的主订单有多笔交易，则该子订单的payment值为0.00</desc>
</prop>
<prop>
<name>promotion_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>满就减钱</sample>
<desc>子订单的系统优惠的名称，对应于discount_fee的名称</desc>
</prop>
<prop>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>子订单对应的商品数字id</desc>
</prop>
<prop>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123456</sample>
<desc>子订单对应的商品的sku_id</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaItem</name>
<desc>淘花商品数据结构</desc>
<props>
<prop>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<private>true</private>
<sample>0.23</sample>
<desc>商品价格属性</desc>
</prop>
<prop>
<name>favorite</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1000</sample>
<desc>描述用户喜欢值</desc>
</prop>
<prop>
<name>author</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>张爱玲</sample>
<desc>描述图书作者信息</desc>
</prop>
<prop>
<name>publish_date</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2011-03-16</sample>
<desc>描述出版日期</desc>
</prop>
<prop>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>3364</sample>
<desc>商品ID</desc>
</prop>
<prop>
<name>file_type</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>epub</sample>
<desc>文件类型</desc>
</prop>
<prop>
<name>size</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>1024</sample>
<desc>文件大小，单位byte</desc>
</prop>
<prop>
<name>description</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>商品描述信息</sample>
<desc>商品描述信息</desc>
</prop>
<prop>
<name>root_cate_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>100</sample>
<desc>根类目ID</desc>
</prop>
<prop>
<name>root_cate_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>文档</sample>
<desc>根类目名称</desc>
</prop>
<prop>
<name>leaf_cate_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>33642</sample>
<desc>叶子类目的ID</desc>
</prop>
<prop>
<name>leaf_cate_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>武侠小说</sample>
<desc>叶子类目的名称</desc>
</prop>
<prop>
<name>status_name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>never_put_shelves</sample>
<desc>从未上架 never_put_shelves, 
上架put_shelves, 
小二下架down_shevles, 
删除delete, 
用户下架down_shevles_by_seller</desc>
</prop>
<prop>
<name>pic_url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://img02.taobaocdn.com/bao/uploaded/i2/$!detail.picPath/T1Z8JhXn6EctP1upjX.jpg</sample>
<desc>商品图片链接</desc>
</prop>
<prop>
<name>taohua_item_pv_pairs</name>
<type>TaohuaItemPVPair</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>淘花商品的属性值对数据结构</desc>
</prop>
<prop>
<name>title</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>淘花书籍</sample>
<desc>商品标题</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaOrders</name>
<desc>淘花订单列表</desc>
<props>
<prop>
<name>taohua_orders</name>
<type>TaohuaOrder</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>淘花用户已买到订单列表数据结构</desc>
</prop>
<prop>
<name>total_order</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>20</sample>
<desc>返回的订单列表的总数</desc>
</prop>
</props>
</struct>
<struct>
<cat>交易API</cat>
<name>TradeAmount</name>
<desc>交易订单的帐务信息详情</desc>
<props>
<prop>
<name>buyer_cod_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12.07</sample>
<desc>买家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>seller_cod_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12.07</sample>
<desc>卖家货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>express_agency_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>212.07</sample>
<desc>快递代收款。精确到2位小数;单位:元。如:212.07，表示:212元7分</desc>
</prop>
<prop>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>123456</sample>
<desc>交易主订单编号</desc>
</prop>
<prop>
<name>alipay_no</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>2009112081173831</sample>
<desc>支付宝交易号，如：2009112081173831</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>交易创建时间</desc>
</prop>
<prop>
<name>pay_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>付款时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>交易成功时间(更新交易状态为成功的同时更新)/确认收货时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</prop>
<prop>
<name>total_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>主订单的商品金额（各子订单中商品price * num的和，不包括任何优惠信息）。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>post_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>邮费。精确到2位小数;单位:元。如:200.07，表示:200元7分。目前只提供整笔交易的邮费，暂不提供各子订单的邮费</desc>
</prop>
<prop>
<name>cod_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>12.07</sample>
<desc>货到付款服务费。精确到2位小数;单位:元。如:12.07，表示:12元7分</desc>
</prop>
<prop>
<name>payment</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>主订单实付金额。精确到2位小数;单位:元。如:200.07，表示:200元7分，计算公式如下： 
如果主订单只有一笔子订单 payment = 子订单的实付金额 + 货到付款服务费(如果是货到付款订单) - 主订单的系统级优惠；如果主订单有多笔子订单 payment = 各子订单的实付金额之和 + 货到付款服务费(如果是货到付款订单) + 邮费 - 主订单的系统级优惠</desc>
</prop>
<prop>
<name>commission_fee</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>200.07</sample>
<desc>交易佣金。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
</prop>
<prop>
<name>buyer_obtain_point_fee</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>0</sample>
<desc>买家获得积分,返点的积分。格式:100;单位:个</desc>
</prop>
<prop>
<name>promotion_details</name>
<type>PromotionDetail</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>主交易订单的系统级优惠详情</desc>
</prop>
<prop>
<name>order_amounts</name>
<type>OrderAmount</type>
<level>Object Array</level>
<private>true</private>
<sample/>
<desc>子订单的帐务金额详情列表</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>NonreplyStatById</name>
<desc>客服未回复统计</desc>
<props>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>cntaobaohello</sample>
<desc>客服人员ID</desc>
</prop>
<prop>
<name>non_reply_num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>3</sample>
<desc>客服未回复数</desc>
</prop>
<prop>
<name>non_reply_customId</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>cntaobaohello,cntaobaoabc</sample>
<desc>客服人员未回复的客户ID</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>StaffEvalStatById</name>
<desc>客服评价统计</desc>
<props>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>cntaobaohello</sample>
<desc>客服人员ID</desc>
</prop>
<prop>
<name>evaluations</name>
<type>Evaluation</type>
<level>Object Array</level>
<private>true</private>
<sample>111,222,333</sample>
<desc>客服评价</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaUpdateInfo</name>
<desc>淘花终端软件版本更新信息接口</desc>
<props>
<prop>
<name>version</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>0.2</sample>
<desc>版本号</desc>
</prop>
<prop>
<name>url</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>http://www.taohua.com/sdjflsjd/cccc</sample>
<desc>最新下载地址</desc>
</prop>
<prop>
<name>message</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>有最新版本的软件</sample>
<desc>提示消息</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaCateStat</name>
<desc>淘花类目统计结构对象，  是搜索引擎统计返回回来的类目信息</desc>
<props>
<prop>
<name>cate_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>36</sample>
<desc>类目ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>小说</sample>
<desc>类目名称</desc>
</prop>
<prop>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>6000</sample>
<desc>当前类目下面的商品数量</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaCategory</name>
<desc>淘花类目对象</desc>
<props>
<prop>
<name>cate_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>6698</sample>
<desc>类目ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>文档</sample>
<desc>类目名称</desc>
</prop>
<prop>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>1</sample>
<desc>父类目ID</desc>
</prop>
<prop>
<name>cate_level</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>3</sample>
<desc>类目层级</desc>
</prop>
<prop>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>2</sample>
<desc>排序值</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaCatePropValue</name>
<desc>淘花类目属性值对象结构</desc>
<props>
<prop>
<name>value_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>669</sample>
<desc>属性值id</desc>
</prop>
<prop>
<name>prop_value</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>小刀</sample>
<desc>属性值</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaCateProp</name>
<desc>淘花类目属性结构</desc>
<props>
<prop>
<name>prop_id</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>365</sample>
<desc>属性结构</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>作者</sample>
<desc>属性名称</desc>
</prop>
</props>
</struct>
<struct>
<cat>营销API</cat>
<name>CouponDetail</name>
<desc>优惠券详细信息</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>张三</sample>
<desc>买家的昵称</desc>
</prop>
<prop>
<name>channel</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>rewardforgifts</sample>
<desc>优惠券的发放渠道：渠道有rewardforgifts：满就送，marketingMessage：营销消息，activityofget：活动领取，createActivity：创建活动，ISV</desc>
</prop>
<prop>
<name>state</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>Unused</sample>
<desc>优惠券使用情况Unused：未使用using：使用中used：已使用</desc>
</prop>
</props>
</struct>
<struct>
<cat>营销API</cat>
<name>Activity</name>
<desc>活动数据结构</desc>
<props>
<prop>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>88744</sample>
<desc>活动id</desc>
</prop>
<prop>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>8554</sample>
<desc>活动对应的优惠券ID</desc>
</prop>
<prop>
<name>total_count</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>50</sample>
<desc>卖家设置优惠券领取的总领用量</desc>
</prop>
<prop>
<name>applied_count</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>50</sample>
<desc>已经领取的优惠券的数量</desc>
</prop>
<prop>
<name>person_limit_count</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>4</sample>
<desc>每个买家限领取优惠券的数量，1～5张</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>enabled</sample>
<desc>enabled代表有效，invalid代表失效。如果是空代表任意</desc>
</prop>
<prop>
<name>activity_url</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>http://ecrm.taobao</sample>
<desc>领用优惠券的链接</desc>
</prop>
<prop>
<name>create_user</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>self</sample>
<desc>self代表自己创建，other他人创建</desc>
</prop>
</props>
</struct>
<struct>
<cat>营销API</cat>
<name>Coupon</name>
<desc>优惠券数据结构</desc>
<props>
<prop>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123456</sample>
<desc>优惠券ID</desc>
</prop>
<prop>
<name>denominations</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>500</sample>
<desc>优惠券的面值，返回的是“分”，不是“元”，500代表500分相当于5元</desc>
</prop>
<prop>
<name>creat_time</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>优惠券创建时间</desc>
</prop>
<prop>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>优惠券的截止日期</desc>
</prop>
<prop>
<name>condition</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>501</sample>
<desc>订单满多少分才能用这个优惠券，501就是满501分能使用。注意：返回的是“分”，不是“元”</desc>
</prop>
<prop>
<name>create_channel</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>自己创建</sample>
<desc>优惠券的创建渠道，自己创建/他人创建</desc>
</prop>
</props>
</struct>
<struct>
<cat>商品API</cat>
<name>AfterSale</name>
<desc>卖家设置售后服务对象</desc>
<props>
<prop>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>1</sample>
<desc>id</desc>
</prop>
<prop>
<name>after_sale_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>售后服务模板1</sample>
<desc>名称</desc>
</prop>
<prop>
<name>after_sale_path</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>bqerqre67</sample>
<desc>tfs地址</desc>
</prop>
</props>
</struct>
<struct>
<cat>营销API</cat>
<name>ErrorMessage</name>
<desc>未发放成功买家昵称，发放失败原因</desc>
<props>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>张三</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>reason</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>买家不存在</sample>
<desc>发送失败的原因</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaItemComment</name>
<desc>指定商品评论</desc>
<props>
<prop>
<name>comment</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>哇，这片子不错</sample>
<desc>商品评论的具体内容</desc>
</prop>
<prop>
<name>comment_date</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>评论发表时间</desc>
</prop>
<prop>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>qy_test0</sample>
<desc>评论人</desc>
</prop>
</props>
</struct>
<struct>
<cat>物流API</cat>
<name>PartnerDetail</name>
<desc>物流公司详细信息</desc>
<props>
<prop>
<name>account_no</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2088001497872884015</sample>
<desc>物流公司支付宝账号</desc>
</prop>
<prop>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>STO</sample>
<desc>物流公司代码</desc>
</prop>
<prop>
<name>company_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>100</sample>
<desc>物流公司id</desc>
</prop>
<prop>
<name>full_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>申通快递有限公司</sample>
<desc>物流公司全名</desc>
</prop>
<prop>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>申通E物流</sample>
<desc>物流公司简称</desc>
</prop>
<prop>
<name>wangwang_id</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>申通在线客服</sample>
<desc>旺旺id</desc>
</prop>
</props>
</struct>
<struct>
<cat>淘花API</cat>
<name>TaohuaItemCommentResult</name>
<desc>淘花商品评论</desc>
<props>
<prop>
<name>taohua_item_comments</name>
<type>TaohuaItemComment</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>淘花商品评论列表</desc>
</prop>
<prop>
<name>total_comment_num</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>10</sample>
<desc>评论总数</desc>
</prop>
</props>
</struct>
<struct>
<cat>营销API</cat>
<name>Member</name>
<desc>卖家会员信息</desc>
<props>
<prop>
<name>buyer_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>685587</sample>
<desc>买家数字ID</desc>
</prop>
<prop>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>张三</sample>
<desc>买家昵称</desc>
</prop>
<prop>
<name>member_grade</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>general</sample>
<desc>买家会员级别 general：普通会员 senior ：高级会员 vip：VIP会员 king：至尊VIP</desc>
</prop>
<prop>
<name>trade_amount</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>5000</sample>
<desc>总交易额用分表示</desc>
</prop>
<prop>
<name>trade_count</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>200</sample>
<desc>总交易量：会员在该卖家的交易笔数</desc>
</prop>
<prop>
<name>laste_time</name>
<type>Date</type>
<level>Basic</level>
<private>true</private>
<sample>2000-01-01 00:00:00</sample>
<desc>上次交易时间：会员在该卖家店铺最后的交易时间</desc>
</prop>
<prop>
<name>status</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>normal</sample>
<desc>状态： 
normal：正常 
deleted：删除 
blacklist ：黑名单</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>Discount</name>
<desc>折扣信息</desc>
<props>
<prop>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>123</sample>
<desc>折扣ID</desc>
</prop>
<prop>
<name>name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>一级会员</sample>
<desc>折扣名称</desc>
</prop>
<prop>
<name>details</name>
<type>DiscountDetail</type>
<level>Object Array</level>
<private>false</private>
<sample/>
<desc>折扣详情</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间</desc>
</prop>
</props>
</struct>
<struct>
<cat>分销API</cat>
<name>DiscountDetail</name>
<desc>折扣详情信息</desc>
<props>
<prop>
<name>detail_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>456</sample>
<desc>折扣详情ID</desc>
</prop>
<prop>
<name>target_type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>GRADE</sample>
<desc>折扣类型:GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠）</desc>
</prop>
<prop>
<name>target_id</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>789</sample>
<desc>会员等级的id或者分销商id</desc>
</prop>
<prop>
<name>target_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>一级会员</sample>
<desc>等级名称或者分销商名称</desc>
</prop>
<prop>
<name>discount_type</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>PERCENT</sample>
<desc>优惠方式:PERCENT（按折扣优惠）、PRICE（按减价优惠）</desc>
</prop>
<prop>
<name>discount_value</name>
<type>Number</type>
<level>Basic</level>
<private>false</private>
<sample>10</sample>
<desc>优惠比率或者优惠价格 10%或10</desc>
</prop>
<prop>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>创建时间</desc>
</prop>
<prop>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<private>false</private>
<sample>2000-01-01 00:00:00</sample>
<desc>修改时间</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>Evaluation</name>
<desc>客服评价</desc>
<props>
<prop>
<name>evaluation_name</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>一般</sample>
<desc>客服评价内容</desc>
</prop>
<prop>
<name>evaluation_num</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>2</sample>
<desc>评价数量</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>OnlineTimeById</name>
<desc>在线时长</desc>
<props>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>cntaobaohello</sample>
<desc>客服人员ID</desc>
</prop>
<prop>
<name>online_times</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>126</sample>
<desc>客服在线时间长度（秒）</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>WaitingTimeById</name>
<desc>平均等待时长</desc>
<props>
<prop>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>cntaobaohello</sample>
<desc>客服人员ID</desc>
</prop>
<prop>
<name>avg_waiting_times</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>56</sample>
<desc>平均等待时间长度（秒）</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>ReplyStatById</name>
<desc>客服回复统计</desc>
<props>
<prop>
<name>user_id</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>cntaobaohello</sample>
<desc>客服ID</desc>
</prop>
<prop>
<name>reply_num</name>
<type>Number</type>
<level>Basic</level>
<private>true</private>
<sample>3</sample>
<desc>客服回复数</desc>
</prop>
</props>
</struct>
<struct>
<cat>旺旺API</cat>
<name>Chatpeer</name>
<desc>聊天对象ID列表</desc>
<props>
<prop>
<name>uid</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>cntaobaotest</sample>
<desc>聊天对象用户ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
</prop>
<prop>
<name>date</name>
<type>String</type>
<level>Basic</level>
<private>true</private>
<sample>2010-02-01</sample>
<desc>聊天日期</desc>
</prop>
</props>
</struct>
<struct>
<cat>物流API</cat>
<name>LogisticsPartner</name>
<desc>物流公司信息</desc>
<props>
<prop>
<name>cover_remark</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>全境揽收</sample>
<desc>揽收说明信息</desc>
</prop>
<prop>
<name>uncover_remark</name>
<type>String</type>
<level>Basic</level>
<private>false</private>
<sample>乡村不派送</sample>
<desc>不可送达的说明信息</desc>
</prop>
<prop>
<name>partner</name>
<type>PartnerDetail</type>
<level>Object</level>
<private>false</private>
<sample/>
<desc>物流公司详细信息</desc>
</prop>
</props>
</struct>
</structs>
<apis>
<api>
<cat>用户API</cat>
<name>taobao.appstore.subscribe.get</name>
<cname>查询appstore应用订购关系</cname>
<authorize>不需用户授权</authorize>
<desc>查询appstore应用订购关系</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>用户昵称</desc>
<sample>tbtest110</sample>
<default/>
</param>
<param>
<name>lease_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>插件实例ID</desc>
<sample>14192</sample>
<default>0</default>
</param>
</request>
<response>
<param>
<name>user_subscribe</name>
<type>UserSubscribe</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>用户订购信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"appstore_subscribe_get_response":{"user_subscribe":{"status":"subscribeUser","start_date":"2000-01-01 00:00:00","end_date":"2000-01-31 00:00:00","version_no":1}}}]]></json>
<xml><![CDATA[<appstore_subscribe_get_response><user_subscribe><status>subscribeUser</status><start_date>2000-01-01 00:00:00</start_date><end_date>2000-01-31 00:00:00</end_date><version_no>1</version_no></user_subscribe></appstore_subscribe_get_response>]]></xml>
</sample>
</api>
<api>
<cat>用户API</cat>
<name>taobao.user.get</name>
<cname>获取单个用户信息</cname>
<authorize>可选用户授权</authorize>
<desc>得到单个用户</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：User结构体中的所有字段；以半角逗号(,)分隔。不支持：地址，真实姓名，身份证，手机，电话</desc>
<sample>user_id,nick,seller_credit</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>用户昵称，如果昵称为中文，请使用UTF-8字符集对昵称进行URL编码。</desc>
<sample>hz0799</sample>
<default/>
</param>
</request>
<response>
<param>
<name>user</name>
<type>User</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>用户信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"user_get_response":{"user":{"user_id":10001,"uid":"10001","nick":"hz0799","sex":"m","buyer_credit":{"level":1,"score":1,"total_num":1,"good_num":1},"seller_credit":{"level":1,"score":1,"total_num":1,"good_num":1},"location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"},"created":"2000-01-01 00:00:00","last_visit":"2000-01-01 00:00:00","birthday":"2000-01-01 00:00:00","type":"B","has_more_pic":true,"item_img_num":5,"item_img_size":1024,"prop_img_num":5,"prop_img_size":1024,"auto_repost":"unlimited","promoted_type":"authentication","status":"normal","alipay_bind":"bind","consumer_protection":true,"alipay_account":"hz0799@163.com","alipay_no":"10001"}}}]]></json>
<xml><![CDATA[<user_get_response><user><user_id>10001</user_id><uid>10001</uid><nick>hz0799</nick><sex>m</sex><buyer_credit><level>1</level><score>1</score><total_num>1</total_num><good_num>1</good_num></buyer_credit><seller_credit><level>1</level><score>1</score><total_num>1</total_num><good_num>1</good_num></seller_credit><location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></location><created>2000-01-01 00:00:00</created><last_visit>2000-01-01 00:00:00</last_visit><birthday>2000-01-01 00:00:00</birthday><type>B</type><has_more_pic>true</has_more_pic><item_img_num>5</item_img_num><item_img_size>1024</item_img_size><prop_img_num>5</prop_img_num><prop_img_size>1024</prop_img_size><auto_repost>unlimited</auto_repost><promoted_type>authentication</promoted_type><status>normal</status><alipay_bind>bind</alipay_bind><consumer_protection>true</consumer_protection><alipay_account>hz0799@163.com</alipay_account><alipay_no>10001</alipay_no></user></user_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>传入的nick不存在</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
</errors>
<faqs>
<faq>
<question>如何知道淘宝昵称是商城用户还是普通卖家用户?</question>
<answer>taobao.user.get返回值type字段的值：B(商城用户),C(普通卖家)</answer>
</faq>
<faq>
<question>taobao.user.get如何获得隐私数据？</question>
<answer>用户登陆后可以获取隐私数据,但不包括:location.address,real_name,id_card,phone,mobile,email</answer>
</faq>
</faqs>
</api>
<api>
<cat>用户API</cat>
<name>taobao.users.get</name>
<cname>获取多个用户信息</cname>
<authorize>不需用户授权</authorize>
<desc>传入多个淘宝会员帐号返回多个用户公开信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>查询字段：User数据结构的公开信息字段列表，以半角逗号(,)分隔</desc>
<sample>user_id,nick,location.city</sample>
<default/>
</param>
<param>
<name>nicks</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>用户昵称，多个以半角逗号(,)分隔，最多40个</desc>
<sample>hz0799,南古月</sample>
<default/>
</param>
</request>
<response>
<param>
<name>users</name>
<type>User</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>用户信息列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"users_get_response":{"users":{"user":[{"user_id":10001,"uid":"10001","nick":"hz0799","sex":"m","buyer_credit":{"level":1,"score":1,"total_num":1,"good_num":1},"seller_credit":{"level":1,"score":1,"total_num":1,"good_num":1},"location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"},"created":"2000-01-01 00:00:00","last_visit":"2000-01-01 00:00:00","birthday":"2000-01-01 00:00:00","type":"B","has_more_pic":true,"item_img_num":5,"item_img_size":1024,"prop_img_num":5,"prop_img_size":1024,"auto_repost":"unlimited","promoted_type":"authentication","status":"normal","alipay_bind":"bind","consumer_protection":true,"alipay_account":"hz0799@163.com","alipay_no":"10001","magazine_subscribe":true,"vertical_market":"3C,shoes"}]}}}]]></json>
<xml><![CDATA[<users_get_response><users list="true"><user><user_id>10001</user_id><uid>10001</uid><nick>hz0799</nick><sex>m</sex><buyer_credit><level>1</level><score>1</score><total_num>1</total_num><good_num>1</good_num></buyer_credit><seller_credit><level>1</level><score>1</score><total_num>1</total_num><good_num>1</good_num></seller_credit><location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></location><created>2000-01-01 00:00:00</created><last_visit>2000-01-01 00:00:00</last_visit><birthday>2000-01-01 00:00:00</birthday><type>B</type><has_more_pic>true</has_more_pic><item_img_num>5</item_img_num><item_img_size>1024</item_img_size><prop_img_num>5</prop_img_num><prop_img_size>1024</prop_img_size><auto_repost>unlimited</auto_repost><promoted_type>authentication</promoted_type><status>normal</status><alipay_bind>bind</alipay_bind><consumer_protection>true</consumer_protection><alipay_account>hz0799@163.com</alipay_account><alipay_no>10001</alipay_no><magazine_subscribe>true</magazine_subscribe><vertical_market>3C,shoes</vertical_market></user></users></users_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:nicks</code>
<desc>参数：nicks无效，格式不对、非法值、越界等</desc>
<solution>传入的nick数量必须是1到40之间</solution>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>传入的nick不存在</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
</errors>
</api>
<api>
<cat>产品API</cat>
<name>taobao.product.add</name>
<cname>上传一个产品，不包括产品非主图和属性图片</cname>
<authorize>必须用户授权</authorize>
<desc>获取类目ID，必需是叶子类目ID；调用taobao.itemcats.get.v2获取  
传入关键属性,结构:pid:vid;pid:vid.调用taobao.itemprops.get.v2获取pid, 
调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props.</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品类目ID.调用taobao.itemcats.get获取;注意:必须是叶子类目 id.</desc>
<sample>5300012</sample>
<default/>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>外部产品ID</desc>
<sample>96330012</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>关键属性 结构:pid:vid;pid:vid.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;如果碰到用户自定义属性,请用customer_props.</desc>
<sample>pid:vid;pid:vid</sample>
<default/>
</param>
<param>
<name>binds</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>非关键属性结构:pid:vid;pid:vid.非关键属性不包含关键属性、销售属性、用户自定义属性、商品属性;调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid.</desc>
<sample>pid:vid;pid:vid</sample>
<default/>
</param>
<param>
<name>sale_props</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>销售属性结构:pid:vid;pid:vid.调用taobao.itemprops.get获取is_sale_prop＝true的pid,调用taobao.itempropvalues.get获取vid.</desc>
<sample>pid:vid;pid:vid</sample>
<default/>
</param>
<param>
<name>customer_props</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>用户自定义属性,结构：pid1:value1;pid2:value2 例如：“20000:优衣库”，表示“品牌:优衣库”</desc>
<sample>20000:优衣库</sample>
<default/>
</param>
<param>
<name>price</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>产品市场价.精确到2位小数;单位为元.如：200.07</desc>
<sample>200.07</sample>
<default/>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<level>Basic</level>
<required>必须</required>
<desc>产品主图片.最大1M,目前仅支持GIF,JPG.</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>name</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>产品名称,最大60个字节.</desc>
<sample>笔记本</sample>
<default/>
</param>
<param>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>产品描述.最大25000个字节</desc>
<sample>这是产品描述</sample>
<default/>
</param>
<param>
<name>major</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是不是主图</desc>
<sample>true</sample>
<default>true</default>
</param>
<param>
<name>native_unkeyprops</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义非关键属性</desc>
<sample>native_unkeyprops</sample>
<default>native_unkeyprops</default>
</param>
<param>
<name>vertical_market</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>加入垂直市场，目前只支持以鞋城卖家身份加入名鞋馆(暂时此字段还不起作用，不对外开放)</desc>
<sample>4</sample>
<default/>
</param>
<param>
<name>market_time</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>上市时间。目前只支持鞋城类目传入此参数</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>销售属性值别名。格式为pid1:vid1:alias1;pid1:vid2:alia2。只有少数销售属性值支持传入别名，比如颜色和尺寸</desc>
<sample>1627207:3232483:深深绿色</sample>
<default/>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<required>true</required>
<sample>96255001</sample>
<desc>产品结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"product_add_response":{"product":{"product_id":3433222,"created":"2000-01-01 00:00:00",}}}]]></json>
<xml><![CDATA[<product_add_response><product><product_id>3433222</product_id><created>2000-01-01 00:00:00</created></product></product_add_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.product-service-error:null</code>
<desc>1，未授权此品牌的发布 2，货号，品牌属性出错:货号，品牌 3，本类目此关键属性的产品已存在, 不可重复添加</desc>
<solution>1，通过taobao.itemcats.authorize.get查看B商家有没有授权此品牌，再发布产品 2，传入货号以及正确的品牌（通过taobao.itempropvalues.get确定是否是自定义品牌）3，该关键属性的产品已经发布，可以直接搜索该产品，在其产品下发布商品</solution>
</error>
<error>
<code>isv.invalid-parameter:c-seller</code>
<desc>无效的参数：C卖家</desc>
<solution>C卖家没有权限发布产品，请在发布产品之前先通过接口taobao.user.get判断该卖家是否是B卖家</solution>
</error>
<error>
<code>isv.invalid-parameter:property_alias</code>
<desc>1.销售属性值别名格式错误 
2.销售属性值别名包含不合法的pid或vid</desc>
<solution>1.传入正确的销售属性值别名格式 
2.传入正确的pid和vid</solution>
</error>
</errors>
</api>
<api>
<cat>产品API</cat>
<name>taobao.product.get</name>
<cname>获取一个产品的信息</cname>
<authorize>不需用户授权</authorize>
<desc>两种方式查看一个产品详细信息:  
传入product_id来查询  
传入cid和props来查询</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔.</desc>
<sample>product_id,outer_id</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>Product的id.两种方式来查看一个产品:1.传入product_id来查询 2.传入cid和props来查询</desc>
<sample>86126527</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>商品类目id.调用taobao.itemcats.get获取;必须是叶子类目id,如果没有传product_id,那么cid和props必须要传.</desc>
<sample>50012286</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>比如:诺基亚N73这个产品的关键属性列表就是:品牌:诺基亚;型号:N73,对应的PV值就是10005:10027;10006:29729.</desc>
<sample>10005:10027;10006:29729</sample>
<default/>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"product_get_response":{"product":{"product_id":3433222,"outer_id":"123456","created":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<product_get_response><product><product_id>3433222</product_id><outer_id>123456</outer_id><created>2000-01-01 00:00:00</created></product></product_get_response>]]></xml>
</sample>
</api>
<api>
<cat>产品API</cat>
<name>taobao.product.img.delete</name>
<cname>删除产品非主图</cname>
<authorize>必须用户授权</authorize>
<desc>1.传入非主图ID  
2.传入产品ID  
删除产品非主图</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>非主图ID</desc>
<sample>96330012</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>产品ID.Product的id,通过taobao.product.add接口新增产品的时候会返回id.</desc>
<sample>5300012</sample>
<default/>
</param>
</request>
<response>
<param>
<name>product_img</name>
<type>ProductImg</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回productimg中的：id,product_id</desc>
</param>
</response>
<sample>
<json><![CDATA[{"product_img_delete_response":{"product_img":{"id":9684,"product_id":96899,}}}]]></json>
<xml><![CDATA[<product_img_delete_response><product_img><id>9684</id><product_id>96899</product_id></product_img></product_img_delete_response>]]></xml>
</sample>
</api>
<api>
<cat>产品API</cat>
<name>taobao.product.img.upload</name>
<cname>上传单张产品非主图，如果需要传多张，可调多次</cname>
<authorize>必须用户授权</authorize>
<desc>1.传入产品ID  
2.传入图片内容  
注意：图片最大为500K,只支持JPG,GIF格式,如果需要传多张，可调多次</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>产品图片ID.修改图片时需要传入</desc>
<sample>892332112</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>产品ID.Product的id</desc>
<sample>35694332</sample>
<default/>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<level>Basic</level>
<required>必须</required>
<desc>图片内容.图片最大为500K,只支持JPG,GIF格式.</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>图片序号</desc>
<sample>2</sample>
<default>0</default>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否将该图片设为主图.可选值:true,false;默认值:false.</desc>
<sample>true</sample>
<default/>
</param>
</request>
<response>
<param>
<name>product_img</name>
<type>ProductImg</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回产品图片结构中的：url,id,created,modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"product_img_upload_response":{"product_img":{"id":9684,"url":"http://host/image_path","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<product_img_upload_response><product_img><id>9684</id><url>http:</url><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified></product_img></product_img_upload_response>]]></xml>
</sample>
</api>
<api>
<cat>产品API</cat>
<name>taobao.product.propimg.delete</name>
<cname>删除产品属性图</cname>
<authorize>必须用户授权</authorize>
<desc>1.传入属性图片ID  
2.传入产品ID  
删除一个产品的属性图片</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>属性图片ID</desc>
<sample>5300012</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>产品ID.Product的id.</desc>
<sample>96330012</sample>
<default/>
</param>
</request>
<response>
<param>
<name>product_prop_img</name>
<type>ProductPropImg</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回product_prop_img数据结构中的：product_id,id</desc>
</param>
</response>
<sample>
<json><![CDATA[{"product_propimg_delete_response":{"product_prop_img":{"id":674443,"product_id":96899}}}]]></json>
<xml><![CDATA[<product_propimg_delete_response><product_prop_img><id>674443</id><product_id>96899</product_id></product_prop_img></product_propimg_delete_response>]]></xml>
</sample>
</api>
<api>
<cat>产品API</cat>
<name>taobao.product.propimg.upload</name>
<cname>上传单张产品属性图片，如果需要传多张，可调多次</cname>
<authorize>必须用户授权</authorize>
<desc>传入产品ID  
传入props,目前仅支持颜色属性.调用taobao.itemprops.get.v2取得颜色属性pid, 
再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;  
传入图片内容  
注意：图片最大为2M,只支持JPG,GIF,如果需要传多张，可调多次</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>产品属性图片ID</desc>
<sample>6896666</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>产品ID.Product的id</desc>
<sample>35694332</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>属性串.目前仅支持颜色属性.调用taobao.itemprops.get获取类目属性,取得颜色属性pid,再用taobao.itempropvalues.get取得vid;格式:pid:vid,只能传入一个颜色pid:vid串;</desc>
<sample>pid:vid</sample>
<default/>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<level>Basic</level>
<required>必须</required>
<desc>图片内容.图片最大为2M,只支持JPG,GIF.</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>图片序号</desc>
<sample>1</sample>
<default>0</default>
</param>
</request>
<response>
<param>
<name>product_prop_img</name>
<type>ProductPropImg</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>支持返回产品属性图片中的：url,id,created,modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"product_propimg_upload_response":{"product_prop_img":{"id":674443,"url":"http://host/image_path","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<product_propimg_upload_response><product_prop_img><id>674443</id><url>http:</url><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified></product_prop_img></product_propimg_upload_response>]]></xml>
</sample>
</api>
<api>
<cat>产品API</cat>
<name>taobao.product.update</name>
<cname>修改一个产品，可以修改主图，不能修改子图片</cname>
<authorize>必须用户授权</authorize>
<desc>传入产品ID  
可修改字段：outer_id,binds,sale_props,name,price,desc,image  
注意：1.可以修改主图,不能修改子图片,主图最大500K,目前仅支持GIF,JPG 
      2.商城卖家产品发布24小时后不能作删除或修改操作</desc>
<request>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>产品ID</desc>
<sample>35694332</sample>
<default/>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>外部产品ID</desc>
<sample>6896666</sample>
<default/>
</param>
<param>
<name>binds</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>非关键属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid</desc>
<sample>pid:vid;pid:vid</sample>
<default/>
</param>
<param>
<name>sale_props</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>销售属性.调用taobao.itemprops.get获取pid,调用taobao.itempropvalues.get获取vid;格式:pid:vid;pid:vid</desc>
<sample>pid:vid;pid:vid</sample>
<default/>
</param>
<param>
<name>price</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>产品市场价.精确到2位小数;单位为元.如:200.07</desc>
<sample>200.07</sample>
<default/>
</param>
<param>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>产品描述.最大25000个字节</desc>
<sample>这是产品描述</sample>
<default/>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<level>Basic</level>
<required>可选</required>
<desc>产品主图.最大500K,目前仅支持GIF,JPG</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>产品名称.最大60个字节</desc>
<sample>这是产品描述</sample>
<default/>
</param>
<param>
<name>major</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否是主图</desc>
<sample>true</sample>
<default>true</default>
</param>
<param>
<name>native_unkeyprops</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义非关键属性</desc>
<sample>native_unkeyprops</sample>
<default>native_unkeyprops</default>
</param>
</request>
<response>
<param>
<name>product</name>
<type>Product</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回product数据结构中的：product_id,modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"product_update_response":{"product":{"product_id":3433222,"modified":"2000-01-01 00:00:00",}}}]]></json>
<xml><![CDATA[<product_update_response><product><product_id>3433222</product_id><modified>2000-01-01 00:00:00</modified></product></product_update_response>]]></xml>
</sample>
</api>
<api>
<cat>产品API</cat>
<name>taobao.products.get</name>
<cname>获取产品列表</cname>
<authorize>不需用户授权</authorize>
<desc>根据淘宝会员帐号搜索所有产品信息  
注意：支持分页，每页最多返回100条,默认值为40,页码从1开始，默认为第一页</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:Product数据结构中的所有字段;多个字段之间用","分隔</desc>
<sample>product_id,tsc,cat_name,name</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>用户昵称</desc>
<sample>淘小二</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>类目id</desc>
<sample>1521</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>属性串pid:vid</desc>
<sample>123:456</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数.每页返回最多返回100条,默认值为40</desc>
<sample>40</sample>
<default/>
</param>
</request>
<response>
<param>
<name>products</name>
<type>Product</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"products_get_response":{"products":{"product":[{"product_id":3433222,"outer_id":"123456","created":"2000-01-01 00:00:00"}]}}}]]></json>
<xml><![CDATA[<products_get_response><products list="true"><product><product_id>3433222</product_id><outer_id>123456</outer_id><created>2000-01-01 00:00:00</created></Product></products></products_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>传入的nick不存在</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
</errors>
</api>
<api>
<cat>产品API</cat>
<name>taobao.products.search</name>
<cname>搜索产品信息</cname>
<authorize>不需用户授权</authorize>
<desc>两种方式搜索所有产品信息(二种至少传一种):  
传入关键字q搜索  
传入cid和props搜索  
返回值支持:product_id,name,pic_path,cid,props,price,tsc 
当用户指定了cid并且cid为垂直市场（3C电器城、鞋城）的类目id时，默认只返回小二确认的产品。如果用户没有指定cid，或cid为普通的类目，默认返回商家确认或小二确认的产品。如果用户自定了status字段，以指定的status类型为准</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:Product数据结构中的以下字段:product_id,name,pic_url,cid,props,price,tsc;多个字段之间用","分隔.新增字段status(product的当前状态)</desc>
<sample>product_id,name,pic_url,cid,props,price,tsc</sample>
<default/>
</param>
<param>
<name>q</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>搜索的关键词是用来搜索产品的title以及关键属性值的名称.如:"优衣库 1234",这种用来表示查询优衣库这个品牌下的货号为1234的产品;　注:q,cid和props至少传入一个</desc>
<sample>优衣库 1234</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>商品类目ID.调用taobao.itemcats.get获取.</desc>
<sample>50011999</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>属性,属性值的组合.格式:pid:vid;pid:vid;调用taobao.itemprops.get获取类目属性pid  
,再用taobao.itempropvalues.get取得vid.</desc>
<sample>pid:vid;pid:vid</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>想要获取的产品的状态列表，支持多个状态并列获取，多个状态之间用","分隔，最多同时指定5种状态。例如，只获取小二确认的spu传入"3",只要商家确认的传入"0"，既要小二确认又要商家确认的传入"0,3"。目前只支持者两种类型的状态搜索，输入其他状态无效。</desc>
<sample>3</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推.默认返回的数据是从第一页开始.</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数.每页返回最多返回100条,默认值为40.</desc>
<sample>40</sample>
<default/>
</param>
<param>
<name>vertical_market</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>传入值为：3表示3C表示3C垂直市场产品，4表示鞋城垂直市场产品，8表示网游垂直市场产品。一次只能指定一种垂直市场类型</desc>
<sample>4</sample>
<default/>
</param>
</request>
<response>
<param>
<name>products</name>
<type>Product</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>返回具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>50</sample>
<desc>结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"products_search_response":{"products":{"product":[{"product_id":3433222,"outer_id":"123456","created":"2000-01-01 00:00:00"}]},"total_results":50}}]]></json>
<xml><![CDATA[<products_search_response><products list="true"><product><product_id>3433222</product_id><outer_id>123456</outer_id><created>2000-01-01 00:00:00</created></product></products><total_results>50</total_results></products_search_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:q-or-cid-or-props</code>
<desc>搜索条件q、cid、props请至少指定一个</desc>
<solution>请在前端作好判断，特殊可选的参数至少传入一个</solution>
</error>
</errors>
</api>
<api>
<cat>类目属性API</cat>
<name>taobao.itemcats.authorize.get</name>
<cname>查询B商家被授权品牌列表和类目列表</cname>
<authorize>必须用户授权</authorize>
<desc>查询B商家被授权品牌列表和类目列表</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有： 
brand.vid, brand.name,  
item_cat.cid, item_cat.name, item_cat.status,item_cat.sort_order,item_cat.parent_cid,item_cat.is_parent</desc>
<sample>brand.vid, brand.name</sample>
<default/>
</param>
</request>
<response>
<param>
<name>seller_authorize</name>
<type>SellerAuthorize</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>里面有2个数组： 
Brand[]品牌列表, 
ItemCat[] 类目列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"itemcats_authorize_get_response":{"seller_authorize":{"brands":{"brand":[{"name":"鸿星尔克","vid":49429},{"name":"Alcatel/阿尔卡特","vid":10283}]},"item_cats":{"item_cat":[{"cid":50010388,"is_parent":false,"name":"运动鞋","parent_cid":0,"sort_order":83,"status":"normal"},{"cid":30,"is_parent":true,"name":"男装","parent_cid":0,"sort_order":121,"status":"normal"},{"cid":1512,"is_parent":false,"name":"手机","parent_cid":0,"sort_order":39,"status":"normal"}]}}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><itemcats_authorize_get_response><seller_authorize><brands list="true"><brand><name>鸿星尔克</name><vid>49429</vid></brand><brand><name>Alcatel/阿尔卡特</name><vid>10283</vid></brand></brands><item_cats list="true"><item_cat><cid>50010388</cid><is_parent>false</is_parent><name>运动鞋</name><parent_cid>0</parent_cid><sort_order>83</sort_order><status>normal</status></item_cat><item_cat><cid>30</cid><is_parent>true</is_parent><name>男装</name><parent_cid>0</parent_cid><sort_order>121</sort_order><status>normal</status></item_cat><item_cat><cid>1512</cid><is_parent>false</is_parent><name>手机</name><parent_cid>0</parent_cid><sort_order>39</sort_order><status>normal</status></item_cat></item_cats></seller_authorize></itemcats_authorize_get_response><!--top020177.cm4-->]]></xml>
</sample>
</api>
<api>
<cat>类目属性API</cat>
<name>taobao.itemcats.get</name>
<cname>获取后台供卖家发布商品的标准商品类目</cname>
<authorize>不需用户授权</authorize>
<desc>获取后台供卖家发布商品的标准商品类目</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>可选</required>
<desc>需要返回的字段列表，见ItemCat，默认返回：cid,parent_cid,name,is_parent</desc>
<sample>cid,parent_cid,name,is_parent</sample>
<default>cid,parent_cid,name,is_parent</default>
</param>
<param>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>父商品类目 id，0表示根节点, 传输该参数返回所有子类目。 (cids、parent_cid至少传一个)</desc>
<sample>50011999</sample>
<default/>
</param>
<param>
<name>cids</name>
<type>Number</type>
<level>Basic Array</level>
<required>特殊可选</required>
<desc>商品所属类目ID列表，用半角逗号(,)分隔 例如:(18957,19562,) (cids、parent_cid至少传一个)</desc>
<sample>18957,19562,</sample>
<default/>
</param>
<param>
<name>datetime</name>
<type>Date</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>时间戳。格式:yyyy-MM-dd HH:mm:ss 
如果没有传，则取所有的类目信息(如果传了parent_cid或者cids，则忽略datetime)</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
</request>
<response>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<required>false</required>
<sample>2000-01-01 00:00:00</sample>
<desc>最近修改时间(如果取增量，会返回该字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>item_cats</name>
<type>ItemCat</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>增量类目信息,根据fields传入的参数返回相应的结果</desc>
</param>
</response>
<sample>
<json><![CDATA[{"itemcats_get_response":{"last_modified":"2000-01-01 00:00:00","item_cats":{"item_cat":[{"cid":50011999,"parent_cid":0,"name":"单方精油","is_parent":true,"status":"normal","sort_order":1}]}}}]]></json>
<xml><![CDATA[<itemcats_get_response><last_modified>2000-01-01 00:00:00</last_modified><item_cats list="true"><item_cat><cid>50011999</cid><parent_cid>0</parent_cid><name>单方精油</name><is_parent>true</is_parent><status>normal</status><sort_order>1</sort_order></item_cat></item_cats></itemcats_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:parent_cid-or-cids-or-datetime</code>
<desc>参数：parent_cid，cids，datetime三个必选其一</desc>
<solution>在前端做好校验，特殊可选参数至少要传入一个才可以</solution>
</error>
</errors>
</api>
<api>
<cat>类目属性API</cat>
<name>taobao.itemprops.get</name>
<cname>获取标准商品类目属性</cname>
<authorize>不需用户授权</authorize>
<desc>Q：能否通过图形化界面获取特定类目下面的属性及属性值? 
A：请点击属性工具，通过图形化界面直接获取上述数据 
Q：关键属性，非关键属性，销售属性有什么区别？ 
A：产品的关键属性是必填的，关键属性＋类目id确定一个产品，非关键属性，是分类上除了关键属性和销售属性以外的属性。销售属性是只有一件实物的商品才能确定的一个属性，如：N73　红色，黑色。没有实物不能确定。 
Q：销售属性与SKU之间有何关联？ 
A：销售属性是组成SKU的特殊属性，它会影响买家的购买和卖家的库存管理，如服装的"颜色"、"套餐"和"尺码"。 
 
SKU 即我们常说的销售属性，最小购买单位或最小库存单位。它是销售属性的一个组合。比如"红色的诺基亚N95"就是一个SKU。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>可选</required>
<desc>需要返回的字段列表，见：ItemProp，默认返回：pid, name, must, multi, prop_values</desc>
<sample>pid,name,must,multi,prop_values</sample>
<default>pid,name,must,multi,prop_values</default>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>叶子类目ID，如果只传cid，则只返回一级属性,通过taobao.itemcats.get获得叶子类目ID</desc>
<sample>44343</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>属性id (取类目属性时，传pid，不用同时传PID和parent_pid)</desc>
<sample>3232</sample>
<default/>
</param>
<param>
<name>parent_pid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>父属性ID</desc>
<sample>4834</sample>
<default/>
</param>
<param>
<name>is_key_prop</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否关键属性。可选值:true(是),false(否)</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_sale_prop</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否销售属性。可选值:true(是),false(否)</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_color_prop</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否颜色属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_enum_prop</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否枚举属性。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)。如果返回true，属性值是下拉框选择输入，如果返回false，属性值是用户自行手工输入。</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_input_prop</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>在is_enum_prop是true的前提下，是否是卖家可以自行输入的属性（注：如果is_enum_prop返回false，该参数统一返回false）。可选值:true(是),false(否) (删除的属性不会匹配和返回这个条件)</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_item_prop</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否商品属性，这个属性只能放于发布商品时使用。可选值:true(是),false(否)</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>datetime</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>增量时间戳。格式:yyyy-MM-dd HH:mm:ss 
假如传2005-01-01 00:00:00，则取所有的属性和子属性ID(如果传了pid会忽略datetime)</desc>
<sample>2010-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>child_path</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>类目子属性路径,由该子属性上层的类目属性和类目属性值组成,格式pid:vid;pid:vid.取类目子属性需要传child_path,cid</desc>
<sample>3932:13221;2113:2345</sample>
<default/>
</param>
</request>
<response>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<required>true</required>
<sample>2010-01-01 00:00:00</sample>
<desc>最近修改时间(只有取全量或增量的时候会返回该字段)。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>item_props</name>
<type>ItemProp</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>类目属性信息(如果是取全量或者增量，不包括属性值),根据fields传入的参数返回相应的结果</desc>
</param>
</response>
<sample>
<json><![CDATA[{"itemprops_get_response":{"item_props":{"item_prop":[{"is_allow_alias":false,"is_color_prop":false,"is_item_prop":false,"is_key_prop":true,"is_sale_prop":false,"multi":false,"must":false,"name":"关键属性2","parent_pid":0,"parent_vid":0,"pid":21862,"sort_order":3,"status":"normal"}]}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><itemprops_get_response><item_props list="true"><item_prop><is_allow_alias>false</is_allow_alias><is_color_prop>false</is_color_prop><is_item_prop>false</is_item_prop><is_key_prop>true</is_key_prop><is_sale_prop>false</is_sale_prop><multi>false</multi><must>false</must><name>关键属性2</name><parent_pid>0</parent_pid><parent_vid>0</parent_vid><pid>21862</pid><sort_order>3</sort_order><status>normal</status></item_prop></item_props></itemprops_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>类目属性API</cat>
<name>taobao.itempropvalues.get</name>
<cname>获取标准类目属性值</cname>
<authorize>不需用户授权</authorize>
<desc>传入类目ID,必需是叶子类目，通过taobao.itemcats.get获取类目ID 
pvs和datetime二者必需传一个 
返回字段目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order 
作用:获取标准类目属性值</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有：cid,pid,prop_name,vid,name,name_alias,status,sort_order</desc>
<sample>cid,pid,prop_name,vid,name,name_alias,status,sort_order</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>叶子类目ID ,通过taobao.itemcats.get获得叶子类目ID</desc>
<sample>50010538</sample>
<default/>
</param>
<param>
<name>pvs</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>属性和属性值 id串，格式例如(pid1;pid2)或(pid1:vid1;pid2:vid2)或(pid1;pid2:vid2)</desc>
<sample>20561:1234</sample>
<default/>
</param>
<param>
<name>datetime</name>
<type>Date</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>假如传2005-01-01 00:00:00，则取所有的属性和子属性(状态为删除的属性值不返回prop_name)</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
</request>
<response>
<param>
<name>last_modified</name>
<type>Date</type>
<level>Basic</level>
<required>true</required>
<sample>2000-01-01 00:00:00</sample>
<desc>最近修改时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
<param>
<name>prop_values</name>
<type>PropValue</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>属性值,根据fields传入的参数返回相应的结果</desc>
</param>
</response>
<sample>
<json><![CDATA[{"itempropvalues_get_response":{"last_modified":"2000-01-01 00:00:00","prop_values":{"prop_value":[{"cid":50010538,"pid":1627207,"prop_name":"颜色","vid":3232483,"name":"军绿色","name_alias":"军绿色","is_parent":true,"status":"normal","sort_order":0}]}}}]]></json>
<xml><![CDATA[<itempropvalues_get_response><last_modified>2000-01-01 00:00:00</last_modified><prop_values list="true"><prop_value><cid>50010538</cid><pid>1627207</pid><prop_name>颜色</prop_name><vid>3232483</vid><name>军绿色</name><name_alias>军绿色</name_alias><is_parent>true</is_parent><status>normal</status><sort_order>0</sort_order></prop_value></prop_values></itempropvalues_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter</code>
<desc>参数无效，格式不对、非法值、越界等</desc>
<solution>类型转换异常错误，通过taobao.item.get获取props再查询相应的属性及属性值名称</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.aftersale.get</name>
<cname>查询用户售后服务模板</cname>
<authorize>必须用户授权</authorize>
<desc>查询用户设置的售后服务模板，仅返回标题和id</desc>
<response>
<param>
<name>after_sales</name>
<type>AfterSale</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>售后服务返回对象</desc>
</param>
</response>
<sample>
<json><![CDATA[{"aftersale_get_response":{"after_sales":{"after_sale":[{"after_sale_id":1,"after_sale_name":"售后服务模板1","after_sale_path":"bqerqre67"}]}}}]]></json>
<xml><![CDATA[<aftersale_get_response><after_sales list="true"><after_sale><after_sale_id>1</after_sale_id><after_sale_name>售后服务模板1</after_sale_name><after_sale_path>bqerqre67</after_sale_path></after_sale></after_sales></aftersale_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.taobao-aftersale-get-error:IC_USER_NOT_EXIST</code>
<desc>非法的用户id参数，比如用户id小于等于0</desc>
<solution/>
</error>
<error>
<code>isv.taobao-aftersale-get-error:SERVICE_ERROR</code>
<desc>内部服务调用出现异常</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.add</name>
<cname>添加一个商品</cname>
<authorize>必须用户授权</authorize>
<desc>此接口用于新增一个商品  
商品所属的卖家是当前会话的用户  
商品的属性和sku的属性有包含的关系，商品的价格要位于sku的价格区间之中（例如，sku价格有5元、10元两种，那么商品的价格就需要大于等于5元，小于等于10元，否则新增商品会失败）  
商品的类目和商品的价格、sku的价格都有一定的相关性（具体的关系要通过类目属性查询接口获得）  
商品的运费承担方式和邮费设置有相关性，卖家承担运费不用设置邮费，买家承担运费需要设置邮费  
当关键属性值选择了“其他”的时候，需要输入input_pids和input_str商品才能添加成功。</desc>
<request>
<param>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数量，取值范围:大于零的整数。数量需要等于Sku所有数量的和</desc>
<sample>30</sample>
<default/>
</param>
<param>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<required>必须</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
<sample>200.07</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>发布类型。可选值:fixed(一口价),auction(拍卖)。B商家不能发布拍卖商品，而且拍卖商品是没有SKU的</desc>
<sample>fixed</sample>
<default/>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>新旧程度。可选值：new(新)，second(二手)，unused(闲置)。B商家不能发布二手商品。 
如果是二手商品，特定类目下属性里面必填新旧成色属性</desc>
<sample>new</sample>
<default/>
</param>
<param>
<name>title</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>宝贝标题。不能超过60字节，受违禁词控制</desc>
<sample>Nokia N97全新行货</sample>
<default/>
</param>
<param>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>宝贝描述。字数要大于5个字符，小于25000个字符，受违禁词控制</desc>
<sample>这是一个好商品</sample>
<default/>
</param>
<param>
<name>location.state</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>所在地省份。如浙江，具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar  取到</desc>
<sample>浙江</sample>
<default/>
</param>
<param>
<name>location.city</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>所在地城市。如杭州 。可以通过http://dl.open.taobao.com/sdk/商品城市列表.rar查询</desc>
<sample>杭州</sample>
<default/>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品上传后的状态。可选值:onsale(出售中),instock(仓库中);默认值:onsale</desc>
<sample>onsale</sample>
<default>onsale</default>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>叶子类目id</desc>
<sample>1512</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值</desc>
<sample>20000:33564;21514:38489</sample>
<default/>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);默认值:seller。卖家承担不用设置邮费和postage_id.买家承担的时候，必填邮费和postage_id  
如果用户设置了运费模板会优先使用运费模板，否则要同步设置邮费（post_fee,express_fee,ems_fee）</desc>
<sample>buyer</sample>
<default>seller</default>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>有效期。可选值:7,14;单位:天;默认值:14</desc>
<sample>7</sample>
<default>14</default>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true);默认值:false(无发票)</desc>
<sample>true</sample>
<default>false</default>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否有保修。可选值:true,false;默认值:false(不保修)</desc>
<sample>true</sample>
<default>false</default>
</param>
<param>
<name>auto_repost</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>自动重发。可选值:true,false;默认值:false(不重发)</desc>
<sample>true</sample>
<default>false</default>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>橱窗推荐。可选值:true,false;默认值:false(不推荐)</desc>
<sample>true</sample>
<default>false</default>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<level>Basic Array</level>
<required>可选</required>
<desc>商品所属的店铺类目列表。按逗号分隔。结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
<sample>1101,1102,1103</sample>
<default/>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>支持会员打折。可选值:true,false;默认值:false(不打折)</desc>
<sample>true</sample>
<default>false</default>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>平邮费用。取值范围:0.01-10000.00;精确到2位小数;单位:元。如:5.07，表示:5元7分. 注:post_fee,express_fee,ems_fee需要一起填写</desc>
<sample>5.07</sample>
<default/>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>快递费用。取值范围:0.01-10000.00;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
<sample>15.07</sample>
<default/>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>ems费用。取值范围:0-100000000;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
<sample>25.07</sample>
<default/>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>定时上架时间。(时间格式：yyyy-MM-dd HH:mm:ss)</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>increment</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>加价幅度。如果为0，代表系统代理幅度</desc>
<sample>2.50</sample>
<default/>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<level>Basic</level>
<required>可选</required>
<desc>商品主图片。类型:JPG,GIF;最大长度:500K</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>宝贝所属的运费模板ID。模板可以通过taobao.postages.get获得</desc>
<sample>775752</sample>
<default/>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品的积分返点比例。如:5,表示:返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数</desc>
<sample>5</sample>
<default/>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1 ，其中：pid是属性id vid是属性值id。总长度不超过511字节</desc>
<sample>pid:vid:别名;pid1:vid1:别名1</sample>
<default/>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>用户自行输入的类目属性ID串。结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
<sample>pid1,pid2,pid3</sample>
<default/>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid。该字段内的销售属性也需要在props字段填写。sku的销售属性需要一同选取，如:颜色，尺寸。如果新增商品包含了sku，则此字段一定要传入。这个字段的长度要控制在512个字节以内</desc>
<sample>pid:vid;pid:vid</sample>
<default/>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku的数量串，结构如：num1,num2,num3 如：2,3</desc>
<sample>2,3,4</sample>
<default/>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
<sample>200.07</sample>
<default/>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku的外部id串，结构如：1234,1342,… 
sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
<sample>1234,1342</sample>
<default/>
</param>
<param>
<name>lang</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品文字的字符集。繁体传入"zh_HK"，简体传入"zh_CN"，不传默认为简体</desc>
<sample>zh_CN</sample>
<default>zh_CN</default>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商家编码，该字段的最大长度是512个字节</desc>
<sample>12345</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
<sample>123456789</sample>
<default/>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_url和image只需要传入一个,如果两个都传，默认选择pic_url</desc>
<sample>uploaded/i7/T1rfxpXcVhXXXH9QcZ_033150.jpg</sample>
<default/>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>代充商品类型。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型： 
no_mark(不做类型标记) 
time_card(点卡软件代充) 
fee_card(话费软件代充)</desc>
<sample>time_card</sample>
<default/>
</param>
<param>
<name>input_str</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节</desc>
<sample>耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;</sample>
<default/>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否在淘宝上显示</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否在外店显示</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否是3D</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>售后说明模板id</desc>
<sample>47758</sample>
<default/>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>此为货到付款运费模板的ID，对应的JAVA类型是long,如果COD卖家应用了货到付款运费模板，此值要进行设置。</desc>
<sample>53899</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>商品结构,仅有numIid和created返回</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_add_response":{"item":{"iid":"569a64fce2e98bce187bcbbb4a4d262a","detail_url":"http://item.taobao.com/item.htm?id=4947813209","num_iid":1489161932,"title":"Google test item","nick":"tbtest561","type":"fixed","cid":132443,"seller_cids":"2234445,3344466,446434","props":"135255:344454","input_pids":"2432,5353,656425","input_str":"耐克;耐克系列;科比系列;科比系列;2K5","desc":"这是一个好商品","pic_url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","num":8888,"valid_thru":7,"list_time":"2009-10-22 14:22:06","delist_time":"2000-01-01 00:00:00","stuff_status":"new","location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"},"price":"5.00","post_fee":"5.00","express_fee":"5.00","ems_fee":"5.00","has_discount":true,"freight_payer":"seller","has_invoice":true,"has_warranty":true,"has_showcase":true,"modified":"2000-01-01 00:00:00","increment":"0","approve_status":"onsale","postage_id":32,"product_id":85883030,"auction_point":15,"property_alias":"property","item_imgs":{"id":1645920,"url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","position":1,"created":"2000-01-01 00:00:00"},"prop_imgs":{"id":1646146,"url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","properties":"1627207:28326","position":1,"created":"2000-01-01 00:00:00"},"skus":{"sku_id":123,"iid":"asdf12323adfaa","num_iid":"12345","properties":"1243:1215;5626:5125","quantity":3,"price":"200.07","outer_id":"12345","created":"2009-11-04 15:24:43","modified":"2009-11-04 15:24:43","status":"normal"},"outer_id":"34143554352","is_virtual":true,"is_taobao":true,"is_ex":true,"is_timing":true,"videos":{"id":123456,"video_id":123456,"url":"http://js.tudouui.com/bin/taobaoisv/TaoBaoPlayer.swf……","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","iid":"94bccd061369cba108c2665445235154","num_iid":1497217011},"is_3D":true,"score":2,"volume":22,"one_station":true,"second_kill":"web_only","auto_fill":"time_card","props_name":"20000:3275069:品牌:盈讯;1753146:3485013:型号:F908;30606:112030:上市时间:2008年","violation":true,"created":"2000-01-01 00:00:00","is_prepay":true,"ww_status":true,"promoted_service":"2","wap_desc":"Wap宝贝详情","wap_detail_url":"http://auction1.wap.taobao.com/auction/item_detail-0db0-1234567.jhtml","after_sale_id":123,"sell_promise":true}}}]]></json>
<xml><![CDATA[<item_add_response><item><iid>569a64fce2e98bce187bcbbb4a4d262a</iid><detail_url>http:</detail_url><num_iid>1489161932</num_iid><title>Google test item</title><nick>tbtest561</nick><type>fixed</type><cid>132443</cid><seller_cids>2234445,3344466,446434</seller_cids><props>135255:344454</props><input_pids>2432,5353,656425</input_pids><input_str>耐克;耐克系列;科比系列;科比系列;2K5</input_str><desc>这是一个好商品</desc><pic_url>http:</pic_url><num>8888</num><valid_thru>7</valid_thru><list_time>2009-10-22 14:22:06</list_time><delist_time>2000-01-01 00:00:00</delist_time><stuff_status>new</stuff_status><location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></location><price>5.00</price><post_fee>5.00</post_fee><express_fee>5.00</express_fee><ems_fee>5.00</ems_fee><has_discount>true</has_discount><freight_payer>seller</freight_payer><has_invoice>true</has_invoice><has_warranty>true</has_warranty><has_showcase>true</has_showcase><modified>2000-01-01 00:00:00</modified><increment>0</increment><approve_status>onsale</approve_status><postage_id>32</postage_id><product_id>85883030</product_id><auction_point>15</auction_point><property_alias>property</property_alias><item_imgs><id>1645920</id><url>http:</url><position>1</position><created>2000-01-01 00:00:00</created></item_imgs><prop_imgs><id>1646146</id><url>http:</url><properties>1627207:28326</properties><position>1</position><created>2000-01-01 00:00:00</created></prop_imgs><skus><sku_id>123</sku_id><iid>asdf12323adfaa</iid><num_iid>12345</num_iid><properties>1243:1215;5626:5125</properties><quantity>3</quantity><price>200.07</price><outer_id>12345</outer_id><created>2009-11-04 15:24:43</created><modified>2009-11-04 15:24:43</modified><status>normal</status></skus><outer_id>34143554352</outer_id><is_virtual>true</is_virtual><is_taobao>true</is_taobao><is_ex>true</is_ex><is_timing>true</is_timing><videos><id>123456</id><video_id>123456</video_id><url>http:</url><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><iid>94bccd061369cba108c2665445235154</iid><num_iid>1497217011</num_iid></videos><is_3D>true</is_3D><score>2</score><volume>22</volume><one_station>true</one_station><second_kill>web_only</second_kill><auto_fill>time_card</auto_fill><props_name>20000:3275069:品牌:盈讯;1753146:3485013:型号:F908;30606:112030:上市时间:2008年</props_name><violation>true</violation><created>2000-01-01 00:00:00</created><is_prepay>true</is_prepay><ww_status>true</ww_status><promoted_service>2</promoted_service><wap_desc>Wap宝贝详情</wap_desc><wap_detail_url>http:</wap_detail_url><after_sale_id>123</after_sale_id><sell_promise>true</sell_promise></item></item_add_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.item-add-service-error:CATEGORY_LIMIT_SPU_BOOK_NORMAL</code>
<desc>请在ISBN输入框内输入13位或10位ISBN数字，不包括“-”符号，如确认正确，则可能是该ISBN还未授权发布</desc>
<solution>前端做好“-”过滤，如果过滤之后还是报错，则该ISBN没有授权发布，为正常错误提醒，不要重试</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_NOT_AUTH_PUBLISH_CARDCODE</code>
<desc>对不起，您没有权限发布“自动发货”商品。</desc>
<solution>达到虚拟物品开通标准的卖家，经申请后淘宝会帮助开通虚拟物品自动发货标准，但是如果开通后又出现违反自动发货规则的卖家，淘宝会取消自动发货资格，出现这个错误不要重试</solution>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_DESC_IS_TOO_LONG</code>
<desc>参数：IC_ITEM_DESC_IS_TOO_LONG无效，格式不对、非法值、越界等</desc>
<solution>宝贝描述不能超过25000字</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_BRAND_NOT_GRANT_FOR_B</code>
<desc>未授权发布此品牌的商品</desc>
<solution>用taobao.itemcats.authorize.get接口确认被授权发布的品牌，再发布该品牌的商品</solution>
</error>
<error>
<code>isv.item-add-service-error:ITEM_INPUT_PROPERTIES_ERROR</code>
<desc>自定义输入属性错误</desc>
<solution>1.每天定期更新本地的类目属性缓存（早上5点以后），将已经不存在的或者已修改的类目属性从本地缓存中清除掉，保持本地数据和淘宝数据的一致性。  
2.发生错误不要重试，让用户重新编辑商品后再上传。将不存在的类目属性从本地移除，或者重新刷新本地的缓存记录。（后台每天只会更新一次缓存，所以要注意本地数据的维护）。</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_SPU_NOT_EXIST</code>
<desc>您发布的商品无对应产品，请登录“淘宝网”先行发布产品</desc>
<solution>B商家发布商品前要发布产品，如果已经有别的商家发布了相同产品，只需要搜索到该产品，再发布商品</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_ITEM_STUFF_MUST_SECONDHAND_IN_PROPERTY</code>
<desc>在此类属性必须发布二手商品</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:LACK_ORDINARY_POST_FEE</code>
<desc>缺少平邮价格</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_MINIMUMBID_IS_OVER_RANGE</code>
<desc>价格必须在0到1亿元之间</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_MUST_HAVE_INVOICE</code>
<desc>必须提供发票</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_ITME_SKU_PRICE_UNMATCH</code>
<desc>宝贝价格必须介于销售属性组合价格区间之内</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:CATEGORY_IS_NOT_LEAF_OR_NOT_EXIST</code>
<desc>选择的类目不存在或者类目路径不完整</desc>
<solution>调用taobao.itemcats.get接口更新类目</solution>
</error>
<error>
<code>isv.invalid-parameter:provcity</code>
<desc>宝贝发布地和个人所在地不一致</desc>
<solution>taobao.user.get来获取用户所在地以后再发布</solution>
</error>
<error>
<code>isv.invalid-parameter:sku-quantity</code>
<desc>参数：sku-quantity无效，格式不对、非法值、越界等</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_NO_PERMISSION</code>
<desc>您未通过认证或已被处罚，请核实</desc>
<solution>一旦发生该错误，就要将该用户做上标记，让用户去检查自己的权限问题，等用户处理好了让用户来手动取消禁止标记，否则就一直不能让用户发布架上的商品，或者上架、编辑商品。发生该错误不要重试。</solution>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_CATETORY_COULD_NOT_BE_EMPTY</code>
<desc>请选择宝贝类别</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:CATEGORY_LIMIT_SPU_HEALTH_XIAOER</code>
<desc>您只能发布取得国家保健食品批准文号的商品</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_BEYOND_LOW_PRICE_LIMIT</code>
<desc>本类目下 价格不得低于${CATEGORY_PRICE_LIMITED_LOW}</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_TITLE_IS_TOO_LONG</code>
<desc>商品标题超过限制长度</desc>
<solution>在前端对标题长度进行校验，如果校验不通过就让用户重新编辑再上传，不允许直接调用api，更不能重试</solution>
</error>
<error>
<code>isv.invalid-parameter:location-empty</code>
<desc>参数：location-empty无效，格式不对、非法值、越界等</desc>
<solution>前端可做好判断，location为必选参数</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_PRICE_ERROR</code>
<desc>不符合类目价格限制，此类目下最高价格为${CATEGORY_PRICE_LIMITED_HIGHT}，最低价格为${CATEGORY_PRICE_LIMITED_LOW}</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_SPU_STATUS_ERROR</code>
<desc>宝贝对应的产品已被屏蔽，请勿发布</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.invalid-permission:upload-image</code>
<desc>操作 upload-image 权限不够、非法访问</desc>
<solution>成人类目不允许直接上传图片</solution>
</error>
<error>
<code>isv.item-add-service-error:DESC_INCLUDE_FORBID_WORD</code>
<desc>描述包含违禁字请您自查</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:PROV_ERROR</code>
<desc>请检查省、市</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:RATE_SUM_TOO_LITTLE_TO_PUBLISH_MULTIAUCTION</code>
<desc>发布荷兰拍信用等级不够</desc>
<solution>拍卖有单件拍和荷兰拍两种类型，荷兰拍特征：拍卖数量大于1，发布荷兰拍商品卖家信用分数必须大于等于11分，也就是至少两颗心</solution>
</error>
<error>
<code>isv.invalid-parameter:inputPids</code>
<desc>传入的input_pids必需全为有效的数字格式</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:LACK_POSTAGE_ID</code>
<desc>运费模板出错</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.missing-parameter:sku-properties</code>
<desc>缺少指定sku的属性</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_APPLICATION_PERMISSION_INVALID</code>
<desc>您所使用的客户端软件没有操作权限，请核实</desc>
<solution>没有发布卡密的权限，不要重试</solution>
</error>
<error>
<code>isv.item-add-service-error:ERROR_SHOP_CATEGORY_HAS_SUB_CATEGORIES</code>
<desc>店铺分类不存在或者店铺分类错误</desc>
<solution>正常错误提醒，不要重试</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_SKU_MUST_IN_SPU_RANGE</code>
<desc>商品所选择销售属性超出产品许可范围，请联系小二确认</desc>
<solution>发布商品中的SKU必须包含在商家发布的产品的SKU内</solution>
</error>
<error>
<code>isv.mismatch-parameters:inputPids-and inputStr</code>
<desc>用户传入的自定义属性id和属性值之间的长度不匹配</desc>
<solution>1.参数的填充要严格按照文档说明的格式来拼装，充分做好自测工作 
2.让用户输入的地方尽量要容易输入（每个属性引导输入在一个空里面，不要一个大空格然用户自己拼装） 
3.发生错误不能重试</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_ITEM_MUST_IMAGE</code>
<desc>请添加宝贝图片</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_ITEM_STUFF_MUST_SECONDHAND_IN_CATEGORY</code>
<desc>在此类目必须发布二手商品</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.mismatch-parameters:sku</code>
<desc>sku属性不匹配</desc>
<solution>sku_outer_ids，sku_prices，sku_quantities，sku_properties这几个参数的个数要匹配</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_ITEM_PRICE_IS_OVER_RANGE</code>
<desc>价格必须在0到1亿元之间</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.invalid-parameter:cid</code>
<desc>参数：cid无效，格式不对、非法值、越界等或者用户指定商品所属的cid找不到对应的信息</desc>
<solution>1.每天定期更新本地的类目属性缓存（早上5点以后），将已经不存在的或者已修改的类目属性从本地缓存中清除掉，保持本地数据和淘宝数据的一致性 
2.发生错误不要重试，将不存在的类目属性从本地移除，或者重新刷新本地的缓存记录。（后台每天只会更新一次缓存，所以要注意本地数据的维护）</solution>
</error>
<error>
<code>isv.item-add-service-error:ITEM_PROPERTIES_ERROR</code>
<desc>${lostPropText}属性出错</desc>
<solution>1.发生错误需要让卖家重新编辑商品，不能直接重试 
2.发布商品前，需要对卖家发布商品的属性做好前端校验，看必填属性有没有缺失。可选属性有没有填错。属性最好直接让卖家选择，不要让卖家手工输入。 
3.如果卖家的商品关联了product，最好将product取出来的关键属性直接填充到商品的属性中，避面因用户乱选导致错误 。</solution>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_QUANTITY_IS_OVER_RANGE</code>
<desc>数量必须是1-999999的整数</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:TITLE_INCLUDE_FORBID_WORD</code>
<desc>标题包含违禁字请您自查</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.invalid-parameter:desc</code>
<desc>商品描述内容不能全为空格或者为空</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_PROPERTY_HAS_FORBID_WORDS</code>
<desc>属性有违禁字，请自行检查</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_SKU_PROP_NOT_FOUND_IN_ITEM</code>
<desc>宝贝销售属性出错（销售属性和商品属性不一致），请重新编辑</desc>
<solution>如果有销售属性，销售属性必须同时包括在props这个字段里</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_STD_MEASURE_INPUTVALUE_INVALID</code>
<desc>${stdProp} 属性只允许0-${maxN}之间的整数</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:ERROR_CHENGSE</code>
<desc>宝贝新旧程度和成色属性不匹配</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_AUCTION_POINT_0_LIMITED</code>
<desc>返点比例数必须大于零</desc>
<solution>在前端对返点比例数做好校验，大于零才允许调用接口</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CATEGORY_NOT_GRANT_FOR_B</code>
<desc>未授权发布此类目的商品</desc>
<solution>商家只能在授权的类目下发布商品，通过接口taobao.itemcats.authorize.get更新商家被授权的类目</solution>
</error>
<error>
<code>isv.item-add-service-error:QUANTITY_ITEM_CAT_TOO_LARGE</code>
<desc>您出售中的“${mainCategoryName}”类目下宝贝总数已超过此类目宝贝数量限额（卖家评分:${onlineLimitBeginRate}-${onlineLimitEndRate}，允许宝贝个数:${onlineLimitMax}），请您及时调整您的宝贝数量，再上传宝贝</desc>
<solution>将这个用户和这个类目做上关联标记，用户不能再到这个类目下发布在售商品，需要等卖家下架其他商品后再让他手动解除限制 ，发生该错误不能重试</solution>
</error>
<error>
<code>isv.invalid-permissin:upload-picPath-unconfirmed</code>
<desc>操作 upload-picPath-unconfirmed 权限不够、非法访问</desc>
<solution>成人类目不允许上传未被审核通过的图片</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_IMAGE_TYPE_IS_UNSUPPORTED</code>
<desc>不支持该图片类型</desc>
<solution>正常错误提醒，不要重试，用户编辑后再发布</solution>
</error>
<error>
<code>isv.invalid-parameter:picPath</code>
<desc>参数：picPath无效，格式不对、非法值、越界等</desc>
<solution>主要是盗链引起的，发布商品的时候，用户尽量用本地图片或图片空间的图片，不要重试</solution>
</error>
<error>
<code>isv.item-add-service-error:ERROR_PUBLISH_DUPLICATE</code>
<desc>宝贝重复发布</desc>
<solution>1.如果本地数据机制建立的比较完善可以在发布商品前先根据关键属性或product_id在本地数据库里匹配是否有相同的商品，如果有就不让用户发布 
2.如果本地数据机制建立不够完善，可以做到当用户发生这个错误的时候对用户在这个类目下的这些关键属性建立一组记录，标记为不可发布，等用户手动取消这个记录才能继续发布这个商品 
3.发生这个错误时不能直接重试，需要用户编辑商品后重新上传</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_ALREADY_EXISTS_SAME_SPU</code>
<desc>已经存在一个相同product的商品</desc>
<solution>1.如果本地数据机制建立的比较完善可以在发布商品前先根据关键属性或product_id在本地数据库里匹配是否有相同的商品，如果有就不让用户发布 
2.如果本地数据机制建立不够完善，可以做到当用户发生这个错误的时候对用户在这个类目下的这些关键属性建立一组记录，标记为不可发布，等用户手动取消这个记录才能继续发布这个产品 
3.发生这个错误时不能直接重试，需要用户编辑商品后重新上传</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_CHECKSTEP_NO_LOGIN_PERMISSION</code>
<desc>没有登陆权限</desc>
<solution>发生该错误，要将该用户做上标记，让用户去检查自己的权限问题，等用户处理好了让用户来手动取消禁止标记。否则就一直不能让用户发布架上的商品，或者上架、编辑商品 。发生该错误不能重试。</solution>
</error>
<error>
<code>isv.antisteal-service-error</code>
<desc>发布的商品描述中引用了别人的图片</desc>
<solution>1.在前段做好校验，调用api前对用户引入的商品描述图片进行防盗链检查（如果是图片空间的图片,以/分隔的倒数第二段应该是卖家的userId）如果存在盗链直接报错 
2. 发生该错误不要重试，重新编辑商品描述后再上传</solution>
</error>
<error>
<code>isv.item-add-service-error:IC_SPU_DISCOUNT_PRICE_LIMIT</code>
<desc>isv.item-add-service-error:IC_SPU_DISCOUNT_PRICE_LIMIT
商品的折扣价格超过product上规定的折扣区间</desc>
<solution>发生该错误时，让用户重新编辑折扣区间后再上传商品，发生该错误不能重试。</solution>
</error>
<error>
<code>isv.invalid-parameter:aftersaleid</code>
<desc>模板id无效</desc>
<solution>卖家售后服务说明模板id必须为自己的售后服务说明模板id。所以引用其他卖家的宝贝时要注意此项!</solution>
</error>
<error>
<code>isv.invalid-parameter:sellpromise</code>
<desc>退换货服务承诺无效</desc>
<solution>虚拟类商品,不需设置退换货服务承诺!(虚拟商品定义,商品的一级类目id:40,50004958,99,50011665)</solution>
</error>
<error>
<code>isv.item-codseller-applycorpfast-invalid:ITEM_CODSELLER_APPLYCORPFAST_INVALID</code>
<desc>支持COD的宝贝如果普通运费模板没有设置快递费，则必须设置COD运费模板</desc>
<solution>支持COD的宝贝如果普通运费模板没有设置快递费，则必须设置COD运费模板</solution>
</error>
<error>
<code>isv.error-when-corppostage-equal-zero:ERROR_WHEN_CORPPOSTAGE_EQUAL_ZERO</code>
<desc>设置运费为0的普通运费模板时还需设置货到付款运费模板</desc>
<solution>设置运费为0的普通运费模板时还需设置货到付款运费模板</solution>
</error>
</errors>
<faqs>
<faq>
<question>上传商品的时候props字段怎样写?</question>
<answer>上传商品的时候props是属性ID、属性值ID组合(pid: vid;pid: vid) ，用taobao.itemprops.get.v2得到pid,用taobao.itempropValues.get获得vid。 
或通过属性工具( http://open.taobao.com/api_tool/props/ )获得。</answer>
</faq>
<faq>
<question>如何获取商品中props、input_pids、input_str、sku_properties和cid?</question>
<answer>用taobao.itemcats.get.v2获得cid，用taobao.itemprops.get.v2得到pid,用taobao.itempropValues.get获得vid。或通过属性工具(http: //open.taobao.com/api_tool/props/)获得。</answer>
</faq>
<faq>
<question>宝贝所属的运费模板ID如何获得?</question>
<answer>taobao.postages.get可以获取卖家的运费模板,也可以通过taobao.postage.add添加运费模板。</answer>
</faq>
<faq>
<question>如何获得卖家自定义店铺类目ID?</question>
<answer>taobao.sellercats.list.get 可以获得卖家自定义类目ID</answer>
</faq>
<faq>
<question>输入参数中property_alias结构中的pid: vid串都支持哪些?我如何知道我给定的是合法的?这里的别名主要会用什么地方?</question>
<answer>属性可以通过taobao.itemprops.get.v2 获得，如果新增成功的是销售属性别名，那展示的时候销售属性值会以别名来显示。</answer>
</faq>
<faq>
<question>二手商品是否可以添加成色为全新的宝贝？</question>
<answer>二手商品不能添加成色为全新的宝贝。</answer>
</faq>
<faq>
<question>如何发布有子属性模版的商品</question>
<answer>input_str:"我的品牌;型号;我的型号;"input_sip:"20000"</answer>
</faq>
<faq>
<question>cid与product中cid那个为准</question>
<answer>如果出现不一致,product为确认过的话，以product中cid那个为准。反之，以商品cid为准</answer>
</faq>
<faq>
<question>非JAVA SDK如何创建一个Post请求（比如涉及图像上传的API）？</question>
<answer>参考非JAVA SDK 图像上传（http://wiki.open.taobao.com/index.php/%E9%9D%9EJAVA_SDK_%E5%9B%BE%E5%83%8F%E4%B8%8A%E4%BC%A0）</answer>
</faq>
<faq>
<question>商品与产品的区别?</question>
<answer>产品是商品标准属性的集合，以手机为例，诺基亚N78 那该款手机的大部分属性就确定下来了，款式，屏幕，颜色等等，那用户在发布该款商品的时候，大部分属性就不需要在输入了。淘宝把商品的标准属性的集合，称之为产品。</answer>
</faq>
<faq>
<question>发布产品成功，发布商品时报isbn必需10或13位?</question>
<answer>上传自定义关键属性时，属性pid传入到input_pids，属性值传到input_str,格式例如：request.setInputPids("1636953"); request.setInputStr("UQ058559200");</answer>
</faq>
<faq>
<question>发布宝贝时如何定时上架？</question>
<answer>首先设置approve_status为onsale,再设置list_time为你要上架的未来的一个时间,例：(2011-05-01 12:12:12)</answer>
</faq>
</faqs>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.delete</name>
<cname>删除单条商品</cname>
<authorize>必须用户授权</authorize>
<desc>删除单条商品</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，该参数必须</desc>
<sample>23242</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>被删除商品的相关信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_delete_response":{"item":{"created":"2010-05-11 10:42:46","num_iid":1489588066}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_delete_response><item><created>2010-05-11 10:07:43</created><num_iid>1489588028</num_iid></item></item_delete_response><!--vx215015.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution>前端做好是否已经传入num_iid的校验，必须要传入num_iid</solution>
</error>
<error>
<code>isv.invalid-permission:update-item</code>
<desc>操作 update-item 权限不够、非法访问</desc>
<solution>通过taobao.items.onsale.get等查询出来的num_iid对自己的商品进行删除，不能删除其它卖家的商品</solution>
</error>
<error>
<code>isv.item-is-delete:invalid-numIid</code>
<desc>根据num_iid查询到的商品已经被删除</desc>
<solution>使用增量api监控商品被删除的消息，
及时把发生这个错误的商品从本地数据库中删除掉，随时保持数据的同步性
发生这个错误时不要重试。</solution>
</error>
<error>
<code>isv.item-get-service-error:ITEM_NOT_FOUND</code>
<desc>没有找到宝贝</desc>
<solution>当商品被删除一定时间、或者商品长达3个月都没有被编辑过以后，商品会被移到历史库中再也找不到。解决该问题，可以使用增量api监控商品被删除的消息，及时把发生这个错误的商品从本地数据库中删除掉，随时保持数据的同步性。发生这个错误时不要重试。</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.get</name>
<cname>得到单个商品信息</cname>
<authorize>可选用户授权</authorize>
<desc>获取单个商品的详细信息  
卖家未登录时只能获得这个商品的公开数据，卖家登录后可以获取商品的所有数据</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的商品对象字段。可选值：Item商品结构体中所有字段均可返回；多个字段用“,”分隔。如果想返回整个子对象，那字段为item_img，如果是想返回子对象里面的字段，那字段为item_img.url。新增返回字段：second_kill（是否秒杀商品）、auto_fill（代充商品类型）,props_name（商品属性名称）</desc>
<sample>num_iid,title,price</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家昵称。强烈推荐在知道卖家昵称的情况下提供此字段以提高查询效率！</desc>
<sample>tbtest561</sample>
<default/>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID</desc>
<sample>3838293428</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>获取的商品 具体字段根据权限和设定的fields决定</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_get_response":{"item":{"approve_status":"instock","auction_point":0,"auto_repost":true,"cid":162103,"delist_time":"2010-01-22 14:58:29","desc":"测试测试测试测试测试","ems_fee":"10.00","express_fee":"5.00","freight_payer":"buyer","has_discount":true,"has_invoice":false,"has_showcase":false,"has_warranty":false,"increment":"0.00","input_pids":"","input_str":"","is_ex":false,"is_taobao":true,"list_time":"2010-01-08 14:58:29","location":{"city":"杭州","state":"浙江"},"modified":"2009-12-25 15:00:11","nick":"tbtest1064","num":100,"num_iid":1489209928,"post_fee":"10.00","postage_id":0,"price":"2.00","product_id":81078980,"property_alias":"","props":"31609:103422;20672:3216779;20673:29541;20000:29459;1625891:3216783","stuff_status":"new","title":"测试数据","type":"fixed","valid_thru":14}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_get_response><item><approve_status>instock</approve_status><auction_point>0</auction_point><auto_repost>true</auto_repost><cid>162103</cid><delist_time>2010-01-22 14:58:29</delist_time><desc>测试测试测试测试测试</desc><ems_fee>10.00</ems_fee><express_fee>5.00</express_fee><freight_payer>buyer</freight_payer><has_discount>true</has_discount><has_invoice>false</has_invoice><has_showcase>false</has_showcase><has_warranty>false</has_warranty><increment>0.00</increment><input_pids></input_pids><input_str></input_str><is_ex>false</is_ex><is_taobao>true</is_taobao><list_time>2010-01-08 14:58:29</list_time><location><city>杭州</city><state>浙江</state></location><modified>2009-12-25 15:00:11</modified><nick>tbtest1064</nick><num>100</num><num_iid>1489209928</num_iid><post_fee>10.00</post_fee><postage_id>0</postage_id><price>2.00</price><product_id>81078980</product_id><property_alias></property_alias><props>31609:103422;20672:3216779;20673:29541;20000:29459;1625891:3216783</props><stuff_status>new</stuff_status><title>测试数据</title><type>fixed</type><valid_thru>14</valid_thru></item></item_get_response><!--vx215015.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution>在前端对是否传入num_iid做好校验，必须传入num_iid</solution>
</error>
<error>
<code>isv.invalid-permission:nick-and-item</code>
<desc>商品ID与卖家昵称不匹配</desc>
<solution>输入num_iid就完全可以取得商品信息，nick只是可选，不确定的情况下请不要输入</solution>
</error>
<error>
<code>isv.item-get-service-error:ITEM_NOT_FOUND</code>
<desc>通过传入的num_iid找不到相应宝贝</desc>
<solution>1，输入的num_iid不正确，请通过taobao.items.get/taobao.items.search等查询接口获取正确的宝贝num_iid，再通过taobao.item.get接口查询宝贝详情  2，输入的num_iid对应的宝贝违规或已进入历史库，出现这样错误的宝贝直接进行删除操作</solution>
</error>
<error>
<code>isv.item-is-delete:invalid-numIid</code>
<desc>商品numIid对应的商品已经被删除</desc>
<solution>用增量接口taobao.increment.items.get 监控商品状态，定时更新数据库，不要重试</solution>
</error>
<error>
<code>isv.invalid-permission:get-item</code>
<desc>非商品所属的卖家无权查看仓库中的商品</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.img.delete</name>
<cname>删除商品图片</cname>
<authorize>必须用户授权</authorize>
<desc>删除itemimg_id 所指定的商品图片  
传入的num_iid所对应的商品必须属于当前会话的用户  
itemimg_id对应的图片需要属于num_iid对应的商品</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品图片ID</desc>
<sample>1645920</sample>
<default/>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，必选</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>商品图片结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_img_delete_response":{"item_img":{"created":"2010-05-11 10:57:37","id":1763006}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_img_delete_response><item_img><created>2010-05-11 12:00:10</created><id>1763127</id></item_img></item_img_delete_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:image-id</code>
<desc>参数：image-id无效，格式不对、非法值、越界等</desc>
<solution>通过taobao.item.get获取到图片id之后再对其进行更新</solution>
</error>
<error>
<code>isv.item-image-delete-service-error:ITEM_NOT_FOUND</code>
<desc>没有找到宝贝</desc>
<solution>宝贝已经被删除或入历史数据库，出现这种错误在本地数据库将该宝贝信息清除</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.img.upload</name>
<cname>添加商品图片</cname>
<authorize>必须用户授权</authorize>
<desc>添加一张商品图片到num_iid指定的商品中  
传入的num_iid所对应的商品必须属于当前会话的用户  
如果更新图片需要设置itemimg_id，且该itemimg_id的图片记录需要属于传入的num_iid对应的商品。如果新增图片则不用设置  
商品图片有数量和大小上的限制，根据卖家享有的服务（如：卖家订购了多图服务等），商品图片数量限制不同。</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品图片id(如果是更新图片，则需要传该参数)</desc>
<sample>12345</sample>
<default/>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，该参数必须</desc>
<sample>1489161932</sample>
<default/>
</param>
<param>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>图片序号</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<level>Basic</level>
<required>可选</required>
<desc>商品图片内容(更新图片其他信息时可以不传)。类型:JPG,GIF;大小不超过:1M</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>is_major</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否将该图片设为主图,可选值:true,false;默认值:false(非主图)</desc>
<sample>true</sample>
<default>false</default>
</param>
</request>
<response>
<param>
<name>item_img</name>
<type>ItemImg</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>商品图片结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_img_upload_response":{"item_img":{"created":"2010-05-11 11:15:14","id":1763028,"url":"http://img04.taobao.net/bao/uploaded/i4/65753805/T2Q.xbXXFkXXXXXXXX_!!65753805.jpg"}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_img_upload_response><item_img><created>2010-05-11 11:58:58</created><id>1763105</id><url>http:]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:image</code>
<desc>缺少必要的参数:image</desc>
<solution>要避免这个错误，需在前端做好校验，如果选择更改旧的图片，可以不校验图片是否存在；如果上传一张新的图片，要在前端做好必传参数校验</solution>
</error>
<error>
<code>isv.image-not-exist:invalid-image-id</code>
<desc>image 不存在</desc>
<solution>通过taobao.item.get获取到图片id之后再对其进行更新</solution>
</error>
<error>
<code>isv.item-image-upload-service-error:IC_IMAGE_CHECK_IMAGE_IS_UNSUCCESSFUL</code>
<desc>检查图片失败</desc>
<solution>避免这个错误，在前端对于图片类型要做好校验：在上传前先对图片进行压缩校验图片是否真的是一张图片，防止上传攻击的图片。</solution>
</error>
<error>
<code>isv.invalid-permission:image-num</code>
<desc>商品图片不能超过5张</desc>
<solution>Taobao.user.get返回字段里的item_img_num对于此限定范围有返回，在上传之前需要将已经有的商品图片数和可上传的数量进行校验，如果已经满额就不要再新增图片。</solution>
</error>
<error>
<code>isv.item-image-upload-service-error:IC_IMAGE_TYPE_IS_UNSUPPORTED</code>
<desc>不支持该图片类型</desc>
<solution>避免这个错误，在前端对于图片类型要做好校验：只支持jpg、jpeg、gif、png、zip这几种类型的图片。</solution>
</error>
<error>
<code>isv.invalid-permission:update-item</code>
<desc>操作 update-item 权限不够、非法访问</desc>
<solution>要避免这个错误，需在上传图片之前要先对商品的类目（cid）进行判断，如果是成人类目的商品就不要调用这个接口上传图片了。</solution>
</error>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：num_iid没有传入</desc>
<solution>前端做好判断，必须传入num_iid</solution>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>user 不存在</desc>
<solution>从本地数据库将此用户清除</solution>
</error>
<error>
<code>isv.item-image-upload-service-error:IC_ITEM_PIC_NUM_OVERFLOW</code>
<desc>宝贝图片数量超过限制</desc>
<solution/>
</error>
<error>
<code>isv.item-image-upload-service-error:IC_ITEM_PIC_IS_TOO_LARGES</code>
<desc>商品图片太大</desc>
<solution>要避免这个错误，需在前端对于图片类型要做好校验：主图不能超过500k</solution>
</error>
<error>
<code>isv.invalid-permission:picture-space</code>
<desc>操作 picture-space 权限不够、非法访问</desc>
<solution>非多图用户（B卖家或实名认证或买了多图服务）不能上传商品多图</solution>
</error>
<error>
<code>isv.item-is-delete:invalid-numIid</code>
<desc>根据num_iid查询到的商品一经被删除</desc>
<solution>这个是业务不可避免错误。可以通过一下途径来减少这个问题的发生： 
使用增量api监控商品被删除的消息 
发生这个错误的商品从本地数据库中删除掉，随时保持数据的同步性。
发生这个错误时不要重试。</solution>
</error>
<error>
<code>isv.item-get-service-error:ITEM_NOT_FOUND</code>
<desc>上传图片的商品找不到了</desc>
<solution>这个是业务不可避免错误。可以通过一下途径来减少这个问题的发生： 
使用增量api监控商品被删除的消息 
发生这个错误的商品从本地数据库中删除掉，随时保持数据的同步性 
发生这个错误时不要重试 。</solution>
</error>
<error>
<code>isv.picture-service-error</code>
<desc>上传图片到图片空间报错</desc>
<solution>避免这个错误，首先，要在前端对上传的图片进行大小校验：主图500k、非主图1m。 
其次，在前端对于图片类型要做好校验：只支持jpg、jpeg、gif、png、zip这几种类型的图片。 
最后，在前端可以在上传前先对图片进行压缩校验图片是否真的是一张图片，防止上传攻击的图片。</solution>
</error>
</errors>
<faqs>
<faq>
<question>非JAVA SDK如何创建一个Post请求（比如涉及图像上传的API）？</question>
<answer>参考非JAVA SDK 图像上传（http://wiki.open.taobao.com/index.php/%E9%9D%9EJAVA_SDK_%E5%9B%BE%E5%83%8F%E4%B8%8A%E4%BC%A0）</answer>
</faq>
</faqs>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.propimg.delete</name>
<cname>删除属性图片</cname>
<authorize>必须用户授权</authorize>
<desc>删除propimg_id 所指定的商品属性图片  
传入的num_iid所对应的商品必须属于当前会话的用户  
propimg_id对应的属性图片需要属于num_iid对应的商品</desc>
<request>
<param>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品属性图片ID</desc>
<sample>1646146</sample>
<default/>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，必选</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>属性图片结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_propimg_delete_response":{"prop_img":{"created":"2010-05-11 11:18:49","id":1763074}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_propimg_delete_response><prop_img><created>2010-05-11 12:02:46</created><id>1763151</id></prop_img></item_propimg_delete_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.propimg.upload</name>
<cname>添加或修改属性图片</cname>
<authorize>必须用户授权</authorize>
<desc>添加一张商品属性图片到num_iid指定的商品中  
传入的num_iid所对应的商品必须属于当前会话的用户  
图片的属性必须要是颜色的属性，这个在前台显示的时候需要和sku进行关联的  
商品属性图片只有享有服务的卖家（如：淘宝大卖家、订购了淘宝多图服务的卖家）才能上传  
商品属性图片有数量和大小上的限制，最多不能超过24张（每个颜色属性都有一张）。</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，必选</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>属性列表。调用taobao.itemprops.get获取类目属性，属性必须是颜色属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid。</desc>
<sample>1627207:28326</sample>
<default/>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<level>Basic</level>
<required>可选</required>
<desc>属性图片内容。类型:JPG,GIF;最大长度:500K;图片大小不超过:1M</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>属性图片ID。如果是新增不需要填写</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>position</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>图片位置</desc>
<sample>122</sample>
<default>0</default>
</param>
</request>
<response>
<param>
<name>prop_img</name>
<type>PropImg</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>PropImg属性图片结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_propimg_upload_response":{"prop_img":{"created":"2010-05-11 11:15:52","id":1763034,"url":"http://img06.taobao.net/bao/uploaded/i6/65753805/T2BodbXX0bXXXXXXXX_!!65753805.jpg"}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_propimg_upload_response><prop_img><created>2010-05-11 11:59:44</created><id>1763111</id><url>http:]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:image</code>
<desc>缺少必要的参数:image</desc>
<solution>前端做好校验，上传属性图的时候必须传入图片</solution>
</error>
<error>
<code>isv.item-get-service-error:ITEM_NOT_FOUND</code>
<desc>没有找到宝贝</desc>
<solution>商品被删除或不存在，直接更新本地数据库，将旧的商品删除</solution>
</error>
<error>
<code>isv.item-image-upload-service-error:ITEM_NOT_FOUND</code>
<desc>没有找到宝贝</desc>
<solution>商品被删除或不存在，直接更新本地数据库，将旧的商品删除</solution>
</error>
<error>
<code>isv.image-not-exist:invalid-image-id</code>
<desc>image 不存在</desc>
<solution>通过taobao.item.get获取到图片id之后再对其进行更新</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.quantity.update</name>
<cname>宝贝/SKU库存修改</cname>
<authorize>必须用户授权</authorize>
<desc>提供按照全量或增量形式修改宝贝/SKU库存的功能</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，必填参数</desc>
<sample>3838293428</sample>
<default/>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>要操作的SKU的数字ID，可选。如果不填默认修改宝贝的库存，如果填上则修改该SKU的库存</desc>
<sample>1230005</sample>
<default/>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>SKU的商家编码，可选参数。如果不填则默认修改宝贝的库存，如果填了则按照商家编码搜索出对应的SKU并修改库存。当sku_id和本字段都填写时以sku_id为准搜索对应SKU</desc>
<sample>1234</sample>
<default/>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>库存修改值，必选。当全量更新库存时，quantity必须为大于等于0的正整数；当增量更新库存时，quantity为整数，可小于等于0。若增量更新时传入的库存为负数且绝对值小于当前实际库存，则库存改为0。比如当前实际库存为1，传入增量更新quantity=-5，库存改为0</desc>
<sample>0</sample>
<default/>
</param>
<param>
<name>type</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>库存更新方式，可选。1为全量更新，2为增量更新。如果不填，默认为全量更新</desc>
<sample>1</sample>
<default>1</default>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>iid、numIid、num和modified，skus中每个sku的skuId、quantity和modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_quantity_update_response":{"item":{"detail_url":"http://item.taobao.com/item.htm?id=4947813209","num_iid":1489161932,"title":"Google test item","nick":"tbtest561","type":"fixed","skus":{"sku":[{"sku_id":123,"iid":"asdf12323adfaa","num_iid":"12345","properties":"1243:1215;5626:5125","quantity":3,"price":"200.07","outer_id":"12345","created":"2009-11-04 15:24:43","modified":"2009-11-04 15:24:43","status":"normal"}]},"props_name":"20000:3275069:品牌:盈讯;1753146:3485013:型号:F908;30606:112030:上市时间:2008年","promoted_service":"2","cid":132443,"seller_cids":"2234445,3344466,446434","props":"135255:344454","input_pids":"2432,5353,656425","input_str":"耐克;耐克系列;科比系列;科比系列;2K5","desc":"这是一个好商品","pic_url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","num":8888,"valid_thru":7,"list_time":"2009-10-22 14:22:06","delist_time":"2000-01-01 00:00:00","stuff_status":"new","location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"},"price":"5.00","post_fee":"5.00","express_fee":"5.00","ems_fee":"5.00","has_discount":true,"freight_payer":"seller","has_invoice":true,"has_warranty":true,"has_showcase":true,"modified":"2000-01-01 00:00:00","increment":"0","approve_status":"onsale","postage_id":32,"product_id":85883030,"auction_point":15,"property_alias":"property","item_imgs":{"item_img":[{"id":1645920,"url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","position":1,"created":"2000-01-01 00:00:00"}]},"prop_imgs":{"prop_img":[{"id":1646146,"url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","properties":"1627207:28326","position":1,"created":"2000-01-01 00:00:00"}]},"outer_id":"34143554352","is_virtual":true,"is_taobao":true,"is_ex":true,"is_timing":true,"videos":{"video":[{"id":123456,"video_id":123456,"url":"http://js.tudouui.com/bin/taobaoisv/TaoBaoPlayer.swf……","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","iid":"94bccd061369cba108c2665445235154","num_iid":1497217011}]},"is_3D":true,"score":2,"volume":22,"one_station":true,"second_kill":"web_only","auto_fill":"time_card","violation":true,"created":"2000-01-01 00:00:00","is_prepay":true,"ww_status":true,"wap_desc":"Wap宝贝详情","wap_detail_url":"http://auction1.wap.taobao.com/auction/item_detail-0db0-1234567.jhtml","after_sale_id":123,"cod_postage_id":53899,"sell_promise":true}}}]]></json>
<xml><![CDATA[<item_quantity_update_response><item><detail_url>http:</detail_url><num_iid>1489161932</num_iid><title>Google test item</title><nick>tbtest561</nick><type>fixed</type><skus list="true"><sku><sku_id>123</sku_id><iid>asdf12323adfaa</iid><num_iid>12345</num_iid><properties>1243:1215;5626:5125</properties><quantity>3</quantity><price>200.07</price><outer_id>12345</outer_id><created>2009-11-04 15:24:43</created><modified>2009-11-04 15:24:43</modified><status>normal</status></sku></skus><props_name>20000:3275069:品牌:盈讯;1753146:3485013:型号:F908;30606:112030:上市时间:2008年</props_name><promoted_service>2</promoted_service><cid>132443</cid><seller_cids>2234445,3344466,446434</seller_cids><props>135255:344454</props><input_pids>2432,5353,656425</input_pids><input_str>耐克;耐克系列;科比系列;科比系列;2K5</input_str><desc>这是一个好商品</desc><pic_url>http:</pic_url><num>8888</num><valid_thru>7</valid_thru><list_time>2009-10-22 14:22:06</list_time><delist_time>2000-01-01 00:00:00</delist_time><stuff_status>new</stuff_status><location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></location><price>5.00</price><post_fee>5.00</post_fee><express_fee>5.00</express_fee><ems_fee>5.00</ems_fee><has_discount>true</has_discount><freight_payer>seller</freight_payer><has_invoice>true</has_invoice><has_warranty>true</has_warranty><has_showcase>true</has_showcase><modified>2000-01-01 00:00:00</modified><increment>0</increment><approve_status>onsale</approve_status><postage_id>32</postage_id><product_id>85883030</product_id><auction_point>15</auction_point><property_alias>property</property_alias><item_imgs list="true"><item_img><id>1645920</id><url>http:</url><position>1</position><created>2000-01-01 00:00:00</created></item_img></item_imgs><prop_imgs list="true"><prop_img><id>1646146</id><url>http:</url><properties>1627207:28326</properties><position>1</position><created>2000-01-01 00:00:00</created></prop_img></prop_imgs><outer_id>34143554352</outer_id><is_virtual>true</is_virtual><is_taobao>true</is_taobao><is_ex>true</is_ex><is_timing>true</is_timing><videos list="true"><video><id>123456</id><video_id>123456</video_id><url>http:</url><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><iid>94bccd061369cba108c2665445235154</iid><num_iid>1497217011</num_iid></video></videos><is_3D>true</is_3D><score>2</score><volume>22</volume><one_station>true</one_station><second_kill>web_only</second_kill><auto_fill>time_card</auto_fill><violation>true</violation><created>2000-01-01 00:00:00</created><is_prepay>true</is_prepay><ww_status>true</ww_status><wap_desc>Wap宝贝详情</wap_desc><wap_detail_url>http:</wap_detail_url><after_sale_id>123</after_sale_id><cod_postage_id>53899</cod_postage_id><sell_promise>true</sell_promise></item></item_quantity_update_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:type</code>
<desc>更新方式有误</desc>
<solution>不传入参数，或传入数字类型的1或者2</solution>
</error>
<error>
<code>isv.invalid-parameter:quantity</code>
<desc>库存数量不能为负数</desc>
<solution>改为大于等于0的整数</solution>
</error>
<error>
<code>isp.item-quantity-item-update-service-unavailable</code>
<desc>更新商品库存服务不可用</desc>
<solution>通知开发人员</solution>
</error>
<error>
<code>isp.item-quantity-sku-update-service-unavailable</code>
<desc>更新sku库存服务不可用</desc>
<solution>通知开发人员</solution>
</error>
<error>
<code>isp.item-get-service-unavailable</code>
<desc>获取单个商品服务不可用</desc>
<solution>联系开发人员</solution>
</error>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>商品num_iid必须传入</desc>
<solution>传入参数</solution>
</error>
<error>
<code>isv.item-is-delete:invalid-numIid-or-iid</code>
<desc>商品id对应的商品已经被删除</desc>
<solution>检查商品Id是否正确，或联系开发人员</solution>
</error>
<error>
<code>isv.item-not-exist:invalid-numIid-or-iid</code>
<desc>商品id对应的商品不存在</desc>
<solution>检查商品Id是否正确，或联系开发人员</solution>
</error>
<error>
<code>isv.invalid-parameter:sku-properties</code>
<desc>传入的sku的属性找不到对应的sku记录</desc>
<solution>检查skuId或者outerId是否正确，或联系开发人员</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.recommend.add</name>
<cname>橱窗推荐一个商品</cname>
<authorize>必须用户授权</authorize>
<desc>将当前用户指定商品设置为橱窗推荐状态 
橱窗推荐需要用户有剩余橱窗位才可以顺利执行 
这个Item所属卖家从传入的session中获取，需要session绑定 
需要判断橱窗推荐是否已满，橱窗推荐已满停止调用橱窗推荐接口，2010年1月底开放查询剩余橱窗推荐数后可以按数量橱窗推荐商品</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，该参数必须</desc>
<sample>122345</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>被推荐的商品的信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_recommend_add_response":{"item":{"num_iid":1489161932,}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_recommend_add_response><item><num_iid>1489161932</num_iid></item></item_recommend_add_response><!--vx215015.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution>该接口在调用前先要进行校验，必须要传入num_iid。</solution>
</error>
<error>
<code>isv.item-recommend-service-error:ERROR_MORE_THAN_ALLOWED_RECOMMEND_NUM</code>
<desc>橱窗推荐超过了最大推荐数量</desc>
<solution>1.橱窗推荐的时候要求用户输入橱窗推荐总量，有的用户会多输，所以报橱窗推荐超过最大推荐数的错误，每天定时更新橱窗总量，橱窗总量=已推荐橱窗+剩余橱窗（不能完全杜绝这个错误）    2.开发者先调用taobao.shop.remainshowcase.get
接口获取卖家的剩余橱窗数，做好逻辑判断，再调用。</solution>
</error>
<error>
<code>isv.item-recommend-service-error:ERROR_MYTAOBAO_RECOMMEND_USER_NOT_PROMOTED</code>
<desc>卖家无权限推荐宝贝</desc>
<solution/>
</error>
<error>
<code>isv.item-recommend-service-error:ITEM_NOT_FOUND</code>
<desc>没有找到宝贝</desc>
<solution>宝贝已被删除或者不存在，用增量接口taobao.increment.items.get获取宝贝被删除信息，并定时将已经删除宝贝或不存在宝贝在本地数据库中删除，不要重试</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.recommend.delete</name>
<cname>取消橱窗推荐一个商品</cname>
<authorize>必须用户授权</authorize>
<desc>取消当前用户指定商品的橱窗推荐状态 
这个Item所属卖家从传入的session中获取，需要session绑定</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，该参数必须</desc>
<sample>122345</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>被取消橱窗推荐的商品信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_recommend_delete_response":{"item":{"num_iid":1489161932,"modified":"2010-05-11 10:45:17"}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_recommend_delete_response><item><num_iid>1489161932</num_iid><modified>2010-05-11 10:10:14</modified></item></item_recommend_delete_response><!--vx215015.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution>请传入num_iid这个必选参数</solution>
</error>
<error>
<code>isv.item-recommend-service-error:ERROR_MYTAOBAO_RECOMMEND_USER_NOT_PROMOTED</code>
<desc>卖家无权限推荐宝贝</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.sku.add</name>
<cname>添加SKU</cname>
<authorize>必须用户授权</authorize>
<desc>新增一个sku到num_iid指定的商品中  
传入的iid所对应的商品必须属于当前会话的用户</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取。必选</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如:1627207:3232483;1630696:3284570,表示:机身颜色:军绿色;手机套餐:一电一充</desc>
<sample>1627207:28326;1630696:3266779</sample>
<default/>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)。取值范围:大于零的整数</desc>
<sample>3</sample>
<default/>
</param>
<param>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku的销售价格。商品的价格要在商品所有的sku的价格之间。精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
<sample>200.07</sample>
<default/>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku的商家外部id</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>sku所属商品的价格。当用户新增sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够添加成功</desc>
<sample>200.07</sample>
<default/>
</param>
<param>
<name>lang</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
<sample>zh_CN</sample>
<default>zh_CN</default>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>sku</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_sku_add_response":{"sku":{"created":"2010-05-11 10:58:13","num_iid":1497922441}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_sku_add_response><sku><created>2010-05-11 12:00:49</created><num_iid>1497927831</num_iid></sku></item_sku_add_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.item-update-service-error:IC_CATEGORY_NOT_GRANT_FOR_B</code>
<desc>未授权发布此类目的商品</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_NO_PERMISSION</code>
<desc>您未通过认证或已被处罚，请核实</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_PROP_NOT_FOUND_IN_ITEM</code>
<desc>宝贝销售属性出错（销售属性和商品属性不一致），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ITEM_INPUT_PROPERTIES_ERROR</code>
<desc>输入属性错误</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_PROP_NOT_SALE</code>
<desc>宝贝销售属性出错（非销售属性），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:GENERIC_FAILURE</code>
<desc>系统错误，请稍后再试</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:QUANTITY_ITEM_CAT_TOO_LARGE</code>
<desc>您出售中的“${mainCategoryName}”类目下宝贝总数已超过此类目宝贝数量限额（卖家评分:${onlineLimitBeginRate}-${onlineLimitEndRate}，允许宝贝个数:${onlineLimitMax}），请您及时调整您的宝贝数量，再上传宝贝</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_ITEM_DESC_COULD_NOT_BE_EMPTY</code>
<desc>宝贝描述不能为空</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:FORBIDDEN_QUANTITY_ZERO_ERROR</code>
<desc>上架的数量必须大于0</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_INVALID_SPU_FOR_VERTICAL</code>
<desc>产品不在产品库内，请联系我们的小二！</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_DUPLICATE</code>
<desc>宝贝销售属性出错（重复），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_PROP_DUPLICATE</code>
<desc>宝贝销售属性出错（属性重复），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.item-is-delete:invalid-numIid</code>
<desc>根据num_iid查询到的商品一经被删除</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_ALREADY_EXISTS_SAME_SPU</code>
<desc>您已发布过同类宝贝，不允许重复发布</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ITEM_PROPERTIES_ERROR</code>
<desc>${lostPropText}属性出错</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.sku.delete</name>
<cname>删除SKU</cname>
<authorize>必须用户授权</authorize>
<desc>删除一个sku的数据 
需要删除的sku通过属性properties进行匹配查找</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取。必选</desc>
<sample>1489161932</sample>
<default/>
</param>
<param>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充</desc>
<sample>1627207:28341</sample>
<default/>
</param>
<param>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>sku所属商品的价格。当用户删除sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够删除成功</desc>
<sample>10.05</sample>
<default/>
</param>
<param>
<name>item_num</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>sku所属商品的数量,大于0的整数。当用户删除sku，使商品数量不等于sku数量之和时候，用于修改商品的数量，使sku能够删除成功。特别是删除最后一个sku的时候，一定要设置商品数量到正常的值，否则删除失败</desc>
<sample>12</sample>
<default/>
</param>
<param>
<name>lang</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
<sample>zh_HK</sample>
<default>zh_CN</default>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>Sku结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_sku_delete_response":{"sku":{"modified":"2010-05-11 11:25:58","num_iid":1497926905}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_sku_delete_response><sku><modified>2010-05-11 12:10:30</modified><num_iid>1497928621</num_iid></sku></item_sku_delete_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.item-update-service-error:IC_SKU_MUST_IN_SPU_RANGE</code>
<desc>商品所选择销售属性超出产品许可范围，请联系小二确认</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ITEM_INPUT_PROPERTIES_ERROR</code>
<desc>输入属性错误</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ITEM_PROPERTIES_ERROR</code>
<desc>${lostPropText}属性出错</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_PROP_NOT_FOUND_IN_ITEM</code>
<desc>宝贝销售属性出错（销售属性和商品属性不一致），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_DUPLICATE</code>
<desc>宝贝销售属性出错（重复），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_BRAND_NOT_GRANT_FOR_B</code>
<desc>未授权发布此品牌的商品</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_ITME_SKU_PRICE_UNMATCH</code>
<desc>宝贝价格必须介于销售属性组合价格区间之内</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:GENERIC_FAILURE</code>
<desc>系统错误，请稍后再试</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_ITEM_DESC_COULD_NOT_BE_EMPTY</code>
<desc>宝贝描述不能为空</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:QUANTITY_ITEM_CAT_TOO_LARGE</code>
<desc>您出售中的“${mainCategoryName}”类目下宝贝总数已超过此类目宝贝数量限额（卖家评分:${onlineLimitBeginRate}-${onlineLimitEndRate}，允许宝贝个数:${onlineLimitMax}），请您及时调整您的宝贝数量，再上传宝贝</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CATEGORY_NOT_GRANT_FOR_B</code>
<desc>未授权发布此类目的商品</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:sku-properties</code>
<desc>您所传入的属性找不到对应的sku记录</desc>
<solution>确认传入的是正确的SKU属性串:pid:vid;pid:vid，可在删除之前通过taobao.item.get获取相应的SKU属性串</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.sku.get</name>
<cname>获取SKU</cname>
<authorize>不需用户授权</authorize>
<desc>获取单个商品下的sku</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。</desc>
<sample>sku_id,iid,properties,quantity,price,outer_id,created,modified,status</sample>
<default/>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku的id。可以通过taobao.item.get得到</desc>
<sample>81893848</sample>
<default/>
</param>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品的数字IID（推荐用num_iid）</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家nick</desc>
<sample>test1065</sample>
<default/>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>Sku</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_sku_get_response":{"sku":{"created":"2010-05-11 11:22:33","iid":"ee059df6e2c95e73b44f149517a53e67","modified":"2010-05-11 11:22:33","outer_id":"qixiuceshi2","price":"1000.00","properties":"1627207:28320;1630696:3266781","quantity":3,"sku_id":86171736,"status":"normal"}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_sku_get_response><sku><created>2010-05-11 12:06:29</created><iid>113db72580ec8243498d55823b55b030</iid><modified>2010-05-11 12:06:29</modified><outer_id>qixiuceshi2</outer_id><price>1000.00</price><properties>1627207:28320;1630696:3266781</properties><quantity>3</quantity><sku_id>86172944</sku_id><status>normal</status></sku></item_sku_get_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:nick-or-numIid</code>
<desc>缺少必须参数: nick 或 num_iid</desc>
<solution>nick 或 num_iid至少传入一个</solution>
</error>
<error>
<code>isv.item-sku-get-service-error</code>
<desc>通过skuId获取SKU失败</desc>
<solution>1，用户传入的nick和sku_id不匹配或者num_iid和sku_id不匹配，可以用taobao.item.get获取nick或num_iid对应的sku_iid，在前端作好判断  2，用户指定的num_iid不存在（已删除、不存在、已经进历史库）,出现这个错，本地数据库删除掉对应的数据</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.sku.update</name>
<cname>更新SKU信息</cname>
<authorize>必须用户授权</authorize>
<desc>*更新一个sku的数据  
*需要更新的sku通过属性properties进行匹配查找  
*商品的数量和价格必须大于等于0  
*sku记录会更新到指定的num_iid对应的商品中  
*num_iid对应的商品必须属于当前的会话用户</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku所属商品数字id，可通过 taobao.item.get 获取</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>properties</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku属性串。格式:pid:vid;pid:vid,如: 1627207:3232483;1630696:3284570,表示机身颜色:军绿色;手机套餐:一电一充</desc>
<sample>1627207:28326;1630696:3266779</sample>
<default/>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku的库存数量。sku的总数量应该小于等于商品总数量(Item的NUM)，sku数量变化后item的总数量也会随着变化。取值范围:大于等于零的整数</desc>
<sample>3</sample>
<default/>
</param>
<param>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku的销售价格。精确到2位小数;单位:元。如:200.07，表示:200元7分。修改后的sku价格要保证商品的价格在所有sku价格所形成的价格区间内（例如：商品价格为6元，sku价格有5元、10元两种，如果要修改5元sku的价格，那么修改的范围只能是0-6元之间；如果要修改10元的sku，那么修改的范围只能是6到无穷大的区间中）</desc>
<sample>207.02</sample>
<default/>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku的商家外部id</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>item_price</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>sku所属商品的价格。当用户更新sku，使商品价格不属于sku价格之间的时候，用于修改商品的价格，使sku能够更新成功</desc>
<sample>204</sample>
<default/>
</param>
<param>
<name>lang</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku文字的版本。可选值:zh_HK(繁体),zh_CN(简体);默认值:zh_CN</desc>
<sample>zh_CN</sample>
<default>zh_CN</default>
</param>
</request>
<response>
<param>
<name>sku</name>
<type>Sku</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>商品Sku</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_sku_update_response":{"sku":{"modified":"2010-05-11 10:58:06","num_iid":1497922431}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_sku_update_response><sku><modified>2010-05-11 12:00:42</modified><num_iid>1497927821</num_iid></sku></item_sku_update_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.item-update-service-error:IC_SKU_MUST_IN_SPU_RANGE</code>
<desc>商品所选择销售属性超出产品许可范围，请联系小二确认</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_BRAND_NOT_GRANT_FOR_B</code>
<desc>未授权发布此品牌的商品</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ITEM_NOT_FOUND</code>
<desc>没有找到宝贝</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_PRICE_ERROR</code>
<desc>不符合类目价格限制，此类目下最高价格为${CATEGORY_PRICE_LIMITED_HIGHT}，最低价格为${CATEGORY_PRICE_LIMITED_LOW}</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ITEM_INPUT_PROPERTIES_ERROR</code>
<desc>输入属性错误</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_INVALID_SPU_FOR_VERTICAL</code>
<desc>产品不在产品库内，请联系我们的小二！</desc>
<solution/>
</error>
<error>
<code>isv.item-get-service-error:ITEM_NOT_FOUND</code>
<desc>没有找到宝贝</desc>
<solution>1.使用增量api监控商品被删除的消息。
2.发生这个错误的商品和商品所属的所有sku从本地数据库中删除掉，随时保持数据的同步性
3.发生这个错误时不要重试，并且剩余的sku操作也不要再进行了。</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CATEGORY_NOT_GRANT_FOR_B</code>
<desc>未授权发布此类目的商品</desc>
<solution/>
</error>
<error>
<code>isv.item-is-delete:invalid-numIid</code>
<desc>numiid已经删除</desc>
<solution>1. 使用增量api监控商品被删除的消息. 2. 发生这个错误的商品和商品所属的所有sku从本地数据库中删除掉，随时保持数据的同步性. 3.发生这个错误时不要重试，并且剩余的sku操作就不要再进行了。</solution>
</error>
<error>
<code>isv.item-update-service-error:QUANTITY_ITEM_CAT_TOO_LARGE</code>
<desc>您出售中的“${mainCategoryName}”类目下宝贝总数已超过此类目宝贝数量限额（卖家评分:${onlineLimitBeginRate}-${onlineLimitEndRate}，允许宝贝个数:${onlineLimitMax}），请您及时调整您的宝贝数量，再上传宝贝</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_ALREADY_EXISTS_SAME_SPU</code>
<desc>您已发布过同类宝贝，不允许重复发布</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_PRICE_LIMIT_FOR_DPC</code>
<desc>宝贝价格须在指定零售价范围内（${lowPriceForDpc}-${highPriceForDpc}元），如有异常，请您登陆分销平台同步商品信息</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:sku-quantity-or-price</code>
<desc>参数：sku-quantity or price都是必传参数</desc>
<solution>每次编辑sku的时候，如果是用户新加的sku，增加校验quantity和price都必需要传进来。或者每次编辑都将这两个参数传回来，不传就前端报错，不允许调用接口。</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_DUPLICATE</code>
<desc>宝贝销售属性出错（重复），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ITEM_PROPERTIES_ERROR</code>
<desc>${lostPropText}属性出错</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_PROP_NOT_FOUND_IN_ITEM</code>
<desc>宝贝销售属性出错（销售属性和商品属性不一致），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_NO_PERMISSION</code>
<desc>您未通过认证或已被处罚，请核实</desc>
<solution>1.发生该错误时不能重试。2.将这个用户做上标记，让用户区检查自己的权限问题，等用户处理好了让用户来手动取消禁止标记。否则就一直不能让用户发布架上的商品，或者上架、编辑商品</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_ITEM_3C_RULE_INVOICE</code>
<desc>淘宝电器城商品必须有发票/有保修/卖家包邮</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_SELLER_NEED_PAY_POSTFEE</code>
<desc>必须由卖家承担运费</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:FORBIDDEN_QUANTITY_ZERO_ERROR</code>
<desc>上架的数量必须大于0</desc>
<solution>此接口需要在前端做好改进控制：1.编辑sku前需要对当前商品所有的sku进行判断，如果此sku是最后一个有数量的sku，不能将他更新为0，或者直接将sku下架即可。2.在批量对sku进行编辑的时候要注意编辑顺序，先增加sku或者先编辑数量不为0的sku，再编辑数量为0 的sku或者删除sku。3.出现此错误不能重试，要提示卖家重新编辑商品。</solution>
</error>
<error>
<code>isv.item-update-service-error:ERROR_SHOP_CATEGORY_HAS_SUB_CATEGORIES</code>
<desc>自定义店铺分类不存在或者店铺分类错误</desc>
<solution>更新自定义店铺类目的时候要先搜一下店铺该类目下是否有商品，如果有商品，要同时更新商品的seller_cids，但如果是用户在淘宝后台更改自定义类目，则出现错误后不要重试，然后用户到淘宝后台修改</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_ITEM_DESC_COULD_NOT_BE_EMPTY</code>
<desc>商品描述为空</desc>
<solution>出现问题后不要重试</solution>
</error>
</errors>
<faqs>
<faq>
<question>什么是SKU,它的数量和商品的数量有何关系？</question>
<answer>例如上传一件衣服，颜色和尺码就组成了一个SKU，sku的总数量等于商品的数量,商品的价格不能低于SKU最低价格也不能高于SKU最高价格。</answer>
</faq>
<faq>
<question>Sku属性串properties字段怎样写?</question>
<answer>用taobao.itemcats.get.v2获得cid，用taobao.itemprops.get.v2得到销售属性pid,用 taobao.itempropValues.get获得vid。或通过属性工具(http: //open.taobao.com/api_tool/props/)获得。</answer>
</faq>
<faq>
<question>taobao.item.sku.update能否同时更新多组sku?</question>
<answer>不能同时更新多组sku,只能每次更新一组</answer>
</faq>
</faqs>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.skus.get</name>
<cname>根据卖家昵称和商品ID列表获取SKU信息</cname>
<authorize>不需用户授权</authorize>
<desc>* 获取多个商品下的所有sku</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”分隔。</desc>
<sample>sku_id,num_iid</sample>
<default/>
</param>
<param>
<name>num_iids</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>sku所属商品数字id，　必选</desc>
<sample>1230005</sample>
<default/>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>Sku列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_skus_get_response":{"skus":{"sku":[{"created":"2010-05-11 11:18:24","modified":"2010-05-11 11:18:24","num_iid":1497924965,"outer_id":"wanpeitest_topapi_item_add","price":"1000.00","properties":"1627207:3232482;1630696:3266781","quantity":5,"sku_id":86171256,"status":"normal"},{"created":"2010-05-11 11:18:25","iid":"26bc5438a9d1091079f91a1b10fa1fe5","modified":"2010-05-11 11:18:25","num_iid":1497924969,"outer_id":"wanpeitest_topapi_item_add","price":"1000.00","properties":"1627207:28320","quantity":5,"sku_id":86171258,"status":"normal"}]}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_skus_get_response><skus list="true"><sku><created>2010-05-11 12:02:19</created><modified>2010-05-11 12:02:19</modified><num_iid>1497927973</num_iid><outer_id>wanpeitest_topapi_item_add</outer_id><price>1000.00</price><properties>1627207:3232482;1630696:3266781</properties><quantity>5</quantity><sku_id>86172732</sku_id><status>normal</status></sku><sku><created>2010-05-11 12:02:20</created><iid>e45afa206786ae4e932b46b053deaa7e</iid><modified>2010-05-11 12:02:20</modified><num_iid>1497927975</num_iid><outer_id>wanpeitest_topapi_item_add</outer_id><price>1000.00</price><properties>1627207:28320</properties><quantity>5</quantity><sku_id>86172734</sku_id><status>normal</status></sku></skus></item_skus_get_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:numIids-size</code>
<desc>参数：numIids-size无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>user 不存在</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:numIid</code>
<desc>传入的商品num_iid错误：***</desc>
<solution>api会对用户传入的numIids进行解析，如果里面有非数字格式的num_iid表示参数不合法会报错，需要在前端做好基本的校验，每个商品数字id都需要是数字类型的。</solution>
</error>
<error>
<code>isv.missing-parameter:numIids</code>
<desc>num_iids没有传入</desc>
<solution>前端做好校验，必须传入num_iids</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.update</name>
<cname>更新商品信息</cname>
<authorize>必须用户授权</authorize>
<desc>根据传入的num_iid更新对应的商品的数据  
传入的num_iid所对应的商品必须属于当前会话的用户  
商品的属性和sku的属性有包含的关系，商品的价格要位于sku的价格区间之中（例如，sku价格有5元、10元两种，那么商品的价格就需要大于等于5元，小于等于10元，否则更新商品会失败）  
商品的类目和商品的价格、sku的价格都有一定的相关性（具体的关系要通过类目属性查询接口获得）  
当关键属性值更新为“其他”的时候，需要输入input_pids和input_str商品才能更新成功。</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，该参数必须</desc>
<sample>3838293428</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>叶子类目id</desc>
<sample>1512</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品属性列表。格式:pid:vid;pid:vid。属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。 如果该类目下面没有属性，可以不用填写。如果有属性，必选属性必填，其他非必选属性可以选择不填写.属性不能超过35对。所有属性加起来包括分割符不能超过549字节，单个属性没有限制。 如果有属性是可输入的话，则用字段input_str填入属性的值。</desc>
<sample>20000:33564;21514:38489</sample>
<default/>
</param>
<param>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品数量。取值范围：大于零的整数，并需要等于所有Sku数量的和</desc>
<sample>50</sample>
<default/>
</param>
<param>
<name>price</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>商品价格。取值范围:0-100000000;精确到2位小数;单位:元。如:200.07，表示:200元7分。需要在正确的价格区间内。</desc>
<sample>200.07</sample>
<default/>
</param>
<param>
<name>title</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>宝贝标题. 不能超过60字节,受违禁词控制</desc>
<sample>Nokia N97全新行货</sample>
<default/>
</param>
<param>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品描述. 字数要大于5个字节，小于25000个字节 ，受违禁词控制</desc>
<sample>这是一个好商品</sample>
<default/>
</param>
<param>
<name>location.state</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>所在地省份。如浙江 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
<sample>浙江</sample>
<default/>
</param>
<param>
<name>location.city</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>所在地城市。如杭州 具体可以下载http://dl.open.taobao.com/sdk/商品城市列表.rar 取到</desc>
<sample>杭州</sample>
<default/>
</param>
<param>
<name>post_fee</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>平邮费用。取值范围:0-100000000;精确到2位小数;单位:元。如:5.07，表示:5元7分, 注:post_fee,express_fee,ems_fee需一起填写</desc>
<sample>5.07</sample>
<default/>
</param>
<param>
<name>express_fee</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>快递费用。取值范围:0-100000000;精确到2位小数;单位:元。如:15.07，表示:15元7分</desc>
<sample>15.07</sample>
<default/>
</param>
<param>
<name>ems_fee</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>ems费用。取值范围:0-100000000;精确到2位小数;单位:元。如:25.07，表示:25元7分</desc>
<sample>25.07</sample>
<default/>
</param>
<param>
<name>list_time</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>上架时间。如2008-05-26 09:12:00</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>increment</name>
<type>Price</type>
<level>Basic</level>
<required>可选</required>
<desc>加价幅度 如果为0，代表系统代理幅度</desc>
<sample>10.50</sample>
<default/>
</param>
<param>
<name>image</name>
<type>byte[]</type>
<level>Basic</level>
<required>可选</required>
<desc>商品图片。类型:JPG,GIF;最大长度:500k</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品新旧程度。可选值:new（全新）,unused（闲置）,second（二手）。</desc>
<sample>new</sample>
<default/>
</param>
<param>
<name>auction_point</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品的积分返点比例。如：5 表示返点比例0.5%. 注意：返点比例必须是&gt;0的整数，而且最大是90,即为9%.B商家在发布非虚拟商品时，返点必须是 5的倍数，即0.5%的倍数。其它是1的倍数，即0.1%的倍数。</desc>
<sample>5</sample>
<default/>
</param>
<param>
<name>property_alias</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>属性值别名。如pid:vid:别名;pid1:vid1:别名1， pid:属性id vid:值id。总长度不超过512字节</desc>
<sample>pid:vid:别名;pid1:vid1:别名1</sample>
<default/>
</param>
<param>
<name>input_pids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>用户自行输入的类目属性ID串，结构："pid1,pid2,pid3"，如："20000"（表示品牌） 注：通常一个类目下用户可输入的关键属性不超过1个。</desc>
<sample>pid1,pid2,pid3</sample>
<default/>
</param>
<param>
<name>sku_quantities</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>更新的Sku的数量串，结构如：num1,num2,num3 如:2,3,4</desc>
<sample>2,3,4</sample>
<default/>
</param>
<param>
<name>sku_prices</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>更新的Sku的价格串，结构如：10.00,5.00,… 精确到2位小数;单位:元。如:200.07，表示:200元7分</desc>
<sample>10.00,5.00</sample>
<default/>
</param>
<param>
<name>sku_properties</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>更新的Sku的属性串，调用taobao.itemprops.get获取类目属性，如果属性是销售属性，再用taobao.itempropvalues.get取得vid。格式:pid:vid;pid:vid。该字段内的销售属性也需要在props字段填写 . 规则：如果该SKU存在旧商品，则修改；否则新增Sku。如果更新时有对Sku进行操作，则Sku的properties一定要传入。</desc>
<sample>pid:vid;pid:vid</sample>
<default/>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<level>Basic Array</level>
<required>可选</required>
<desc>重新关联商品与店铺类目，结构:",cid1,cid2,...,"，如果店铺类目存在二级类目，必须传入子类目cids。</desc>
<sample>1105</sample>
<default/>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>宝贝所属的运费模板ID，模板可以通过taobao.postages.get获得</desc>
<sample>775752</sample>
<default/>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商家编码</desc>
<sample>12345</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品所属的产品ID(B商家发布商品需要用)</desc>
<sample>123456789</sample>
<default/>
</param>
<param>
<name>pic_path</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品主图需要关联的图片空间的相对url。这个url所对应的图片必须要属于当前用户。pic_path和image只需要传入一个,如果两个都传，默认选择pic_path</desc>
<sample>uploaded/i7/T1rfxpXcVhXXXH9QcZ_033150.jpg</sample>
<default/>
</param>
<param>
<name>auto_fill</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>代充商品类型。只有少数类目下的商品可以标记上此字段，具体哪些类目可以上传可以通过taobao.itemcat.features.get获得。在代充商品的类目下，不传表示不标记商品类型（交易搜索中就不能通过标记搜到相关的交易了）。可选类型：  
no_mark(不做类型标记)  
time_card(点卡软件代充)  
fee_card(话费软件代充)</desc>
<sample>time_card</sample>
<default/>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>Sku的外部id串，结构如：1234,1342,… sku_properties, sku_quantities, sku_prices, sku_outer_ids在输入数据时要一一对应，如果没有sku_outer_ids也要写上这个参数，入参是","(这个是两个sku的示列，逗号数应该是sku个数减1)；该参数最大长度是512个字节</desc>
<sample>1234,1342</sample>
<default/>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否在淘宝上显示</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否在外店显示</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否是3D</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_replace_sku</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否替换sku</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>input_str</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>用户自行输入的子属性名和属性值，结构:"父属性值;一级子属性名;一级子属性值;二级子属性名;自定义输入值,....",如：“耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5”，多个自定义属性用','分割，input_str需要与input_pids一一对应，注：通常一个类目下用户可输入的关键属性不超过1个。所有属性别名加起来不能超过3999字节。</desc>
<sample>耐克;耐克系列;科比系列;科比系列;2K5,Nike乔丹鞋;乔丹系列;乔丹鞋系列;乔丹鞋系列;json5</sample>
<default/>
</param>
<param>
<name>lang</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品文字的版本，繁体传入”zh_HK”，简体传入”zh_CN”</desc>
<sample>zh_CN</sample>
<default/>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>支持会员打折。可选值:true,false;</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>橱窗推荐。可选值:true,false;</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>approve_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品上传后的状态。可选值:onsale（出售中）,instock（库中）</desc>
<sample>onsale</sample>
<default/>
</param>
<param>
<name>auto_repost</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>自动重发。可选值:true,false;</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费承担方式。运费承担方式。可选值:seller（卖家承担）,buyer(买家承担);</desc>
<sample>buyer</sample>
<default/>
</param>
<param>
<name>valid_thru</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>有效期。可选值:7,14;单位:天;</desc>
<sample>7</sample>
<default/>
</param>
<param>
<name>has_invoice</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否有发票。可选值:true,false (商城卖家此字段必须为true)</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>has_warranty</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否有保修。可选值:true,false;</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>after_sale_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>售后服务说明模板id</desc>
<sample>47745</sample>
<default/>
</param>
<param>
<name>sell_promise</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否承诺退换货服务!虚拟商品无须设置此项!</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>cod_postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>货到付款运费模板ID</desc>
<sample>53899</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>商品结构里的num_iid，modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_update_response":{"item":{"detail_url":"http://item.taobao.com/item.htm?id=4947813209","num_iid":1489161932,"title":"Google test item","nick":"tbtest561","type":"fixed","cid":132443,"seller_cids":"2234445,3344466,446434","props":"135255:344454","input_pids":"2432,5353,656425","input_str":"耐克;耐克系列;科比系列;科比系列;2K5","desc":"这是一个好商品","pic_url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","num":8888,"valid_thru":7,"list_time":"2009-10-22 14:22:06","delist_time":"2000-01-01 00:00:00","stuff_status":"new","location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"},"price":"5.00","post_fee":"5.00","express_fee":"5.00","ems_fee":"5.00","has_discount":true,"freight_payer":"seller","has_invoice":true,"has_warranty":true,"has_showcase":true,"modified":"2000-01-01 00:00:00","increment":"0","approve_status":"onsale","postage_id":32,"product_id":85883030,"auction_point":15,"property_alias":"property","item_imgs":{"id":1645920,"url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","position":1,"created":"2000-01-01 00:00:00"},"prop_imgs":{"id":1646146,"url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","properties":"1627207:28326","position":1,"created":"2000-01-01 00:00:00"},"skus":{"sku_id":123,"iid":"asdf12323adfaa","num_iid":"12345","properties":"1243:1215;5626:5125","quantity":3,"price":"200.07","outer_id":"12345","created":"2009-11-04 15:24:43","modified":"2009-11-04 15:24:43","status":"normal"},"outer_id":"34143554352","is_virtual":true,"is_taobao":true,"is_ex":true,"is_timing":true,"videos":{"id":123456,"video_id":123456,"url":"http://js.tudouui.com/bin/taobaoisv/TaoBaoPlayer.swf……","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","iid":"94bccd061369cba108c2665445235154","num_iid":1497217011},"is_3D":true,"score":2,"volume":22,"one_station":true,"second_kill":"web_only","auto_fill":"time_card","props_name":"20000:3275069:品牌:盈讯;1753146:3485013:型号:F908;30606:112030:上市时间:2008年","violation":true,"created":"2000-01-01 00:00:00","is_prepay":true,"ww_status":true,"promoted_service":"2","wap_desc":"Wap宝贝详情","wap_detail_url":"http://auction1.wap.taobao.com/auction/item_detail-0db0-1234567.jhtml","after_sale_id":123,"sell_promise":true}}}]]></json>
<xml><![CDATA[<item_update_response><item><detail_url>http:</detail_url><num_iid>1489161932</num_iid><title>Google test item</title><nick>tbtest561</nick><type>fixed</type><cid>132443</cid><seller_cids>2234445,3344466,446434</seller_cids><props>135255:344454</props><input_pids>2432,5353,656425</input_pids><input_str>耐克;耐克系列;科比系列;科比系列;2K5</input_str><desc>这是一个好商品</desc><pic_url>http:</pic_url><num>8888</num><valid_thru>7</valid_thru><list_time>2009-10-22 14:22:06</list_time><delist_time>2000-01-01 00:00:00</delist_time><stuff_status>new</stuff_status><location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></location><price>5.00</price><post_fee>5.00</post_fee><express_fee>5.00</express_fee><ems_fee>5.00</ems_fee><has_discount>true</has_discount><freight_payer>seller</freight_payer><has_invoice>true</has_invoice><has_warranty>true</has_warranty><has_showcase>true</has_showcase><modified>2000-01-01 00:00:00</modified><increment>0</increment><approve_status>onsale</approve_status><postage_id>32</postage_id><product_id>85883030</product_id><auction_point>15</auction_point><property_alias>property</property_alias><item_imgs><id>1645920</id><url>http:</url><position>1</position><created>2000-01-01 00:00:00</created></item_imgs><prop_imgs><id>1646146</id><url>http:</url><properties>1627207:28326</properties><position>1</position><created>2000-01-01 00:00:00</created></prop_imgs><skus><sku_id>123</sku_id><iid>asdf12323adfaa</iid><num_iid>12345</num_iid><properties>1243:1215;5626:5125</properties><quantity>3</quantity><price>200.07</price><outer_id>12345</outer_id><created>2009-11-04 15:24:43</created><modified>2009-11-04 15:24:43</modified><status>normal</status></skus><outer_id>34143554352</outer_id><is_virtual>true</is_virtual><is_taobao>true</is_taobao><is_ex>true</is_ex><is_timing>true</is_timing><videos><id>123456</id><video_id>123456</video_id><url>http:</url><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><iid>94bccd061369cba108c2665445235154</iid><num_iid>1497217011</num_iid></videos><is_3D>true</is_3D><score>2</score><volume>22</volume><one_station>true</one_station><second_kill>web_only</second_kill><auto_fill>time_card</auto_fill><props_name>20000:3275069:品牌:盈讯;1753146:3485013:型号:F908;30606:112030:上市时间:2008年</props_name><violation>true</violation><created>2000-01-01 00:00:00</created><is_prepay>true</is_prepay><ww_status>true</ww_status><promoted_service>2</promoted_service><wap_desc>Wap宝贝详情</wap_desc><wap_detail_url>http:</wap_detail_url><after_sale_id>123</after_sale_id><sell_promise>true</sell_promise></item></item_update_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.mismatch-parameters:sku</code>
<desc>不匹配的sku参数</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ERROR_PUBLISH_DUPLICATE</code>
<desc>宝贝重复发布</desc>
<solution>发生错误不要重试，提示用户重新编辑商品的信息或者下架同样的另外一个商品</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_ITEM_PIC_IS_TOO_LARGES</code>
<desc>商品图片太大</desc>
<solution>图片大小不能超过500K</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_ITEM_3C_RULE_3C_CATEGORY</code>
<desc>发布的商品必须是淘宝电器城规定的类目</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution>必须传入num_iid</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_ITEM_LOCATION_NOT_MATCH</code>
<desc>“${leafCatName}”类目下，宝贝所在地和个人所在地必须一致</desc>
<solution>目前只有鲜花类目有这个限制，出错后，用户将宝贝所在地和个人所在地修改为一致，并且发布宝贝的时候，要先调用taobao.user.get来获取用户所在地</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_PRICE_ERROR</code>
<desc>不符合类目价格限制，此类目下最高价格为${CATEGORY_PRICE_LIMITED_HIGHT}，最低价格为${CATEGORY_PRICE_LIMITED_LOW}</desc>
<solution>发生错误时不能重试，提示用户重新编辑商品价格至合理区间再提交</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_DUPLICATE</code>
<desc>宝贝销售属性出错（重复），请重新编辑</desc>
<solution>一个销售属性的格式为pid:vid;pid:vid，请通过接口取出正确的销售属性填入</solution>
</error>
<error>
<code>isv.invalid-permission:update-item</code>
<desc>该商品不属于当前用户</desc>
<solution>请在用户和商品之间做好匹配</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_ITME_SKU_PRICE_UNMATCH</code>
<desc>宝贝价格必须介于销售属性组合价格区间之内</desc>
<solution>在前端做好校验，发生错误后需要重新编辑商品价格后再提交，不要直接重试</solution>
</error>
<error>
<code>isv.item-update-service-error:CATEGORY_LIMIT_SPU_BOOK_NORMAL</code>
<desc>请在ISBN输入框内输入13位或10位ISBN数字，不包括“-”符号，如确认正确，则可能是该ISBN还未授权发布</desc>
<solution>1.请您在发布宝贝时，选择好类目路径后， 在发布页面的宝贝属性中必须输入正规“ISBN编号”（13位或10位ISBN数字，不包括"-"符号），其余的宝贝属性系统将根据输入的”ISBN编号“自动匹配。如不填写”ISBN编号“将发布不成功。

2. 您输入的正确“ISBN编号”必须存在淘宝系统库里，如不存在，表明该ISBN编号还未授权，您可以及时反馈给淘宝客服0571-88157858添加该ISBN编码。</solution>
</error>
<error>
<code>isv.item-update-service-error:CATEGORY_IS_NOT_LEAF_OR_NOT_EXIST</code>
<desc>选择的类目不存在或者类目路径不完整</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:LACK_FAST_POST_FEE</code>
<desc>缺少快递价格</desc>
<solution>请根据错误提示添加快递价格</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_BEYOND_LOW_PRICE_LIMIT</code>
<desc>本类目下 价格不得低于${CATEGORY_PRICE_LIMITED_LOW}</desc>
<solution>请根据错误提示修改</solution>
</error>
<error>
<code>isv.item-update-service-error:RATE_SUM_TOO_LITTLE_TO_PUBLISH_MULTIAUCTION</code>
<desc>发布荷兰拍信用等级不够</desc>
<solution>拍卖有单件拍和荷兰拍两种类型，荷兰拍特征：拍卖数量大于1，发布荷兰拍商品卖家信用分数必须大于等于11分，也就是至少两颗心</solution>
</error>
<error>
<code>isv.item-update-service-error:ERROR_CHENGSE</code>
<desc>宝贝新旧程度和成色属性不匹配</desc>
<solution>根据错误提示选择正确的宝贝新旧程度和宝贝成色，如果新旧程度为全新，则宝贝成色里对应只能选择全新</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_PROP_NOT_SALE</code>
<desc>宝贝销售属性出错（非销售属性），请重新编辑</desc>
<solution>1.前端要定期更新淘宝的类目属性数据，每天早上5点以后，每天更新一次。2.发生次错误不能重试，需要提示用户重新编辑商品和sku的属性再上传（如果是新增sku报错误则重新编辑，如果是旧的sku报此错误需要删除旧的sku重新上传新的sku）</solution>
</error>
<error>
<code>isv.invalid-parameter:provcity</code>
<desc>参数：provcity无效，格式不对、非法值、越界等</desc>
<solution>增加前端校验，卖家发布的商品所在地要和卖家用户信息中的所在地在同一个地方，发生该错误不能重试，提示卖家重新编辑商品所在地信息。</solution>
</error>
<error>
<code>isv.item-update-service-error:QUANTITY_TOO_LARGE_FOR_SECOND_HAND</code>
<desc>该类目下二手宝贝只能发布1件</desc>
<solution>根据错误提示修改</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_MUST_HAVE_INVOICE</code>
<desc>必须提供发票</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:LACK_ORDINARY_POST_FEE</code>
<desc>缺少平邮价格</desc>
<solution/>
</error>
<error>
<code>isv.item-is-delete:invalid-numIid</code>
<desc>该商品已被删除</desc>
<solution>通过增量接口taobao.increment.items.get获取被删除的商品，在本地数据库更新，出现此错误不要重试</solution>
</error>
<error>
<code>isv.item-update-service-error:PRICE_LESS_THAN_BONUS_PRICE</code>
<desc>价格不得低于支持的优惠券金额</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:QUANTITY_ITEM_CAT_TOO_LARGE</code>
<desc>您出售中的“${mainCategoryName}”类目下宝贝总数已超过此类目宝贝数量限额（卖家评分:${onlineLimitBeginRate}-${onlineLimitEndRate}，允许宝贝个数:${onlineLimitMax}），请您及时调整您的宝贝数量，再上传宝贝</desc>
<solution>1.发生该错误时不能重试。2.将这个用户和这个类目做上关联标记，用户不能再到这个类目下发布在售商品或编辑、上架商品，需要等卖家下架其他商品后再手动解除其限制。</solution>
</error>
<error>
<code>isv.item-update-service-error:ERROR_SHOP_CATEGORY_HAS_SUB_CATEGORIES</code>
<desc>自定义店铺分类不存在或者店铺分类错误</desc>
<solution>更新自定义店铺类目的时候要先搜一下店铺该类目下是否有商品，如果有商品，要同时更新商品的seller_cids，但如果是用户在淘宝后台更改自定义类目，则出现错误后不要重试，然后用户到淘宝后台修改</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_USER_LOCATION_IS_BLANK</code>
<desc>“${leafCatName}”类目下，宝贝所在地要和个人所在地一致。请去“账号管理——个人交易信息”中，填写个人所在地，然后再发布宝贝</desc>
<solution>目前只有鲜花类目有这个限制，出错后，用户将宝贝所在地和个人所在地修改为一致，并且发布宝贝的时候，要先调用taobao.user.get来获取用户所在地</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_NOT_CONTAIN_SPU_TITLE</code>
<desc>根据你选择的宝贝属性，宝贝标题中必须要含有${spuName}。其中${spuName}为产品标题</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:GENERIC_FAILURE</code>
<desc>系统错误，请稍后再试</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_AUCTION_POINT_0_LIMITED</code>
<desc>返点比例数必须大于零</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_PROP_NOT_FOUND_IN_ITEM</code>
<desc>宝贝销售属性出错（销售属性和商品属性不一致），请重新编辑</desc>
<solution>1，在前端做好校验，所有的sku属性都需要加到商品的props中  2，发生该错误不要重试，提示用户重新编辑sku信息或商品props信息</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_ITEM_STUFF_MUST_SECONDHAND_IN_PROPERTY</code>
<desc>在此类属性必须发布二手商品</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_BEYOND_HIGHT_PRICE_LIMIT</code>
<desc>本类目下 价格不得高于${CATEGORY_PRICE_LIMITED_HIGHT}</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:location-empty</code>
<desc>参数：location-empty无效，格式不对、非法值、越界等</desc>
<solution>请填入正确的个人所在信息</solution>
</error>
<error>
<code>isv.invalid-parameter:desc</code>
<desc>参数：desc无效，格式不对、非法值、越界等</desc>
<solution>商品描述内容不能全为空格或者为空</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_SPU_DISCOUNT_PRICE_LIMIT</code>
<desc>您的商品由于价格过低，请调整确认，或者您可选择以二手类型发布该商品</desc>
<solution>当发生这个错误时，提醒卖家重新编辑商品价格即可</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_INVALID_SPU_FOR_VERTICAL</code>
<desc>产品不在产品库内，请联系我们的小二！</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:LACK_POSTAGE_ID</code>
<desc>运费模板出错</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SKU_PROP_DUPLICATE</code>
<desc>宝贝销售属性出错（属性重复），请重新编辑</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_TITLE_IS_TOO_LONG</code>
<desc>参数：IC_ITEM_TITLE_IS_TOO_LONG无效，格式不对、非法值、越界等</desc>
<solution>在前端做好校验，宝贝标题限定在30个汉字内（60个字符）</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_APPLICATION_PERMISSION_INVALID</code>
<desc>您所使用的客户端软件没有操作权限，请核实</desc>
<solution>没有发布卡密的权限，不要重试</solution>
</error>
<error>
<code>isv.invalid-parameter:cid</code>
<desc>参数：cid无效，格式不对、非法值、越界等</desc>
<solution>前端要定期更新淘宝的类目属性数据，每天早上5点以后。每天更新一次。发生该错误不能重试，需要重新编辑商品的类目属性信息。</solution>
</error>
<error>
<code>isv.mismatch-parameters:inputPids-and inputStr</code>
<desc>inputPids和inputStr不匹配</desc>
<solution>1.参数的填充要严格按照文档说明的格式来拼装，充分做好自测工作 2.让用户输入的地方尽量要容易输入（每个属性引导输入在一个空格里面，不要一个大空格然后用户自己拼装） 3.发生错误不能重试</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CATEGORY_NOT_GRANT_FOR_B</code>
<desc>未授权发布此类目的商品</desc>
<solution>商家只能在授权的类目下发布商品，通过接口taobao.itemcats.authorize.get更新商家被授权的类目</solution>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_DESC_IS_TOO_LONG</code>
<desc>参数：IC_ITEM_DESC_IS_TOO_LONG无效，格式不对、非法值、越界等</desc>
<solution>在应用前端加以校验，如果超过长度直接前端报错</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_BRAND_NOT_GRANT_FOR_B</code>
<desc>未授权发布此品牌的商品</desc>
<solution>当发生次错误时不能重试，需要重新编辑整个商品的品牌相关信息。</solution>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_QUANTITY_IS_OVER_RANGE</code>
<desc>参数：IC_ITEM_QUANTITY_IS_OVER_RANGE无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_PROPERTY_TOO_LONG</code>
<desc>您提供的属性最多不能超过35个</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:ITEM_EXTRA_LICENSE_ERROR</code>
<desc>食品卫生许可证号长度不能超过50位</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_SKU_MUST_IN_SPU_RANGE</code>
<desc>商品所选择销售属性超出产品许可范围，请联系小二确认</desc>
<solution>1,宝贝上的sku必须在spu的销售属性范围内
2,必须是小二确认的spu，是B卖家，类目上有指定feature</solution>
</error>
<error>
<code>isv.invalid-permission:update-autoConsignment-item</code>
<desc>操作 update-autoConsignment-item 权限不够、非法访问</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:sku-properties</code>
<desc>缺少必要的参数:sku-properties</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:IC_ITEM_DESC_COULD_NOT_BE_EMPTY</code>
<desc>参数：IC_ITEM_DESC_COULD_NOT_BE_EMPTY无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:REST_SALING_AUCTION</code>
<desc>有相同的闲置宝贝正在出售中</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_PRICE_LIMIT_FOR_DPC</code>
<desc>宝贝价格须在指定零售价范围内（${lowPriceForDpc}-${highPriceForDpc}元），如有异常，请您登陆分销平台同步商品信息</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permissin:upload-picPath-unconfirmed</code>
<desc>操作 upload-picPath-unconfirmed 权限不够、非法访问</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_PRICE_TO_LOW</code>
<desc>您的商品由于价格过低，请调整确认</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_SPU_NOT_EXIST</code>
<desc>您发布的商品无对应产品，请登录“淘宝网”先行发布产品</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_BSELLER_CANT_PUBLISH_AUCTION_ITEM</code>
<desc>商城商家不能发布拍卖宝贝</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:picPath</code>
<desc>参数：picPath无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:upload-image</code>
<desc>操作 upload-image 权限不够、非法访问</desc>
<solution/>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_ALREADY_EXISTS_SAME_SPU</code>
<desc>您已发布过同类宝贝，不允许重复发布</desc>
<solution>当前商品所属的产品下已经有一个一样的商品了，出现此错误不可重试，重新编辑商品为下架状态，或者下架另外一个商品后再编辑此商品。</solution>
</error>
<error>
<code>isv.category-service-error</code>
<desc>通过cid查不到商品类目信息</desc>
<solution>1.由于类目调整以前的cid已经不存在，或者用户输入不正确的cid，可以用属性工具检测一下当前所属类目的cid  2.在前端要定期更新淘宝的类目属性数据，每天早上5点以后，每天更新一次，编辑的类目属性要让卖家从你的类目中选择，不能直接输入 3.发生该错误不能重试，需要重新编辑商品</solution>
</error>
<error>
<code>isv.item-update-service-error:ITEM_PROPERTIES_ERROR</code>
<desc>${lostPropText}属性出错</desc>
<solution>1.发生错误需要让卖家重新编辑商品，不能直接重试 2.发布商品前，需要对卖家发布商品的属性做好前端校验，看必填属性有没有缺失。可选属性有没有填错。属性最好直接让卖家选择，不要让卖家手工输入。 3.如果卖家的商品关联了product，最好将product取出来的关键属性直接填充到商品的属性中，避面因用户错选导致错误 。4.每天定期更新本地的类目属性数据（每天凌晨5点后更新，每天更新一次）保证本地数据的正确性。</solution>
</error>
<error>
<code>isv.item-update-service-error:IC_CHECKSTEP_NO_PERMISSION</code>
<desc>您未通过认证或已被处罚，请核实</desc>
<solution>1.发生该错误时不能重试。 2.将这个用户做上标记，让用户去检查自己的权限问题，等用户处理好了让用户来手动取消禁止标记。</solution>
</error>
<error>
<code>isv.item-get-service-error:ITEM_NOT_FOUND</code>
<desc>指定要编辑的商品在数据库中找不到对应的记录</desc>
<solution>1.切换使用num_iid来编辑商品信息。2.在本地增加逻辑：发现报商品不存在的错误（ITEM_NOT_FOUND）就将本地的商品记录删除掉，防止卖家或者系统自动重试再次发生这个问题。</solution>
</error>
<error>
<code>isv.antisteal-service-error</code>
<desc>用户编辑的商品描述中，包含了别人图片空间的图片地址</desc>
<solution>1.在前端做好校验，调用api前对用户引入的商品描述图片进行防盗链检查，查看用户的user_id是否与该图片对应的user_id相等，如果不相等则存在盗链直接报错 2.发生错误不要重试，请重新编辑商品描述后再上传。</solution>
</error>
<error>
<code>isv.item-update-service-error:FORBIDDEN_QUANTITY_ZERO_ERROR</code>
<desc>在售商品数量不能为0</desc>
<solution>1.前段校验，如果商品数量或者所有的sku数量都是0则不允许直接提交。2.发生该错误不要重试，让用户重新编辑商品数量后再上传。</solution>
</error>
<error>
<code>isv.item-update-service-error:ITEM_INPUT_PROPERTIES_ERROR</code>
<desc>用户自定义属性校验出错</desc>
<solution>前端要定期更新淘宝的类目属性数据，每天早上5点以后。每天更新一次。发生错误不能重试，需要个重新编辑商品的自定义属性。</solution>
</error>
<error>
<code>isv.item-update-service-error:DESC_INCLUDE_FORBID_WORD</code>
<desc>商品描述包含淘宝违禁词</desc>
<solution>可以考虑参照淘宝违禁词规则在前端对用户的商品描述进行校验</solution>
</error>
<error>
<code>isv.item-update-service-error:TITLE_INCLUDE_FORBID_WORD_AGAIN</code>
<desc>商品标题包含违禁字</desc>
<solution>可以考虑根据淘宝违禁字列表在前端增加校验</solution>
</error>
<error>
<code>isv.invalid-parameter:aftersaleid</code>
<desc>卖家售后服务说明模板id,必须为自己的售后服务说明模板id。所以引用其他卖家的宝贝时要注意此项!</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:sellpromise</code>
<desc>虚拟类商品,不需设置退换货服务承诺!(虚拟商品定义,商品的一级类目id:40,50004958,99,50011665)</desc>
<solution/>
</error>
<error>
<code>isv.item-codseller-applycorpfast-invalid:ITEM_CODSELLER_APPLYCORPFAST_INVALID</code>
<desc>支持COD的宝贝如果普通运费模板没有设置快递费，则必须设置COD运费模板</desc>
<solution>支持COD的宝贝如果普通运费模板没有设置快递费，则必须设置COD运费模板</solution>
</error>
<error>
<code>isv.error-when-corppostage-equal-zero:ERROR_WHEN_CORPPOSTAGE_EQUAL_ZERO</code>
<desc>设置运费为0的普通运费模板时还需设置货到付款运费模板</desc>
<solution>设置运费为0的普通运费模板时还需设置货到付款运费模板</solution>
</error>
</errors>
<faqs>
<faq>
<question>更新商品能否按照商家外部ID更新呢?能根据外部ID查询商品吗?</question>
<answer>更新商品只能通过商品ID更新，可以根据商品ID更新商家外部ID</answer>
</faq>
<faq>
<question>非JAVA SDK如何创建一个Post请求（比如涉及图像上传的API）？</question>
<answer>参考非JAVA SDK 图像上传（http://wiki.open.taobao.com/index.php/%E9%9D%9EJAVA_SDK_%E5%9B%BE%E5%83%8F%E4%B8%8A%E4%BC%A0）</answer>
</faq>
</faqs>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.update.delisting</name>
<cname>商品下架</cname>
<authorize>必须用户授权</authorize>
<desc>* 单个商品下架 
    * 输入的num_iid必须属于当前会话用户</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，该参数必须</desc>
<sample>1000231</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回商品更新信息：返回的结果是:num_iid和modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_update_delisting_response":{"item":{"num_iid":1489161932,"modified":"2010-05-11 10:42:09"}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_update_delisting_response><item><num_iid>1489161932</num_iid><modified>2010-05-11 10:07:06</modified></item></item_update_delisting_response><!--vx215015.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.item-listing-service-error:ITEM_NOT_FOUND</code>
<desc>根据传参找不到相应数据</desc>
<solution>该商品已经被删除或进入历史库，直接将本地数据库该商品ID清除</solution>
</error>
<error>
<code>isv.invalid-parameter:iid</code>
<desc>传入的iid错误，不符合基本的格式要求</desc>
<solution>尽快切换到numIid。根据iid规则进行前端校验，如果格式错误就不再调用api</solution>
</error>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution>根据规则进行前端校验</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.item.update.listing</name>
<cname>一口价商品上架</cname>
<authorize>必须用户授权</authorize>
<desc>* 单个商品上架 
* 输入的num_iid必须属于当前会话用户</desc>
<request>
<param>
<name>num_iid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字ID，该参数必须</desc>
<sample>1000231</sample>
<default/>
</param>
<param>
<name>num</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>需要上架的商品的数量。取值范围:大于零的整数。如果商品有sku，则上架数量默认为所有sku数量总和，不可修改。否则商品数量根据设置数量调整为num</desc>
<sample>2</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item</name>
<type>Item</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>上架后返回的商品信息：返回的结果就是:num_iid和modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"item_update_listing_response":{"item":{"num_iid":1489161932,"modified":"2010-05-11 10:41:22"}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><item_update_listing_response><item><num_iid>1489161932</num_iid><modified>2010-05-11 10:06:19</modified></item></item_update_listing_response><!--vx215015.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.item-listing-service-error:QUANTITY_ITEM_CAT_TOO_LARGE_OF_ONLINE</code>
<desc>${mainCategoryName}类目下，非特种经营认证卖家发布宝贝数量不能超过${onlineLimitMax}件</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ERROR_PUBLISH_DUPLICATE</code>
<desc>宝贝重复发布</desc>
<solution>正常错误提醒，不允许重试。如果报错是商品量的两倍以上，系统会自动报警。</solution>
</error>
<error>
<code>isv.item-listing-service-error:IC_CHECKSTEP_BEYOND_LOW_PRICE_LIMIT</code>
<desc>本类目下 价格不得低于${CATEGORY_PRICE_LIMITED_LOW}</desc>
<solution>正常错误提醒，请用户按照提醒更改商品价格，不要重试</solution>
</error>
<error>
<code>isv.item-listing-service-error:IC_CHECKSTEP_ITME_SKU_PRICE_UNMATCH</code>
<desc>宝贝价格必须介于销售属性组合价格区间之内</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:QUANTITY_TOO_LARGE</code>
<desc>本类目发布的宝贝数量超出限制，不允许再发布</desc>
<solution>正常错误提醒，不要重试</solution>
</error>
<error>
<code>isv.item-listing-service-error:REST_TOTAL_QUANTITY_GREAT_10</code>
<desc>闲置宝贝累计发布数量不得大于10件</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:CATEGORY_IS_NOT_LEAF_OR_NOT_EXIST</code>
<desc>选择的类目不存在或者类目路径不完整</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ERROR_PUBLISH_PERMISSION_INVALID_FOR_FRANCHISE</code>
<desc>您没有特种类目的经营权限，请核实</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ERROR_AUTO_SAME</code>
<desc>卡密信息出错，请确认卡密格式等无误</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:numIid</code>
<desc>参数：numIid没有传入</desc>
<solution>必须传入num_iid</solution>
</error>
<error>
<code>isv.item-listing-service-error:IC_BRAND_NOT_GRANT_FOR_B</code>
<desc>未授权发布此品牌的商品</desc>
<solution>用taobao.itemcats.authorize.get接口确认被授权发布的品牌，再发布该品牌的商品</solution>
</error>
<error>
<code>isv.item-listing-service-error:IC_CHECKSTEP_NO_PERMISSION</code>
<desc>您未通过认证或已被处罚，请核实</desc>
<solution>一旦发生该错误，就要将该用户做上标记，让用户去检查自己的权限问题，等用户处理好了让用户来手动取消禁止标记，发生该错误不要重试</solution>
</error>
<error>
<code>isv.item-listing-service-error:REST_QUANTITY_GREAT_1</code>
<desc>闲置宝贝每次只能发布1件</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:IC_ITEM_MUST_IMAGE</code>
<desc>请添加 宝贝图片</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:QUANTITY_TOO_LARGE_FOR_SECOND_HAND</code>
<desc>该类目下二手宝贝只能发布1件</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ERROR_PUBLISH_PERMISSION_INVALID</code>
<desc>您没有发布此类宝贝的权限</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:IC_CHECKSTEP_SPU_STATUS_ERROR</code>
<desc>宝贝对应的产品已被屏蔽，请勿发布</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:IC_CHECKSTEP_SPU_NOT_EXIST</code>
<desc>您发布的商品无对应产品，请登录“淘宝网”先行发布产品</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ERROR_AUTO_CC_IS_NULL</code>
<desc>请输入卡密</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:IC_ITEM_3C_RULE_INVOICE</code>
<desc>淘宝电器城商品必须有发票/有保修/卖家包邮</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ERROR_AUCTION_NOT_CLOSED</code>
<desc>已经出价的且在线的拍卖宝贝不能上架</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:IC_INVALID_SPU_FOR_VERTICAL</code>
<desc>产品不在产品库内，请联系我们的小二！</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:AUTO_CCURL_COULD_NOT_EMPTY</code>
<desc>在线卡密充值地址不能为空</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:REST_SALING_AUCTION</code>
<desc>有相同的闲置宝贝正在出售中</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ERROR_ATTACH_PERMISSION_INVALID</code>
<desc>此类目不允许上传附件</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:IC_CATEGORY_NOT_GRANT_FOR_B</code>
<desc>未授权发布此类目的商品</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:IC_CHECKSTEP_PRICE_ERROR</code>
<desc>不符合类目价格限制，此类目下最高价格为${CATEGORY_PRICE_LIMITED_HIGHT}，最低价格为${CATEGORY_PRICE_LIMITED_LOW}</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:RATE_SUM_TOO_LITTLE_TO_PUBLISH_MULTIAUCTION</code>
<desc>发布荷兰拍信用等级不够</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:IC_CHECKSTEP_PROPERTY_TOO_LONG</code>
<desc>您提供的属性最多不能超过35个</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ERROR_PUBLISH_PERMISSION_INVALID_FOR_ECARD</code>
<desc>您没有发布“自动充值”类型宝贝的权限，请核实</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ITEM_IS_NOT_BELONG_TO_SELLER</code>
<desc>获取商品列表错误，请隔3小时后再试</desc>
<solution/>
</error>
<error>
<code>isv.item-listing-service-error:ITEM_PROPERTIES_ERROR</code>
<desc>属性出错</desc>
<solution>商品所属类目的属性更新过了，重新上架的时候校验失败，靖重新编辑商品再上架</solution>
</error>
<error>
<code>isv.item-listing-service-error:FORBIDDEN_QUANTITY_ZERO_ERROR</code>
<desc>上架的数量必须大于0</desc>
<solution>在前端做好判断，上架数量小于或等于0则不调用此接口</solution>
</error>
<error>
<code>isv.item-listing-service-error:QUANTITY_ITEM_CAT_TOO_LARGE</code>
<desc>您出售中的“${mainCategoryName}”类目下宝贝总数已超过此类目宝贝数量限额（卖家评分:${onlineLimitBeginRate}-${onlineLimitEndRate}，允许宝贝个数:${onlineLimitMax}），请您及时调整您的宝贝数量，再上传宝贝</desc>
<solution>出现此错误表示该类目下上架的宝贝数量已经超过限额，请不要重试</solution>
</error>
<error>
<code>isv.item-listing-service-error:ITEM_INPUT_PROPERTIES_ERROR</code>
<desc>输入属性错误</desc>
<solution>重新编辑商品输入属性再上架</solution>
</error>
</errors>
<faqs>
<faq>
<question>上架时报出售中的商品不能复置为出售中?</question>
<answer>"出售中的商品不能复置为出售中"是因为淘宝自动重发了商品,有一定延迟</answer>
</faq>
</faqs>
</api>
<api>
<cat>商品API</cat>
<name>taobao.items.custom.get</name>
<cname>根据外部ID取商品</cname>
<authorize>必须用户授权</authorize>
<desc>跟据卖家设定的商品外部id获取商品  
这个商品对应卖家从传入的session中获取，需要session绑定</desc>
<request>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>商品的外部商品ID</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：Item商品结构体中的所有字段；多个字段之间用“,”分隔。如果想返回整个子对象，那字段为item_img，如果是想返回子对象里面的字段，那字段为item_img.url。新增返回字段：one_station标记商品是否淘1站商品</desc>
<sample>num_iid,sku,item_img,prop_img</sample>
<default/>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>商品列表，具体返回字段以fields决定</desc>
</param>
</response>
<sample>
<json><![CDATA[{"items_custom_get_response":{"items":{"item":[{"outer_id":"1273547946472"}]}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><items_custom_get_response><items list="true"><item><outer_id>1273550580436</outer_id></item></items></items_custom_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>商品API</cat>
<name>taobao.items.get</name>
<cname>搜索商品信息</cname>
<authorize>不需用户授权</authorize>
<desc>根据传入的搜索条件，获取商品列表（类似于淘宝页面上的商品搜索功能，但是只有搜索到的商品列表，不包含商品的ItemCategory列表）  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取  
如果只输入fields其他条件都不输入，系统会因为搜索条件不足而报错。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的商品结构字段列表。可选值为Item中的以下字段：num_iid,title,nick,pic_url,cid,price,type,delist_time,post_fee;多个字段用“,”分隔。如：num_iid,title。新增字段score(卖家信用等级数),volume(30天成交量),location（卖家地址，可以分别获取location.city,location.state）,num_iid商品数字id。此接口返回的post_fee是快递费用</desc>
<sample>iid,title,nick</sample>
<default/>
</param>
<param>
<name>q</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>搜索字段。 用来搜索商品的title以及商品所对应的产品的title</desc>
<sample>N97</sample>
<default/>
</param>
<param>
<name>nicks</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>卖家昵称列表。多个之间以“,”分隔;最多支持5个卖家昵称。如：nick1,nick2,nick3</desc>
<sample>nick1,nick2,nick3</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>商品所属类目Id,ItemCat中的cid字段。可以通过taobao.itemcats.get取到</desc>
<sample>1512</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>商品属性。可以搜到拥有和输入的属性一样的商品列表。字段格式为：pid1:vid1;pid2:vid2.属性的pid调用taobao.itemprops.get取得，属性值的vid用taobao.itempropvalues.get取得vid。</desc>
<sample>20000:33564;21514:38489</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>可以根据产品Id搜索属于这个spu的商品。这个字段可以通过查询 taobao.products.get 取到</desc>
<sample>123456789</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1,即返回第一页数据。</desc>
<sample>10</sample>
<default>1</default>
</param>
<param>
<name>order_by</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>排序方式。格式为column:asc/desc,column可选值为: price（价格）, delist_time（下架时间）, seller_credit（卖家信用）；默认是按照上架时间倒序。如按价格升序排列表示为：price:asc。新增排序字段：volume（30天成交量）</desc>
<sample>price:asc</sample>
<default>list_time:desc</default>
</param>
<param>
<name>ww_status</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>旺旺在线状态（不设置结果包含所有状态，设置为true结果只有旺旺在线卖家的商品）。不能单独使用，要和其他条件一起用才行</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>post_free</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>免运费（不设置包含所有邮费状态，设置为true结果只有卖家包邮的商品）。不能单独使用，要和其他条件一起用才行</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>location.state</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>所在省。如：浙江。具体可以根据taobao.areas.get 取到</desc>
<sample>浙江</sample>
<default/>
</param>
<param>
<name>location.city</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>所在市。如：杭州。具体可以根据taobao.areas.get取到</desc>
<sample>杭州</sample>
<default/>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否是3D淘宝的商品,置为false或为空表示不对是否3D商品进行判断</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>start_score</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品所属卖家的最小信用等级数，1表示1心，2表示2心……，设置此条件表示搜索结果里的商品，所属的卖家信用必须大于等于设置的start_score。</desc>
<sample>15</sample>
<default/>
</param>
<param>
<name>end_score</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品所属卖家的最大信用等级数，1表示1心，2表示2心……，设置此条件表示搜索结果里的商品，所属的卖家信用必须小于等于设置的end_score</desc>
<sample>25</sample>
<default/>
</param>
<param>
<name>start_volume</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品30天内最小销售数，设置此条件表示搜索结果里的商品，30天内的销售量必须大于等于设置的start_volume。</desc>
<sample>30</sample>
<default/>
</param>
<param>
<name>end_volume</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品30天内最大销售数，设置此条件表示搜索结果里的商品，30天内的销售量必须小于等于设置的end_volume</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>one_station</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否淘1站代购商品，设置为true表示淘1站商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_cod</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否支持货到付款，设置为true表示支持货到付款，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_mall</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否商城的商品，设置为true表示该商品是属于淘宝商城的商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_prepay</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否如实描述(即:先行赔付)商品，设置为true表示该商品是如实描述的商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>genuine_security</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否正品保障商品(既是如实描述，又是7天无理由退换货的商品，设置了这个属性时：is_prepay和promoted_service不能再行设置)，设置为true表示该商品是正品保障的商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品的新旧状态。可选入参有：new、second、unused 。设置为new表示该商品是全新的商品，设置为second表示该商品是二手的商品，设置为unused表示该商品是闲置的商品</desc>
<sample>new</sample>
<default/>
</param>
<param>
<name>start_price</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品最低价格。单位:元。正整数，取值范围:0-100000000。</desc>
<sample>500</sample>
<default/>
</param>
<param>
<name>end_price</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品最高价格。单位:元。正整数，取值范围:0-100000000</desc>
<sample>500</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40</desc>
<sample>100</sample>
<default>40</default>
</param>
<param>
<name>promoted_service</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否提供保障服务的商品。可选入参有：2、4。设置为2表示该商品是“假一赔三”的商品，设置为4表示该商品是“7天无理由退换货”的商品</desc>
<sample>4</sample>
<default/>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索到的商品列表，具体字段根据权限和设定的fields决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>150</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"items_get_response":{"items":{"item":[{"iid":"a77d89756c91413df8a8f0aab0785be1","nick":"tbtest649"},{"iid":"cc0dcf2eb954598b6eee101959b9b32a","nick":"czhendong001"},{"iid":"85e5e5320efb4b5b8de15cc251deb292","nick":"tbtest81"}]},"total_results":3}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><items_get_response><items list="true"><item><iid>a77d89756c91413df8a8f0aab0785be1</iid><nick>tbtest649</nick></item><item><iid>cc0dcf2eb954598b6eee101959b9b32a</iid><nick>czhendong001</nick></item><item><iid>85e5e5320efb4b5b8de15cc251deb292</iid><nick>tbtest81</nick></item></items><total_results>3</total_results></items_get_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:search-none</code>
<desc>缺少必要的参数:search-none</desc>
<solution>q,nicks,cid,props,product_id这5个参数里面请至少传入一个</solution>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>user 不存在</desc>
<solution>传入的nick找不到对应的用户记录，尽量通过接口获取nick来查询，并且定期更新自己的nick数据</solution>
</error>
</errors>
<faqs>
<faq>
<question>给定q这个参数能否返回商品描述中含有q的商品吗?</question>
<answer>给定Q这个参数只能模糊查询到商品标题和商品关键属性</answer>
</faq>
</faqs>
</api>
<api>
<cat>商品API</cat>
<name>taobao.items.inventory.get</name>
<cname>得到当前会话用户库存中的商品列表</cname>
<authorize>必须用户授权</authorize>
<desc>获取当前用户作为卖家的仓库中的商品列表，并能根据传入的搜索条件对仓库中的商品列表进行过滤  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：Item商品结构体中的以下字段： 
approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru, 

list_time,price,has_discount,has_invoice,has_warranty,has_showcase, 

modified,delist_time,postage_id,seller_cids,outer_id；字段之间用“,”分隔。 

不支持其他字段，如果需要获取其他字段数据，调用taobao.item.get。</desc>
<sample>pic_url,num,props,valid_thru</sample>
<default/>
</param>
<param>
<name>q</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>搜索字段。搜索商品的title。</desc>
<sample>nike</sample>
<default/>
</param>
<param>
<name>banner</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>分类字段。可选值: 
 
regular_shelved(定时上架) 
never_on_shelf(从未上架) 
sold_out(全部卖完) 
off_shelf(我下架的) 
for_shelved(等待所有上架) 
violation_off_shelf(违规下架的) 
默认查询的是for_shelved(等待所有上架)这个状态的商品</desc>
<sample>for_shelved</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到</desc>
<sample>1232</sample>
<default/>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<level>Basic Array</level>
<required>可选</required>
<desc>卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(&lt;font color="red"&gt;注：目前最多支持32个ID号传入&lt;/font&gt;)</desc>
<sample>12,123</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数;默认值为1，即返回第一页数据。用此接口获取数据，当翻页获取的条数（page_no*page_size）超过10万条,为了保护后台搜索引擎，接口将报错。请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
<sample>2</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40。</desc>
<sample>40</sample>
<default>40</default>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否参与会员折扣。可选值：true，false。默认不过滤该条件</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>order_by</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间);默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc</desc>
<sample>list_time:desc</sample>
<default>list_time:desc</default>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>商品是否在淘宝显示</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>商品是否在外部网店显示</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否橱窗推荐商品</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>商品起始修改时间</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>商品结束修改时间</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>搜索商品的属性标记。搜索会返回匹配所有属性串的商品列表。格式为pid:vid;pid2:vid2;……pid和vid之间以“:”连接，各组属性之间以“;”连接</desc>
<sample>20000:123456;2222:321654;……</sample>
<default/>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索到底商品列表，具体字段根据设定的fields决定，不包括desc,stuff_status字段</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"items_inventory_get_response":{"items":{"item":[{"approve_status":"instock","cid":50009579,"delist_time":"2010-07-28 16:55:04","has_discount":false,"has_invoice":false,"has_showcase":false,"has_warranty":false,"iid":"ad4df439cf256b8cc2c629eb565bcc2b","list_time":"2010-07-21 16:55:04","modified":"2010-07-28 16:55:04","nick":"xiaoyu_5141","num":6,"num_iid":6090828872,"outer_id":"","postage_id":0,"price":"12.00","props":"1627207:28335;1627207:90554","seller_cids":"-1","title":"sdfasdf","type":"fixed","valid_thru":7}]},"total_results":1}}]]></json>
<xml><![CDATA[<items_inventory_get_response><items list="true"><item><approve_status>instock</approve_status><cid>50009579</cid><delist_time>2010-07-28 16:55:04</delist_time><has_discount>false</has_discount><has_invoice>false</has_invoice><has_showcase>false</has_showcase><has_warranty>false</has_warranty><iid>ad4df439cf256b8cc2c629eb565bcc2b</iid><list_time>2010-07-21 16:55:04</list_time><modified>2010-07-28 16:55:04</modified><nick>xiaoyu_5141</nick><num>6</num><num_iid>6090828872</num_iid><outer_id></outer_id><postage_id>0</postage_id><price>12.00</price><props>1627207:28335;1627207:90554</props><seller_cids>-1</seller_cids><title>sdfasdf</title><type>fixed</type><valid_thru>7</valid_thru></item></items><total_results>1</total_results></items_inventory_get_response>]]></xml>
</sample>
</api>
<api>
<cat>商品API</cat>
<name>taobao.items.list.get</name>
<cname>批量获取商品信息</cname>
<authorize>可选用户授权</authorize>
<desc>1.传入的num_iids所对应的商品必须属于同一个用户 
2.查看非公开属性时需要用户登录</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的商品对象字段。可选值：Item商品结构体中所有字段均可返回(注：目前不能返回props_name)；多个字段用“,”分隔。如果想返回整个子对象，那字段为itemimg，如果是想返回子对象里面的字段，那字段为itemimg.url。</desc>
<sample>num_iid,title,nick,pric</sample>
<default/>
</param>
<param>
<name>num_iids</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>商品数字id列表，多个num_iid用逗号隔开，一次不超过20个。</desc>
<sample>123456,223456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>获取的商品 具体字段根据权限和设定的fields决定</desc>
</param>
</response>
<sample>
<json><![CDATA[{"items_list_get_response":{"items":{"item":[{"approve_status":"onsale","auction_point":5,"auto_repost":false,"cid":1512,"delist_time":"2010-05-25 11:20:28","desc":"top七修测试desc","detail_url":"http://item.taobao.com/auction/item_detail.jhtml?item_id=252ce415e2c990d159d28373ec28a545&x_id=0db1","ems_fee":"0.00","express_fee":"0.00","freight_payer":"seller","has_discount":true,"has_invoice":true,"has_showcase":false,"has_warranty":true,"increment":"0.00","input_pids":"","input_str":"","is_3D":false,"is_ex":false,"is_taobao":true,"is_timing":false,"is_virtual":false,"list_time":"2010-05-11 11:20:28","location":{"city":"杭州","state":"浙江"},"modified":"2010-05-11 11:20:28","nick":"tbtest561","num":5,"num_iid":1497925687,"one_station":false,"outer_id":"outer_test","post_fee":"0.00","postage_id":0,"price":"1000.00","product_id":86851531,"property_alias":"1627207:3232482:测试颜色别名","props":"20000:3275069;1753146:3485013;30606:112030;10003:10019;1627207:3232482;1630696:3266781;10002:30590;20710:21958;20571:28956;20574:28972;20879:21456;20930:94330;32067:108277;10000:10000","skus":{"sku":[{"created":"2010-05-11 11:20:28","modified":"2010-05-11 11:20:28","outer_id":"wanpeitest_topapi_item_add","price":"1000.00","properties":"1627207:3232482;1630696:3266781","quantity":5,"sku_id":86171576}]},"stuff_status":"new","title":"top七修测试","type":"fixed","valid_thru":14}]}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><items_list_get_response><items list="true"><item><approve_status>onsale</approve_status><auction_point>5</auction_point><auto_repost>false</auto_repost><cid>1512</cid><delist_time>2010-05-25 12:04:27</delist_time><desc>top七修测试desc</desc><detail_url>http:]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:numIid</code>
<desc>参数：numIid无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:numIids-size</code>
<desc>参数：numIids-size无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:numIids</code>
<desc>参数：numIids没有传入</desc>
<solution>前端做好校验，必须传入num_iid</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.items.onsale.get</name>
<cname>获取当前会话用户出售中的商品列表</cname>
<authorize>必须用户授权</authorize>
<desc>获取当前用户作为卖家的出售中的商品列表，并能根据传入的搜索条件对出售中的商品列表进行过滤  
只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：Item商品结构体中的以下字段： 
approve_status,num_iid,title,nick,type,cid,pic_url,num,props,valid_thru,list_time,price,has_discount,has_invoice,has_warranty,has_showcase,modified,delist_time,postage_id,seller_cids,outer_id；字段之间用“,”分隔。
不支持其他字段，如果需要获取其他字段数据，调用taobao.item.get。</desc>
<sample>num_iid,title,price</sample>
<default/>
</param>
<param>
<name>q</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>搜索字段。搜索商品的title。</desc>
<sample>N97</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品类目ID。ItemCat中的cid字段。可以通过taobao.itemcats.get取到</desc>
<sample>1512</sample>
<default/>
</param>
<param>
<name>seller_cids</name>
<type>String</type>
<level>Basic Array</level>
<required>可选</required>
<desc>卖家店铺内自定义类目ID。多个之间用“,”分隔。可以根据taobao.sellercats.list.get获得.(&lt;font color="red"&gt;注：目前最多支持32个ID号传入&lt;/font&gt;)</desc>
<sample>11</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数;默认值为1，即返回第一页数据。用此接口获取数据，当翻页获取的条数（page_no*page_size）超过10万条,为了保护后台搜索引擎，接口将报错。请大家尽可能的细化自己的搜索条件，例如根据修改时间分段获取商品</desc>
<sample>10</sample>
<default>1</default>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否参与会员折扣。可选值：true，false。默认不过滤该条件</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>has_showcase</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否橱窗推荐。 可选值：true，false。默认不过滤该条件</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>order_by</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>排序方式。格式为column:asc/desc ，column可选值:list_time(上架时间),delist_time(下架时间),num(商品数量)，modified(最近修改时间);默认上架时间降序(即最新上架排在前面)。如按照上架时间降序排序方式为list_time:desc</desc>
<sample>list_time:desc</sample>
<default>list_time:desc</default>
</param>
<param>
<name>is_taobao</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>商品是否在淘宝显示</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_ex</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>商品是否在外部网店显示</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40。</desc>
<sample>100</sample>
<default>40</default>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>起始的修改时间</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>结束的修改时间</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>搜索商品的属性标记。搜索会返回匹配所有属性串的商品列表。格式为pid:vid;pid2:vid2;……pid和vid之间以“:”连接，各组属性之间以“;”连接</desc>
<sample>20000:123456;2222:321654;……</sample>
<default/>
</param>
</request>
<response>
<param>
<name>items</name>
<type>Item</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索到的商品列表，具体字段根据设定的fields决定，不包括desc字段</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>150</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"items_onsale_get_response":{"items":{"item":[{"approve_status":"onsale","cid":1512,"delist_time":"2010-05-25 11:20:20","has_discount":false,"has_invoice":false,"has_showcase":false,"has_warranty":false,"iid":"b88e2ec696712d73d1dd4e4960914ed2","is_ex":false,"is_taobao":true,"list_time":"2010-05-11 11:20:20","modified":"2010-05-11 11:20:20","nick":"tbtest1063","num":100,"num_iid":1489588508,"outer_id":"outer_test","postage_id":0,"price":"1000.00","props":"20000:3275069;1753146:3485013;30606:112030;10003:10019;1627207:3232482;1630696:3266781;10002:30590;20710:21958;20571:28956;20574:28972;20879:21456;20930:94330;32067:108277;10000:10000","title":"top七修测试","type":"fixed","valid_thru":14},{"approve_status":"onsale","cid":1512,"delist_time":"2010-05-25 11:20:18","has_discount":false,"has_invoice":false,"has_showcase":false,"has_warranty":false,"iid":"eddcc85c2ed2383301e5ba2124d9836c","is_ex":false,"is_taobao":true,"list_time":"2010-05-11 11:20:18","modified":"2010-05-11 11:20:18","nick":"tbtest1063","num":100,"num_iid":1489588504,"outer_id":"outer_test","postage_id":0,"price":"1000.00","props":"20000:3275069;1753146:3485013;30606:112030;10003:10019;1627207:3232482;1630696:3266781;10002:30590;20710:21958;20571:28956;20574:28972;20879:21456;20930:94330;32067:108277;10000:10000","title":"top七修测试","type":"fixed","valid_thru":14},{"approve_status":"onsale","cid":1512,"delist_time":"2010-05-25 11:20:16","has_discount":true,"has_invoice":true,"has_showcase":false,"has_warranty":true,"iid":"658bc08f5086be721e29f2cfcc4e456e","is_ex":false,"is_taobao":true,"list_time":"2010-05-11 11:20:16","modified":"2010-05-11 11:20:16","nick":"tbtest1063","num":5,"num_iid":1489588502,"outer_id":"outer_test","postage_id":0,"price":"1000.00","props":"1753146:3485013;20000:3275069;30606:112030;10000:10000;10003:10019;10002:30590;20571:28956;20574:28972;20930:94330;1627207:3232482;1630696:3266781;32067:108277;20710:21958;20879:21456","title":"top七修测试","type":"fixed","valid_thru":14},{"approve_status":"onsale","cid":1512,"delist_time":"2010-05-25 09:49:29","has_discount":true,"has_invoice":true,"has_showcase":false,"has_warranty":true,"iid":"e79328bbd05d636f76e7384b697eb7df","is_ex":false,"is_taobao":true,"list_time":"2010-05-11 09:49:29","modified":"2010-05-11 09:49:29","nick":"tbtest1063","num":5,"num_iid":1489588006,"outer_id":"outer_test","postage_id":0,"price":"1000.00","props":"1753146:3485013;20000:3275069;30606:112030;10000:10000;10003:10019;10002:30590;20571:28956;20574:28972;20930:94330;1627207:3232482;1630696:3266781;32067:108277;20710:21958;20879:21456","title":"top七修测试","type":"fixed","valid_thru":14},{"approve_status":"onsale","cid":1512,"delist_time":"2010-05-25 09:47:25","has_discount":true,"has_invoice":true,"has_showcase":false,"has_warranty":true,"iid":"91634dea6bb0f566d785eacf641d0cab","is_ex":false,"is_taobao":true,"list_time":"2010-05-11 09:47:25","modified":"2010-05-11 09:47:25","nick":"tbtest1063","num":5,"num_iid":1489588004,"outer_id":"outer_test","postage_id":0,"price":"1000.00","props":"1753146:3485013;20000:3275069;30606:112030;10004:10022;10000:10000;10003:10019;10002:30590;20571:28956;20574:28972;20879:21456;20930:94330;1627207:3232482;20710:21958","title":"top七修测试","type":"fixed","valid_thru":14},{"approve_status":"onsale","cid":2203,"delist_time":"2010-05-24 10:27:05","has_discount":false,"has_invoice":false,"has_showcase":false,"has_warranty":false,"iid":"9b881c52277286e4c8e2f5cfc175f234","is_ex":false,"is_taobao":true,"list_time":"2010-05-10 10:27:05","modified":"2010-05-10 10:26:27","nick":"tbtest1063","num":86,"num_iid":1489582734,"outer_id":"carver","pic_url":"http://img02.taobao.net/bao/uploaded/i2/T1aT8bXnFYXXb48tZZ_032052.jpg","postage_id":0,"price":"1000.00","props":"20000:44506;1627207:3232484;20055:27842","title":"测试商品，请不要拍","type":"fixed","valid_thru":14}]},"total_results":6}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><items_onsale_get_response><items list="true"><item><approve_status>onsale</approve_status><cid>1512</cid><delist_time>2010-05-25 12:04:33</delist_time><has_discount>true</has_discount><has_invoice>true</has_invoice><has_showcase>false</has_showcase><has_warranty>true</has_warranty><iid>7b6308161395b7ced01b0633dc8b1c87</iid><is_ex>false</is_ex><is_taobao>true</is_taobao><list_time>2010-05-11 12:04:33</list_time><modified>2010-05-11 12:04:33</modified><nick>tbtest1063</nick><num>5</num><num_iid>1489589070</num_iid><outer_id>outer_test</outer_id><pic_url>http:]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:gain-number-too-large</code>
<desc>翻页数量超过10万</desc>
<solution>翻页数超过10万后台搜索引擎查询会超时，所以api做了限制，如果翻页（pageNo*pageSize）超过10万，api这边会直接报错。对于实时搜索的3个接口：items.all.get,items.onsale.get,items.inventory.get，调用的时候要尽量细化查询条件，无条件批量查询的，翻页过多会超时和报错</solution>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.items.search</name>
<cname>搜索商品信息</cname>
<authorize>不需用户授权</authorize>
<desc>* 根据传入的搜索条件，获取商品列表和商品类目信息ItemCategory列表（类似于淘宝页面上的商品搜索功能，与 taobao.items.get的区别在于：这个方法得到的结果既有商品列表，又有类目信息列表） 
    * 商品列表里只能获得商品的部分信息，商品的详细信息请通过taobao.item.get获取 
    * 商品类目信息列表里只包含类目id和该类目下商品的数量</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的商品结构字段列表。可选值为Item中的以下字段：iid,title,nick,pic_url,cid,price,type,delist_time,post_fee；多个字段之间用“,” 分隔。如：iid,title。新增字段location（卖家地址，可以分别获取location.city,location.state）；score(卖家信用等级数),volume(30天成交量) 
新增字段：has_discount, num, is_prepay, promoted_service, ww_status, list_time</desc>
<sample>iid,title,nick,pic_url,cid,price,type,delist_time,post_fee</sample>
<default/>
</param>
<param>
<name>q</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>搜索字段。 用来搜索商品的title以及对应产品的title。</desc>
<sample>title</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>商品所属类目Id。ItemCat中的cid。 可以通过taobao.itemcats.get取到</desc>
<sample>34341</sample>
<default/>
</param>
<param>
<name>nicks</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>卖家昵称列表。多个之间用“,”分隔；最多支持5个卖家昵称。如:nick1,nick2,nick3。</desc>
<sample>nick1,nick2,nick3</sample>
<default/>
</param>
<param>
<name>props</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>商品属性。商品属性。可以搜到拥有和输入属性一样的商品列表。字段格式为：pid1:vid1;pid2:vid2.属性的pid调用 taobao.itemprops.get.v2取得，属性值的vid用taobao.itempropvalues.get取得vid。</desc>
<sample>pid1:vid1;pid2:vid2</sample>
<default/>
</param>
<param>
<name>product_id</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>可以根据产品Id搜索属于这个spu的商品。这个字段可以通过查询 taobao.products.get 取到</desc>
<sample>345342</sample>
<default/>
</param>
<param>
<name>order_by</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>排序方式。格式为column:asc/desc,column可选值为: price, delist_time, seller_credit；默认按上架时间倒序.如按价格升序排列表示为：price:asc。新增排序字段：volume（30天成交量）；新增排序字段：popularity(商品的人气值)</desc>
<sample>price:asc</sample>
<default>list_time:desc</default>
</param>
<param>
<name>ww_status</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>旺旺在线状态（不设置结果包含所有状态，设置为true结果只有旺旺在线卖家的商品）不能单独使用，要和其他条件一起用才行。</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>post_free</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>免运费（不设置包含所有邮费状态，设置为true结果只有卖家包邮的商品）不能单独使用，要和其他条件一起用才行。</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>location.state</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>所在省。如：浙江</desc>
<sample>浙江</sample>
<default/>
</param>
<param>
<name>location.city</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>所在市。如：杭州</desc>
<sample>杭州</sample>
<default/>
</param>
<param>
<name>is_3D</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否是3D淘宝的商品,置为false或为空表示不对是否3D商品进行判断</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>start_score</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品所属卖家的最小信用等级数，1表示1心，2表示2心……，设置此条件表示搜索结果里的商品，所属的卖家信用必须大于等于设置的 start_score。</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>end_score</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品所属卖家的最大信用等级数，1表示1心，2表示2心……，设置此条件表示搜索结果里的商品，所属的卖家信用必须小于等于设置的end_score</desc>
<sample>2</sample>
<default/>
</param>
<param>
<name>start_volume</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品30天内最小销售数，设置此条件表示搜索结果里的商品，30天内的销售量必须大于等于设置的start_volume。</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>end_volume</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品30天内最大销售数，设置此条件表示搜索结果里的商品，30天内的销售量必须小于等于设置的end_volume</desc>
<sample>200</sample>
<default/>
</param>
<param>
<name>one_station</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否淘1站代购商品，设置为true表示淘1站商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_cod</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否支持货到付款，设置为true表示支持货到付款，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_mall</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否商城的商品，设置为true表示该商品是属于淘宝商城的商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>is_prepay</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否如实描述(即:先行赔付)商品，设置为true表示该商品是如实描述的商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>genuine_security</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否正品保障商品(既是如实描述，又是7天无理由退换货的商品，设置了这个属性时：is_prepay和promoted_service不能再行设置)，设置为true表示该商品是正品保障的商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>promoted_service</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否提供保障服务的商品。可选入参有：2、4。设置为2表示该商品是“假一赔三”的商品，设置为4表示该商品是“7天无理由退换货”的商品</desc>
<sample>2</sample>
<default/>
</param>
<param>
<name>stuff_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品的新旧状态。可选入参有：new、second、unused 。设置为new表示该商品是全新的商品，设置为second表示该商品是二手的商品，设置为unused表示该商品是闲置的商品</desc>
<sample>new</sample>
<default/>
</param>
<param>
<name>start_price</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品最低价格。单位:元。正整数，取值范围:0-100000000。</desc>
<sample>10</sample>
<default/>
</param>
<param>
<name>end_price</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>商品最高价格。单位:元。正整数，取值范围:0-100000000</desc>
<sample>120</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数;默认值为1，即返回第一页数据。</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数;最大值：200；默认值：40</desc>
<sample>40</sample>
<default>40</default>
</param>
<param>
<name>auction_flag</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>商品是否为虚拟商品 
true：是虚拟商品 
false：不是虚拟商品</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>auto_post</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>商品是否为自动发货 
true：自动发货 
false：非自动发货</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>has_discount</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>商品是否对会员打折</desc>
<sample>true</sample>
<default/>
</param>
</request>
<response>
<param>
<name>item_search</name>
<type>ItemSearch</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>搜索到的商品，具体字段根据权限和设定的fields决定</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>100</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"items_search_response":{"item_search":{"item_search":[{"items":{"item":[{"iid":"569a64fce2e98bce187bcbbb4a4d262a","num_iid":1489161932,"title":"Google test item","nick":"tbtest561","type":"fixed","cid":132443,"seller_cids":"2234445,3344466,446434","props":"135255:344454","input_pids":"2432,5353,656425","input_str":"耐克;耐克系列;科比系列;科比系列;2K5","desc":"这是一个好商品","pic_url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","num":8888,"valid_thru":7,"list_time":"2009-10-22 14:22:06","delist_time":"2000-01-01 00:00:00","stuff_status":"new","location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"},"price":"5.00","post_fee":"5.00","express_fee":"5.00","ems_fee":"5.00","has_discount":true,"freight_payer":"seller","has_invoice":true,"has_warranty":true,"has_showcase":true,"modified":"2000-01-01 00:00:00","increment":"0","auto_repost":true,"approve_status":"onsale","postage_id":32,"product_id":85883030,"auction_point":15,"property_alias":"property","item_imgs":{"item_img":[{"id":1645920,"url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","position":1,"created":"2000-01-01 00:00:00"}]},"prop_imgs":{"prop_img":[{"id":1646146,"url":"http://img03.taobao.net/bao/uploaded/i3/T1HXdXXgPSt0JxZ2.8_070458.jpg","properties":"1627207:28326","position":1,"created":"2000-01-01 00:00:00"}]},"skus":{"sku":[{"sku_id":123,"iid":"asdf12323adfaa","num_iid":"12345","properties":"1243:1215;5626:5125","quantity":3,"price":"200.07","outer_id":"12345","created":"2009-11-04 15:24:43","modified":"2009-11-04 15:24:43","status":"normal"}]},"outer_id":"34143554352","is_virtual":true,"is_taobao":true,"is_ex":true,"is_timing":true,"videos":{"video":[{"id":123456,"video_id":123456,"url":"http://js.tudouui.com/bin/taobaoisv/TaoBaoPlayer.swf……","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","iid":"94bccd061369cba108c2665445235154","num_iid":1497217011}]},"is_3D":true,"score":2,"volume":22,"one_station":true,"second_kill":"web_only","auto_fill":"time_card"}]},"item_categories":{"item_categorie":[{"category_id":2132342,"count":100}]}}]},"total_results":1}}]]></json>
<xml><![CDATA[<items_search_response><item_search list="true"><item_search><items list="true"><item><iid>569a64fce2e98bce187bcbbb4a4d262a</iid><num_iid>1489161932</num_iid><title>Google test item</title><nick>tbtest561</nick><type>fixed</type><cid>132443</cid><seller_cids>2234445,3344466,446434</seller_cids><props>135255:344454</props><input_pids>2432,5353,656425</input_pids><input_str>耐克;耐克系列;科比系列;科比系列;2K5</input_str><desc>这是一个好商品</desc><pic_url>http:</pic_url><num>8888</num><valid_thru>7</valid_thru><list_time>2009-10-22 14:22:06</list_time><delist_time>2000-01-01 00:00:00</delist_time><stuff_status>new</stuff_status><location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></location><price>5.00</price><post_fee>5.00</post_fee><express_fee>5.00</express_fee><ems_fee>5.00</ems_fee><has_discount>true</has_discount><freight_payer>seller</freight_payer><has_invoice>true</has_invoice><has_warranty>true</has_warranty><has_showcase>true</has_showcase><modified>2000-01-01 00:00:00</modified><increment>0</increment><auto_repost>true</auto_repost><approve_status>onsale</approve_status><postage_id>32</postage_id><product_id>85883030</product_id><auction_point>15</auction_point><property_alias>property</property_alias><item_imgs list="true"><item_img><id>1645920</id><url>http:</url><position>1</position><created>2000-01-01 00:00:00</created></item_img></item_imgs><prop_imgs list="true"><prop_img><id>1646146</id><url>http:</url><properties>1627207:28326</properties><position>1</position><created>2000-01-01 00:00:00</created></prop_img></prop_imgs><skus list="true"><sku><sku_id>123</sku_id><iid>asdf12323adfaa</iid><num_iid>12345</num_iid><properties>1243:1215;5626:5125</properties><quantity>3</quantity><price>200.07</price><outer_id>12345</outer_id><created>2009-11-04 15:24:43</created><modified>2009-11-04 15:24:43</modified><status>normal</status></sku></skus><outer_id>34143554352</outer_id><is_virtual>true</is_virtual><is_taobao>true</is_taobao><is_ex>true</is_ex><is_timing>true</is_timing><videos list="true"><video><id>123456</id><video_id>123456</video_id><url>http:</url><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><iid>94bccd061369cba108c2665445235154</iid><num_iid>1497217011</num_iid></video></videos><is_3D>true</is_3D><score>2</score><volume>22</volume><one_station>true</one_station><second_kill>web_only</second_kill><auto_fill>time_card</auto_fill></item></items><item_categories list="true"><item_categorie><category_id>2132342</category_id><count>100</count></item_categorie></item_categories></item_search></item_search><total_results>1</total_results></items_search_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>user 不存在</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:nicks</code>
<desc>参数：nicks无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:search-none</code>
<desc>缺少必要的参数:search-none</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.postage.add</name>
<cname>添加邮费模板</cname>
<authorize>必须用户授权</authorize>
<desc>* 添加邮费模板 
    * 新增的邮费模板属于当前会话用户 
    * postage_mode_types、postage_mode_dests、postage_mode_prices、 postage_mode_increases四个字段组合起来表示邮费的子模板列表。每个邮费子模板都包含了type（邮费类型，有post、 express、ems可以选择）、dest（邮费模板应用地区，每个模板可以使用于多个地区，每个地区填入他的代码，地区与地区之间用半角逗号分隔）、 price（邮费基价）、increment（邮费增价）四个部分。如果有多个子模板，则将他们的4个部分分别组合，之间用半角分号隔开（注意每个模板的每个部分的位置要一样。即，子模板1号的type、dest、price、increment都要排在这四个参数的第一位；子模板2号要排在第二位……以此类推）</desc>
<request>
<param>
<name>name</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>邮费模板名称,不能超过50个字节</desc>
<sample>北街的邮费模板</sample>
<default/>
</param>
<param>
<name>post_price</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认平邮费用. 注意:至少选择一组默认的邮费组,例如:post_price,post_increase . 精确到1位小数;单位:元。如:200.5</desc>
<sample>1.5</sample>
<default/>
</param>
<param>
<name>post_increase</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认平邮加价费用. 精确到1位小数;单位:元。如:1.5</desc>
<sample>1.25</sample>
<default/>
</param>
<param>
<name>express_price</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认快递费用. 精确到1位小数;单位:元。如:200.5</desc>
<sample>0.15</sample>
<default/>
</param>
<param>
<name>express_increase</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认快递加价费用.精确到1位小数;单位:元。如:1.5</desc>
<sample>0.2</sample>
<default/>
</param>
<param>
<name>ems_price</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认EMS费用. 精确到1位小数;单位:元。如:200.5</desc>
<sample>200.5</sample>
<default/>
</param>
<param>
<name>ems_increase</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认EMS加价费用.精确到1位小数;单位:元。如:1.5</desc>
<sample>0.25</sample>
<default/>
</param>
<param>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>邮费模板备注,不能超过200个字节</desc>
<sample>北街测试邮费模板</sample>
<default/>
</param>
<param>
<name>postage_mode_types</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费方式:平邮 (post),快递公司(express),EMS (ems) 结构:value1;value2;value3 如: post;express;ems 注意:在添加多个PostageMode时,字符串中使用 ";" 分号区分.postage_mode.type,postage_mode.dest,postage_mode.price,postage_mode.increase, 数量必须一致.</desc>
<sample>post;express;ems</sample>
<default/>
</param>
<param>
<name>postage_mode_dests</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>邮费子项涉及的地区.结构: value1;value2;value3 如:110000;310000;320000,330000 就代表邮费子项涉及(北京;上海;江苏,浙江)四个地区. 可以用taobao.areas.get接口获取.或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm</desc>
<sample>110000;310000;320000,330000</sample>
<default/>
</param>
<param>
<name>postage_mode_prices</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费方式单价. 结构: value1;value2;value3 如: 11.2;14;6 .精确到1位小数;单位:元。如:200.5</desc>
<sample>11.2;14;6</sample>
<default/>
</param>
<param>
<name>postage_mode_increases</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费方式加件费用.结构: value1;value2;value3 如: 1.5;2;4 .精确到1位小数;单位:元。如:1.5</desc>
<sample>1.5;2;4</sample>
<default/>
</param>
</request>
<response>
<param>
<name>postage</name>
<type>Postage</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>新增的商品信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"postage_add_response":{"postage":{"created":"2010-05-11 11:18:19","postage_id":458875}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><postage_add_response><postage><created>2010-05-11 12:02:11</created><postage_id>458977</postage_id></postage></postage_add_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>商品API</cat>
<name>taobao.postage.delete</name>
<cname>删除单个运费模板</cname>
<authorize>必须用户授权</authorize>
<desc>删除单个邮费模板  
postage_id对应的邮费模板要属于当前会话用户</desc>
<request>
<param>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>邮费模板id</desc>
<sample>37181</sample>
<default/>
</param>
</request>
<response>
<param>
<name>postage</name>
<type>Postage</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>邮费模板</desc>
</param>
</response>
<sample>
<json><![CDATA[{"postage_delete_response":{"postage":{"created":"2010-05-11 11:22:27","postage_id":458912}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><postage_delete_response><postage><created>2010-05-11 12:06:23</created><postage_id>459014</postage_id></postage></postage_delete_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>商品API</cat>
<name>taobao.postage.get</name>
<cname>获取单个运费模板</cname>
<authorize>不需用户授权</authorize>
<desc>* 获取单个邮费模板 
* postage_id对应的邮费模板要属于nick所对应的用户 
 
Q：是否必须是模板所有者才能够使用这个接口? 
A： 不是的,只要给出了邮费模板id和创建者的昵称就可以使用</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:Postage结构体中的所有字段;字段之间用","隔开</desc>
<sample>name,post_increase,post_price</sample>
<default/>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>邮费模板id</desc>
<sample>123975</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家昵称</desc>
<sample>腊月83</sample>
<default/>
</param>
</request>
<response>
<param>
<name>postage</name>
<type>Postage</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>运费模板</desc>
</param>
</response>
<sample>
<json><![CDATA[{"postage_get_response":{"postage":{"postage_modes":{"postage_mode":[{"dests":"110000"},{"dests":"310000"},{"dests":"320000,330000"}]}}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><postage_get_response><postage><postage_modes list="true"><postage_mode><dests>110000</dests></postage_mode><postage_mode><dests>310000</dests></postage_mode><postage_mode><dests>320000,330000</dests></postage_mode></postage_modes></postage></postage_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>商品API</cat>
<name>taobao.postage.update</name>
<cname>修改邮费模板</cname>
<authorize>必须用户授权</authorize>
<desc>* 修改邮费模板 
    * 修改的邮费模板属于当前会话用户 
    * 修改的邮费子模板要传入子模板id，否则作为添加子模板处理。postage_mode_types、 postage_mode_dests、postage_mode_prices、postage_mode_increases四个字段的处理逻辑见 taobao.postage.add中的描述</desc>
<request>
<param>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>邮费模板id.注意:给定的postage_id必须是存在的postage的id</desc>
<sample>37181</sample>
<default/>
</param>
<param>
<name>post_price</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认平邮费用.精确到1位小数;单位:元。如:10.5</desc>
<sample>1.05</sample>
<default/>
</param>
<param>
<name>post_increase</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认平邮加价费用.精确到1位小数;单位:元。如:10.5</desc>
<sample>0.15</sample>
<default/>
</param>
<param>
<name>express_price</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认快递费用.精确到1位小数;单位:元。如:10.5</desc>
<sample>2.06</sample>
<default/>
</param>
<param>
<name>express_increase</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认快递加价费用.精确到1位小数;单位:元。如:10.5</desc>
<sample>1.1</sample>
<default/>
</param>
<param>
<name>ems_price</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认EMS费用.精确到1位小数;单位:元。如:10.5</desc>
<sample>10.5</sample>
<default/>
</param>
<param>
<name>ems_increase</name>
<type>Price</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>默认EMS加价费用.精确到1位小数;单位:元。如:10.5</desc>
<sample>0.2</sample>
<default/>
</param>
<param>
<name>name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>邮费模板名称</desc>
<sample>市区邮费模板</sample>
<default/>
</param>
<param>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>邮费模板备注</desc>
<sample>模板备注</sample>
<default/>
</param>
<param>
<name>postage_mode_ids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费子模板id:修改多个子模板时,用 “;”区分.注意1:给定的postage_mode_id必须是当前postage所包含的postage_mode的id.注意2:在修改多个PostageMode时,字符串中使用 " ; " 分号区分,必须注意每个字段的数量一定要相等.注意3:在添加运费模板子模板的时候必须是已经有了默认的运费项后才可以添加对应的邮费模板子模板。如,添加了默认的EMS运费项，才可以添加运EMS费模板子项.</desc>
<sample>213;4567;3456</sample>
<default/>
</param>
<param>
<name>postage_mode_types</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费方式:平邮(post),快递公司(express),EMS(ems)数量串:例(post;express;ems)分号区分</desc>
<sample>post;express;ems</sample>
<default/>
</param>
<param>
<name>postage_mode_dests</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>邮费子项涉及的地区，多个地区用逗号连接数量串。可以用taobao.areas.get接口获取。或者参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm  例 (110000;310000;320000,330000)就代表邮费子项涉及(北京;上海;江苏,浙江)四个地区。填写时要注意对照地区代码值，如果填入错误地区代码，将会出现错误信息</desc>
<sample>110000;310000;320000</sample>
<default/>
</param>
<param>
<name>postage_mode_prices</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费方式单价数量串：例 (11.2;14;1;6).精确到1位小数;单位:元。如:10.5</desc>
<sample>11.2;14;11.05</sample>
<default/>
</param>
<param>
<name>postage_mode_increases</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费方式加件费用数量串：例 (1.5;2.4;2.0).精确到1位小数;单位:元。如:10.5</desc>
<sample>1.5;2.4;2.0</sample>
<default/>
</param>
<param>
<name>postage_mode_optTypes</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>子模板操作类型：新增(add),修改(update),删除(delete). 例(add;add;add).注意：对子模板进行操作的时候此参数必填.如果不填那默认为update.新增操作不能传子模板ID</desc>
<sample>add;add;add</sample>
<default/>
</param>
<param>
<name>remove_post</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>删除平邮类型的邮费模板，包括所有这个类型的子邮费模板</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>remove_express</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>删除快递类型的邮费模板，包括所有这个类型的子邮费模板</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>remove_ems</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>删除ems类型的邮费模板，包括所有这个类型的子邮费模板</desc>
<sample>true</sample>
<default/>
</param>
</request>
<response>
<param>
<name>postage</name>
<type>Postage</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>修改后的邮费模板信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"postage_update_response":{"postage":{"modified":"2010-05-11 11:22:54","postage_id":458916}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><postage_update_response><postage><modified>2010-05-11 12:06:51</modified><postage_id>459018</postage_id></postage></postage_update_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:postageMode-type</code>
<desc>参数：postageMode-type无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.postage-not-exist:invalid-postageId</code>
<desc>postage 不存在</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>商品API</cat>
<name>taobao.postages.get</name>
<cname>获取卖家的运费模板</cname>
<authorize>必须用户授权</authorize>
<desc>获得当前会话用户的所有邮费模板</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:Postage结构体中的所有字段;字段之间用","分隔.</desc>
<sample>name,memo,created</sample>
<default/>
</param>
</request>
<response>
<param>
<name>postages</name>
<type>Postage</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>运费模板列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>50</sample>
<desc>获得到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"postages_get_response":{"postages":{"postage":[{"postage_id":37778},{"postage_id":37057},{"postage_id":36660}]}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><postages_get_response><postages list="true"><postage><postage_id>37778</postage_id></postage><postage><postage_id>37057</postage_id></postage><postage><postage_id>36660</postage_id></postage></postages></postages_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>商品API</cat>
<name>taobao.skus.custom.get</name>
<cname>根据外部ID取商品SKU</cname>
<authorize>必须用户授权</authorize>
<desc>跟据卖家设定的Sku的外部id获取商品，如果一个outer_id对应多个Sku会返回所有符合条件的sku  
这个Sku所属卖家从传入的session中获取，需要session绑定(注：iid标签里是num_iid的值，可以用作num_iid使用)</desc>
<request>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>Sku的外部商家ID</desc>
<sample>bb</sample>
<default/>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：Sku结构体中的所有字段；字段之间用“,”隔开</desc>
<sample>sku_id,properties</sample>
<default/>
</param>
</request>
<response>
<param>
<name>skus</name>
<type>Sku</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>Sku对象，具体字段以fields决定</desc>
</param>
</response>
<sample>
<json><![CDATA[{"skus_custom_get_response":{"skus":{"sku":[{"created":"2009-12-08 18:05:25","iid":"1491702279","modified":"2009-12-08 18:05:25","outer_id":"magic","price":"1000.00","properties":"1627207:3232481;1630696:3266781","quantity":3,"sku_id":83277450,"status":"normal"},{"created":"2009-12-08 18:05:25","iid":"1491702279","modified":"2009-12-08 18:05:25","outer_id":"magic","price":"1200.00","properties":"1627207:3232482;1630696:3266781","quantity":5,"sku_id":83277454,"status":"normal"},{"created":"2009-12-08 18:05:25","iid":"1491702277","modified":"2009-12-08 18:05:25","outer_id":"magic","price":"1000.00","properties":"1627207:3232481;1630696:3266781","quantity":3,"sku_id":83277452,"status":"normal"},{"created":"2010-05-11 10:54:50","iid":"1497922315","modified":"2010-05-11 10:54:50","outer_id":"magic","price":"1000.00","properties":"1627207:28320;1630696:3266781","quantity":3,"sku_id":86170394,"status":"normal"},{"created":"2010-05-11 10:54:50","iid":"1497922315","modified":"2010-05-11 10:54:50","outer_id":"magic","price":"1200.00","properties":"1627207:3232482;1630696:3266781","quantity":5,"sku_id":86170396,"status":"normal"}]}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><skus_custom_get_response><skus list="true"><sku><created>2009-12-08 18:05:25</created><iid>1491702279</iid><modified>2009-12-08 18:05:25</modified><outer_id>magic</outer_id><price>1000.00</price><properties>1627207:3232481;1630696:3266781</properties><quantity>3</quantity><sku_id>83277450</sku_id><status>normal</status></sku><sku><created>2009-12-08 18:05:25</created><iid>1491702279</iid><modified>2009-12-08 18:05:25</modified><outer_id>magic</outer_id><price>1200.00</price><properties>1627207:3232482;1630696:3266781</properties><quantity>5</quantity><sku_id>83277454</sku_id><status>normal</status></sku><sku><created>2009-12-08 18:05:25</created><iid>1491702277</iid><modified>2009-12-08 18:05:25</modified><outer_id>magic</outer_id><price>1000.00</price><properties>1627207:3232481;1630696:3266781</properties><quantity>3</quantity><sku_id>83277452</sku_id><status>normal</status></sku><sku><created>2010-05-11 11:57:14</created><iid>1497927693</iid><modified>2010-05-11 11:57:14</modified><outer_id>magic</outer_id><price>1200.00</price><properties>1627207:3232482;1630696:3266781</properties><quantity>5</quantity><sku_id>86172350</sku_id><status>normal</status></sku><sku><created>2010-05-11 11:57:14</created><iid>1497927693</iid><modified>2010-05-11 11:57:14</modified><outer_id>magic</outer_id><price>1000.00</price><properties>1627207:28320;1630696:3266781</properties><quantity>3</quantity><sku_id>86172348</sku_id><status>normal</status></sku></skus></skus_custom_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.refund.get</name>
<cname>单笔退款详情</cname>
<authorize>必须用户授权</authorize>
<desc>获取单笔退款详情</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有：refund_id, alipay_no, tid, oid, buyer_nick, seller_nick, total_fee, status, created, refund_fee, good_status, has_good_return, payment, reason, desc, num_iid, title, price, num, good_return_time, company_name, sid, address, shipping_type, refund_remind_timeout</desc>
<sample>title,address,good_return_time,created</sample>
<default/>
</param>
<param>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>退款单号</desc>
<sample>83477</sample>
<default/>
</param>
</request>
<response>
<param>
<name>refund</name>
<type>Refund</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>搜索到的交易信息列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"refund_get_response":{"refund":{"refund_id":117468}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><refund_get_response><refund><refund_id>117468</refund_id></refund></refund_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.refund.refuse</name>
<cname>卖家拒绝退款</cname>
<authorize>必须用户授权</authorize>
<desc>卖家拒绝单笔退款交易，要求如下： 
1. 传入的refund_id和相应的tid, oid必须匹配 
2. 如果一笔订单只有一笔子订单，则tid必须与oid相同 
3. 只有卖家才能执行拒绝退款操作 
4. 以下三种情况不能退款：卖家未发货；7天无理由退换货；网游订单</desc>
<request>
<param>
<name>refund_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>退款单号</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>refuse_message</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>拒绝退款时的说明信息，长度2-200</desc>
<sample>拒绝退款说明</sample>
<default/>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>退款记录对应的交易订单号</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>退款记录对应的交易子订单号</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>refuse_proof</name>
<type>byte[]</type>
<level>Basic</level>
<required>可选</required>
<desc>拒绝退款时的退款凭证，一般是卖家拒绝退款时使用的发货凭证，最大长度130000字节，支持的图片格式：GIF, JPG, PNG</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
</request>
<response>
<param>
<name>refund</name>
<type>Refund</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>拒绝退款成功后，会返回Refund数据结构中的refund_id, status, modified字段</desc>
</param>
</response>
<sample>
<json><![CDATA[{"refund_refuse_response":{"refund":{"refund_id":83477,"modified":"2000-01-01 00:00:00","status":"SUCCESS",}}}]]></json>
<xml><![CDATA[<refund_refuse_response><refund><refund_id>83477</refund_id><modified>2000-01-01 00:00:00</modified><status>SUCCESS</status></refund></refund_refuse_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.parameters-mismatch</code>
<desc>refund_id与传入的tid或oid不一致</desc>
<solution>请确认传入的tid与oid是refund_id对应的退款记录所对应的交易的tid与oid</solution>
</error>
<error>
<code>isv.invalid-parameter:refuse_message</code>
<desc>入参中的refuse_message不合法， 
refuse_message的长度范围为：2-200非空字符</desc>
<solution>核对入参的refuse_message是否满足要求</solution>
</error>
<error>
<code>isv.invalid-parameter:refuse_proof</code>
<desc>入参中的refuse_proof不合法， 
refuse_proof的长度不能大于130000字节</desc>
<solution>核对入参中的refuse_proof是否满足要求</solution>
</error>
<error>
<code>isv.invalid-permission</code>
<desc>不合适的权限 
必须是此退款的卖家才能执行拒绝退款操作</desc>
<solution>请确认当前用户是否为该笔退款记录的卖家</solution>
</error>
<error>
<code>isv.invalid-permission:refund_status is invalid or refund is out of date</code>
<desc>拒绝退款操作已过有效操作期，退款记录的状态当前不能执行拒绝退款操作</desc>
<solution>确认退款记录是否处于可执行拒绝退款的状态</solution>
</error>
<error>
<code>isv.invalid-permission:order.status cann't be 'WAIT_SELLER_SEND_GOODS'</code>
<desc>卖家未发货，不能拒绝退款</desc>
<solution>未发货状态，卖家不能拒绝退款</solution>
</error>
<error>
<code>isv.invalid-permissiion:refund cann't be refused</code>
<desc>买家需要退货或7天无理由退换货的订单不能拒绝退款</desc>
<solution>买家需要退货或7天无理由退换货的订单不能拒绝退款</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>非法参数</desc>
<solution>网游订单不能拒绝退款</solution>
</error>
</errors>
</api>
<api>
<cat>交易API</cat>
<name>taobao.refunds.apply.get</name>
<cname>查询买家申请的退款列表</cname>
<authorize>必须用户授权</authorize>
<desc>查询买家申请的退款列表，且查询外店的退款列表时需要指定交易类型</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee</desc>
<sample>refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
<sample>WAIT_SELLER_CONFIRM_GOODS</sample>
<default/>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家昵称</desc>
<sample>hz0799</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。 
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
auto_delivery(自动发货)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
<sample>fixed</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。传入值为 1 代表第一页，传入值为 2 代表第二页，依此类推。默认返回的数据是从第一页开始</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
<sample>40</sample>
<default/>
</param>
</request>
<response>
<param>
<name>refunds</name>
<type>Refund</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索到的退款信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>false</required>
<sample>100</sample>
<desc>搜索到的交易信息总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"refunds_apply_get_response":{"refunds":{"refund":[{"refund_id":2222223},{"refund_id":2222222}]},"total_results":2}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><refunds_apply_get_response><refunds list="true"><refund><refund_id>2222223</refund_id></refund><refund><refund_id>2222222</refund_id></refund></refunds><total_results>2</total_results></refunds_apply_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.refunds.receive.get</name>
<cname>查询卖家收到的退款列表</cname>
<authorize>必须用户授权</authorize>
<desc>查询卖家收到的退款列表，查询外店的退款列表时需要指定交易类型</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有：refund_id, tid, title, buyer_nick, seller_nick, total_fee, status, created, refund_fee, oid, good_status, company_name, sid, payment, reason, desc, has_good_return, modified, order_status</desc>
<sample>refund_id, tid, title,buyer_nick, seller_nick, total_fee, status, created, refund_fee</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>退款状态，默认查询所有退款状态的数据，除了默认值外每次只能查询一种状态。 
WAIT_SELLER_AGREE(买家已经申请退款，等待卖家同意)  
WAIT_BUYER_RETURN_GOODS(卖家已经同意退款，等待买家退货)  
WAIT_SELLER_CONFIRM_GOODS(买家已经退货，等待卖家确认收货)  
SELLER_REFUSE_BUYER(卖家拒绝退款)  
CLOSED(退款关闭)  
SUCCESS(退款成功)</desc>
<sample>WAIT_SELLER_AGREE</sample>
<default/>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>买家昵称</desc>
<sample>hz0799</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易类型列表，一次查询多种类型可用半角逗号分隔，默认同时查询guarantee_trade, auto_delivery的2种类型的数据。 
fixed(一口价)  
auction(拍卖)  
guarantee_trade(一口价、拍卖)  
independent_simple_trade(旺店入门版交易)  
independent_shop_trade(旺店标准版交易)  
auto_delivery(自动发货)  
ec(直冲)  
cod(货到付款)  
fenxiao(分销)  
game_equipment(游戏装备)  
shopex_trade(ShopEX交易)  
netcn_trade(万网交易)  
external_trade(统一外部交易)</desc>
<sample>fixed</sample>
<default/>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询修改时间开始。格式: yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询修改时间结束。格式: yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
<sample>40</sample>
<default/>
</param>
</request>
<response>
<param>
<name>refunds</name>
<type>Refund</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索到的退款信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>100</sample>
<desc>搜索到的交易信息总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"refunds_receive_get_response":{"refunds":{"refund":[{"refund_id":241286},{"refund_id":236840},{"refund_id":236839},{"refund_id":233805},{"refund_id":233804},{"refund_id":233802},{"refund_id":233800},{"refund_id":233795},{"refund_id":233794},{"refund_id":233791},{"refund_id":233790},{"refund_id":232871},{"refund_id":228566},{"refund_id":215401},{"refund_id":215400},{"refund_id":215399},{"refund_id":215398},{"refund_id":215397},{"refund_id":202812},{"refund_id":179765},{"refund_id":126750},{"refund_id":126614},{"refund_id":126599},{"refund_id":126590},{"refund_id":125899},{"refund_id":125898},{"refund_id":125897},{"refund_id":125488},{"refund_id":124981},{"refund_id":124980},{"refund_id":118538},{"refund_id":118436},{"refund_id":118434},{"refund_id":118433},{"refund_id":118432},{"refund_id":118431},{"refund_id":118427},{"refund_id":118421}]},"total_results":38}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><refunds_receive_get_response><refunds list="true"><refund><refund_id>241286</refund_id></refund><refund><refund_id>236840</refund_id></refund><refund><refund_id>236839</refund_id></refund><refund><refund_id>233805</refund_id></refund><refund><refund_id>233804</refund_id></refund><refund><refund_id>233802</refund_id></refund><refund><refund_id>233800</refund_id></refund><refund><refund_id>233795</refund_id></refund><refund><refund_id>233794</refund_id></refund><refund><refund_id>233791</refund_id></refund><refund><refund_id>233790</refund_id></refund><refund><refund_id>232871</refund_id></refund><refund><refund_id>228566</refund_id></refund><refund><refund_id>215401</refund_id></refund><refund><refund_id>215400</refund_id></refund><refund><refund_id>215399</refund_id></refund><refund><refund_id>215398</refund_id></refund><refund><refund_id>215397</refund_id></refund><refund><refund_id>202812</refund_id></refund><refund><refund_id>179765</refund_id></refund><refund><refund_id>126750</refund_id></refund><refund><refund_id>126614</refund_id></refund><refund><refund_id>126599</refund_id></refund><refund><refund_id>126590</refund_id></refund><refund><refund_id>125899</refund_id></refund><refund><refund_id>125898</refund_id></refund><refund><refund_id>125897</refund_id></refund><refund><refund_id>125488</refund_id></refund><refund><refund_id>124981</refund_id></refund><refund><refund_id>124980</refund_id></refund><refund><refund_id>118538</refund_id></refund><refund><refund_id>118436</refund_id></refund><refund><refund_id>118434</refund_id></refund><refund><refund_id>118433</refund_id></refund><refund><refund_id>118432</refund_id></refund><refund><refund_id>118431</refund_id></refund><refund><refund_id>118427</refund_id></refund><refund><refund_id>118421</refund_id></refund></refunds><total_results>38</total_results></refunds_receive_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.amount.get</name>
<cname>交易订单帐务查询</cname>
<authorize>必须用户授权</authorize>
<desc>卖家查询该笔交易订单的资金帐务相关的数据； 
1. 只供卖家使用，买家不可使用 
2. 可查询所有的状态的订单，但不同状态时订单的相关数据可能会有不同</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>订单交易编号</desc>
<sample>123456</sample>
<default/>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>订单帐务详情需要返回的字段信息，可选值如下： 
1. TradeAmount中可指定的fields： 
tid,alipay_no,created,pay_time,end_time,total_fee,payment,post_fee,cod_fee,commission_fee,buyer_obtain_point_fee 
2. OrderAmount中可指定的fields：order_amounts.oid,order_amounts.title,order_amounts.num_iid, 
order_amounts.sku_properties_name,order_amounts.sku_id,order_amounts.num,order_amounts.price,order_amounts.discount_fee,order_amounts.adjust_fee,order_amounts.payment,order_amounts.promotion_name 
3. order_amounts(返回OrderAmount的所有内容) 
4. promotion_details(指定该值会返回主订单的promotion_details中除id之外的所有字段)</desc>
<sample>tid,oid,alipay_no,total_fee,post_fee</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade_amount</name>
<type>TradeAmount</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>主订单的财务信息详情</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_account_get_response":{"trade":{"created":"2000-01-01 00:00:00","num":1,"tid":2231958349,"alipay_no":"2009112081173831","payment":"200.07","pay_time":"2000-01-01 00:00:00","end_time":"2000-01-01 00:00:00","buyer_obtain_point_fee":0,"total_fee":"200.07","post_fee":"200.07","commission_fee":"200.07","cod_fee":"12.07","orders":{"sku_properties_name":"颜色:桔色;尺码:M","item_meal_name":"M8原装电池:便携支架:M8专用座充:莫凡保护袋","num":10,"title":"山寨版测试机器","price":"200.07","oid":2231958349,"payment":"200.07","discount_fee":"200.07","adjust_fee":"1.01",},"promotion_details":{"promotion_name":"满就减钱","discount_fee":"10.00","gift_item_name":"晨光签字笔"},}}}]]></json>
<xml><![CDATA[<trade_amount_get_response><trade_amount><tid>123456</tid><alipay_no>2009112081173831</alipay_no><created>2000-01-01 00:00:00</created><pay_time>2000-01-01 00:00:00</pay_time><end_time>2000-01-01 00:00:00</end_time><total_fee>200.07</total_fee><post_fee>200.07</post_fee><cod_fee>12.07</cod_fee><payment>200.07</payment><commission_fee>200.07</commission_fee><buyer_obtain_point_fee>0</buyer_obtain_point_fee><promotion_details><promotion_name>满就减钱</promotion_name><discount_fee>10.00</discount_fee><gift_item_name>晨光签字笔</gift_item_name></promotion_details><order_amounts><oid>123456</oid><title>山寨版测试机器</title><sku_properties_name>颜色:桔色;尺码:M</sku_properties_name><num>12</num><price>200.07</price><discount_fee>200.07</discount_fee><adjust_fee>1.01</adjust_fee><payment>200.07</payment><promotion_name>满就减钱</promotion_name><num_iid>123456</num_iid><sku_id>123456</sku_id></order_amounts></trade_amount></trade_amount_get_response>]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.close</name>
<cname>卖家关闭一笔交易</cname>
<authorize>必须用户授权</authorize>
<desc>关闭一笔订单，可以是主订单或子订单。</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>主订单或子订单编号。</desc>
<sample>2231978090</sample>
<default/>
</param>
<param>
<name>close_reason</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>交易关闭原因。</desc>
<sample>买家不想购买了</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>关闭交易时返回的Trade信息，可用字段有tid和modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_close_response":{"trade":{"modified":"2010-05-11 10:39:33","tid":22328010090301}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><trade_close_response><trade><modified>2010-05-11 10:51:15</modified><tid>22328015740301</tid></trade></trade_close_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:tid</code>
<desc>参数：tid无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.confirmfee.get</name>
<cname>获取交易确认收货费用</cname>
<authorize>必须用户授权</authorize>
<desc>获取交易确认收货费用 
可以获取主订单或子订单的确认收货费用</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易编号，或子订单编号</desc>
<sample>2010225588</sample>
<default/>
</param>
<param>
<name>is_detail</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>是否是子订单。可选值:IS_FATHER(父订单),IS_CHILD(子订单)</desc>
<sample>父订单</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade_confirm_fee</name>
<type>TradeConfirmFee</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>获取到的交易确认收货费用</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_confirmfee_get_response":{"trade_confirm_fee":{"confirm_fee":"200.07","confirm_post_fee":"200.07","is_last_order":true}}}]]></json>
<xml><![CDATA[<trade_confirmfee_get_response><trade_confirm_fee><confirm_fee>200.07</confirm_fee><confirm_post_fee>200.07</confirm_post_fee><is_last_order>true</is_last_order></trade_confirm_fee></trade_confirmfee_get_response>]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.fullinfo.get</name>
<cname>获取单笔交易的详细信息</cname>
<authorize>必须用户授权</authorize>
<desc>获取单笔交易的详细信息 
1.只有在交易成功的状态下才能取到交易佣金，其它状态下取到的都是零或空值  
2.只有单笔订单的情况下Trade数据结构中才包含商品相关的信息  
3.获取到的Order中的payment字段在单笔子订单时包含物流费用，多笔子订单时不包含物流费用  
注：包含以下字段的返回会增加TOP的后台压力，请仅在确实需要的情况下才去获取：commission_fee, buyer_alipay_no, seller_alipay_no, buyer_email, seller_mobile, seller_phone, seller_name, seller_email, timeout_action_time, item_memo, trade_memo, title, available_confirm_fee</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>1.Trade中可以指定返回的fields：seller_nick, buyer_nick, title, type, created, tid, seller_rate,buyer_flag, buyer_rate, status, payment, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no, buyer_message, pic_path, num_iid, num, price, buyer_alipay_no, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone, buyer_email,seller_flag, seller_alipay_no, seller_mobile, seller_phone, seller_name, seller_email, available_confirm_fee, has_post_fee, timeout_action_time, snapshot_url, cod_fee, cod_status, shipping_type, trade_memo, is_3D,buyer_memo,buyer_email(注：当该授权用户为卖家时不能查看买家buyer_memo,buyer_flag)
2.Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.snapshot_url, orders.timeout_action_time，orders.sku_properties_name, orders.item_meal_name, item_memo,orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type, orders.is_oversold
3.fields：orders（返回Order的所有内容）
4.flelds：promotion_details(返回promotion_details所有内容，优惠详情),invoice_name(发票抬头)</desc>
<sample>alipay_no,commission_fee,received_payment,buyer_alipay_no</sample>
<default/>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易编号</desc>
<sample>123456798</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_fullinfo_get_response":{"trade":{"adjust_fee":"0.00","available_confirm_fee":"50.00","buyer_alipay_no":"tbtest1062@taobaotest.com","buyer_email":"tbtest1062@taobaotest.com","buyer_message":"buyerMessage","buyer_nick":"tbtest1062","buyer_obtain_point_fee":0,"buyer_rate":false,"cod_fee":"0.00","created":"2010-05-11 10:32:51","discount_fee":"0.00","has_post_fee":true,"iid":"29e5b5d76cb3dc2b627cb3f94988592f","modified":"2010-05-11 10:32:51","num":1,"orders":{"order":[{"adjust_fee":"0.00","buyer_rate":"false","discount_fee":"0.00","iid":"29e5b5d76cb3dc2b627cb3f94988592f","num":1,"oid":22328007510301,"payment":"55.00","pic_path":"http://img08.taobao.net/bao/uploaded/i8/T1jVXXXePbXXaoPB6a_091917.jpg","price":"50.00","refund_status":"NO_REFUND","seller_rate":"false","seller_type":"C","sku_id":"5941486","sku_properties_name":"颜色:天蓝色;尺码:M","snapshot_url":"T1TVXXXn8UXXXfUYZ2.1269918494866_snap","status":"TRADE_NO_CREATE_PAY","title":"创建交易商品","total_fee":"50.00"}]},"payment":"55.00","pic_path":"http://img08.taobao.net/bao/uploaded/i8/T1jVXXXePbXXaoPB6a_091917.jpg","point_fee":0,"post_fee":"5.00","price":"50.00","real_point_fee":0,"received_payment":"0.00","receiver_address":"下沙高教园区","receiver_city":"北京市","receiver_district":"东城区","receiver_mobile":"12354252544","receiver_name":"夏日香气","receiver_phone":"0571-84110653","receiver_state":"北京","receiver_zip":"123456","seller_alipay_no":"tbtest1061@taobaotest.com","seller_email":" ","seller_name":"我在测试","seller_nick":"tbtest1061","seller_phone":"010-630239403-123","seller_rate":false,"shipping_type":"express","sid":"22328007510301","snapshot_url":"T1TVXXXn8UXXXfUYZ2.1269918494866_snap","status":"TRADE_NO_CREATE_PAY","tid":22328007510301,"title":"妙妙的经典小窝","total_fee":"50.00","type":"independent_shop_trade"}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><trade_fullinfo_get_response><trade><adjust_fee>0.00</adjust_fee><available_confirm_fee>50.00</available_confirm_fee><buyer_alipay_no>tbtest1062@taobaotest.com</buyer_alipay_no><buyer_email>tbtest1062@taobaotest.com</buyer_email><buyer_message>buyerMessage</buyer_message><buyer_nick>tbtest1062</buyer_nick><buyer_obtain_point_fee>0</buyer_obtain_point_fee><buyer_rate>false</buyer_rate><cod_fee>0.00</cod_fee><created>2010-05-11 10:46:17</created><discount_fee>0.00</discount_fee><has_post_fee>true</has_post_fee><iid>29e5b5d76cb3dc2b627cb3f94988592f</iid><modified>2010-05-11 10:46:17</modified><num>1</num><orders list="true"><order><adjust_fee>0.00</adjust_fee><buyer_rate>false</buyer_rate><discount_fee>0.00</discount_fee><iid>29e5b5d76cb3dc2b627cb3f94988592f</iid><num>1</num><oid>22328013190301</oid><payment>55.00</payment><pic_path>http:]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-permission</code>
<desc>必须是此交易的买家或卖家才能获取交易详细信息</desc>
<solution>查看是否程序出问导致取到别的卖家的交易ID而无法查看，出现错误不要重试</solution>
</error>
<error>
<code>isv.trade-not-exist</code>
<desc>交易不存在</desc>
<solution>订单已进入历史库，出现错误清除本地数据库该订单，不要重试</solution>
</error>
</errors>
<faqs>
<faq>
<question>怎样取买家的信息?</question>
<answer>用taobao.trade.fullinfo.get查询订单详细信息。会带有买家的信息。</answer>
</faq>
<faq>
<question>订单中取不到outer_iid怎么办?</question>
<answer>订单中如果取不到outer_iid但一定会取到iid，用iid去查询商品取到outer_iid。</answer>
</faq>
</faqs>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.get</name>
<cname>获取单笔交易的部分信息(性能高)</cname>
<authorize>必须用户授权</authorize>
<desc>获取单笔交易的部分信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有：&lt;br&gt;

1. Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no, buyer_message, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type &lt;br&gt;
2. Order中可以指定返回fields:orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.outer_sku_id, orders.outer_iid, orders.buyer_rate, orders.seller_rate &lt;br&gt;
3. fields：orders（返回Order中的所有允许返回的字段）</desc>
<sample>orders.buyer_rate</sample>
<default/>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易编号</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_get_response":{"trade":{"adjust_fee":"0.00","alipay_no":"2009062904095469","buyer_memo":"","buyer_nick":"tbtest1062","buyer_obtain_point_fee":0,"buyer_rate":true,"cod_fee":"0.00","consign_time":"2009-06-29 16:58:07","created":"2009-06-29 16:55:59","discount_fee":"0.00","end_time":"2009-06-29 16:59:02","iid":"9444f147a20b22343cf38f3e67a1232c","modified":"2009-07-14 19:59:56","num":2,"orders":{"order":[{"adjust_fee":"0.00","buyer_rate":"true","discount_fee":"0.00","iid":"9444f147a20b22343cf38f3e67a1232c","item_meal_name":"耳机:充电器:电池","num":2,"oid":11569090,"payment":"2715.00","pic_path":"http://img01.taobao.net/bao/uploaded/i1/T1MVdXXi0uudLWYAQ2_045042.jpg","price":"1355.00","refund_status":"NO_REFUND","seller_rate":"true","seller_type":"C","sku_id":"5265610","sku_properties_name":"机身颜色:黑色;手机套餐:套餐二","status":"TRADE_FINISHED","title":"诺基亚001","total_fee":"2710.00"}]},"pay_time":"2009-06-29 16:56:18","payment":"2715.00","pic_path":"http://img01.taobao.net/bao/uploaded/i1/T1MVdXXi0uudLWYAQ2_045042.jpg","point_fee":0,"post_fee":"5.00","price":"1355.00","real_point_fee":0,"received_payment":"2715.00","seller_nick":"tbtest1061","seller_rate":true,"shipping_type":"express","sid":"11569090","status":"TRADE_FINISHED","tid":11569090,"title":"妙妙的经典小窝","total_fee":"2710.00","type":"fixed"}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><trade_get_response><trade><adjust_fee>0.00</adjust_fee><alipay_no>2009062904095469</alipay_no><buyer_memo></buyer_memo><buyer_nick>tbtest1062</buyer_nick><buyer_obtain_point_fee>0</buyer_obtain_point_fee><buyer_rate>true</buyer_rate><cod_fee>0.00</cod_fee><consign_time>2009-06-29 16:58:07</consign_time><created>2009-06-29 16:55:59</created><discount_fee>0.00</discount_fee><end_time>2009-06-29 16:59:02</end_time><iid>9444f147a20b22343cf38f3e67a1232c</iid><modified>2009-07-14 19:59:56</modified><num>2</num><orders list="true"><order><adjust_fee>0.00</adjust_fee><buyer_rate>true</buyer_rate><discount_fee>0.00</discount_fee><iid>9444f147a20b22343cf38f3e67a1232c</iid><item_meal_name>耳机:充电器:电池</item_meal_name><num>2</num><oid>11569090</oid><payment>2715.00</payment><pic_path>http:]]></xml>
</sample>
<errors>
<error>
<code>isv.trade-not-exist</code>
<desc>交易不存在</desc>
<solution>单已进入历史库，出现错误清除本地数据库该订单，不要重试</solution>
</error>
<error>
<code>isv.invalid-permission</code>
<desc>必须是此交易的买家或卖家才能获取交易详细信息</desc>
<solution>查看是否程序出问导致取到别的卖家的交易ID而无法查看，出现错误不要重试</solution>
</error>
</errors>
<faqs>
<faq>
<question>taobao.trade.get取到单笔交易的详细信息中无法取到如:email，姓名，电话或手机，和支付宝ID?</question>
<answer>B商家通过taobao.trade.fullinfo.get这个API获取交易的收货人信息,C卖家无法获取收货人信息,建议在淘宝店铺中从已卖出的宝贝批量导出订单获得收货人姓名等 。</answer>
</faq>
<faq>
<question>taobao.trade.get方法能通过交易状态来查询吗?</question>
<answer>不能,你可以通过taobao.trades.sold.get接口根据交易状态来查询</answer>
</faq>
</faqs>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.memo.add</name>
<cname>对一笔交易添加备注</cname>
<authorize>必须用户授权</authorize>
<desc>根据登录用户的身份（买家或卖家），自动添加相应的交易备注,不能重复调用些接口添加备注，需要更新备注请用taobao.trade.memo.update</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易编号</desc>
<sample>54987</sample>
<default/>
</param>
<param>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>交易备注。最大长度: 1000个字节</desc>
<sample>交易备注</sample>
<default/>
</param>
<param>
<name>flag</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0</desc>
<sample>1</sample>
<default>0</default>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>对一笔交易添加备注后返回其对应的Trade，Trade中可用的返回字段有tid和created</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_memo_add_response":{"trade":{"created":"2009-11-13 13:41:17","tid":"2231958349"}}}]]></json>
<xml><![CDATA[<trade_memo_add_response><trade><tid>2231958578</tid><created>2009-11-13 13:40:21</created></trade></trade_memo_add_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-permission</code>
<desc>必须是此交易的卖家或买家才能添加交易备注</desc>
<solution>查看是否程序出问导致添加交易备注的交易不属于该卖家，出现错误不要重试</solution>
</error>
</errors>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.memo.update</name>
<cname>修改一笔交易备注</cname>
<authorize>必须用户授权</authorize>
<desc>需要商家或以上权限才可调用此接口，可重复调用本接口更新交易备注，本接口同时具有添加备注的功能</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易编号</desc>
<sample>123</sample>
<default/>
</param>
<param>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易备注。最大长度: 1000个字节</desc>
<sample>交易备注</sample>
<default/>
</param>
<param>
<name>flag</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>交易备注旗帜，可选值为：0(灰色), 1(红色), 2(黄色), 3(绿色), 4(蓝色), 5(粉红色)，默认值为0</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>reset</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否对memo的值置空 
若为true，则不管传入的memo字段的值是否为空，都将会对已有的memo值清空，慎用； 
若用false，则会根据memo是否为空来修改memo的值：若memo为空则忽略对已有memo字段的修改，若memo非空，则使用新传入的memo覆盖已有的memo的值</desc>
<sample>true</sample>
<default>false</default>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>更新交易的备注信息后返回的Trade，其中可用字段为tid和modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_memo_update_response":{"trade":{"tid":"2231958349","modified":"2009-11-13 13:43:08"}}}]]></json>
<xml><![CDATA[<trade_memo_update_response><trade><tid>2231958349</tid><modified>2009-11-13 13:45:05</modified></trade></trade_memo_update_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-permission</code>
<desc>必须是此交易的卖家或买家才能更新交易备注</desc>
<solution>查看是否程序出问导致更新错误的订单备注，出现错误不要重试</solution>
</error>
</errors>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.ordersku.update</name>
<cname>更新交易订单的销售属性</cname>
<authorize>不需用户授权</authorize>
<desc/>
<request>
<param>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>子订单编号（对于单笔订单的交易可以传交易编号）。</desc>
<sample>35618617050047</sample>
<default/>
</param>
<param>
<name>sku_id</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>销售属性编号，可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。</desc>
<sample>2308437033</sample>
<default/>
</param>
<param>
<name>sku_props</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>销售属性组合串，格式：p1:v1;p2:v2，如：1627207:28329;20509:28314。可以通过taobao.item.skus.get获取订单对应的商品的所有销售属性。</desc>
<sample>1627207:28329;20509:28314</sample>
<default/>
</param>
</request>
<response>
<param>
<name>order</name>
<type>Order</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>只返回oid和modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_ordersku_update_response":{"order":{"oid":"2231958349","modified":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<trade_ordersku_update_response><order><oid>2231958349</oid><modified>2000-01-01 00:00:00</modified></order></trade_ordersku_update_response>]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.receivetime.delay</name>
<cname>延长交易收货时间</cname>
<authorize>必须用户授权</authorize>
<desc>延长交易收货时间</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>主订单号</desc>
<sample>129381983</sample>
<default/>
</param>
<param>
<name>days</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>延长收货的天数，可选值为：3, 5, 7, 10。</desc>
<sample>3</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>更新后的交易数据，只包括tid和modified两个字段。</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_receivetime_delay_response":{"trade":{"tid":2231958349,"modified":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<trade_receivetime_delay_response><trade><tid>2231958349</tid><modified>2000-01-01 00:00:00</modified></trade></trade_receivetime_delay_response>]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.shippingaddress.update</name>
<cname>更改交易的收货地址</cname>
<authorize>必须用户授权</authorize>
<desc/>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易编号。</desc>
<sample>2755739791</sample>
<default/>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>收货人全名。最大长度为50个字节。</desc>
<sample>马云</sample>
<default/>
</param>
<param>
<name>receiver_phone</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>固定电话。最大长度为30个字节。</desc>
<sample>123456789</sample>
<default/>
</param>
<param>
<name>receiver_mobile</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>移动电话。最大长度为30个字节。</desc>
<sample>13600000000</sample>
<default/>
</param>
<param>
<name>receiver_state</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>省份。最大长度为32个字节。如：浙江</desc>
<sample>浙江</sample>
<default/>
</param>
<param>
<name>receiver_city</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>城市。最大长度为32个字节。如：杭州</desc>
<sample>杭州</sample>
<default/>
</param>
<param>
<name>receiver_district</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>区/县。最大长度为32个字节。如：西湖区</desc>
<sample>西湖区</sample>
<default/>
</param>
<param>
<name>receiver_address</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>收货地址。最大长度为228个字节。</desc>
<sample>xx路xx号</sample>
<default/>
</param>
<param>
<name>receiver_zip</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>邮政编码。必须由6个数字组成。</desc>
<sample>310001</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<required>true</required>
<sample>23452345</sample>
<desc>交易结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_shippingaddress_update_response":{"trade":{"modified":"2010-05-11 10:32:29","tid":2231920490}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><trade_shippingaddress_update_response><trade><modified>2010-05-11 09:26:05</modified><tid>2232158411</tid></trade></trade_shippingaddress_update_response><!--vx215015.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.trade-not-exist</code>
<desc>交易不存在</desc>
<solution>订单已进入历史库，出现错误清除本地数据库该订单，不要重试</solution>
</error>
<error>
<code>isv.invalid-parameter:tid</code>
<desc>交易不属于当前用户：***</desc>
<solution>查看是否程序出问导致取到别的卖家的交易而无法更新地址，出现错误不要重试</solution>
</error>
</errors>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trade.snapshot.get</name>
<cname>交易快照查询</cname>
<authorize>必须用户授权</authorize>
<desc>交易快照查询 
目前只支持类型为“旺店标准版(600)”或“旺店入门版(610)”的交易  
对于“旺店标准版”类型的交易，返回的snapshot字段为交易快照编号  
对于“旺店入门版”类型的交易，返回的snapshot字段为JSON结构的数据(其中的shopPromotion包含了优惠，积分等信息）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段列表。现只支持："snapshot"字段</desc>
<sample>snapshot</sample>
<default/>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易编号</desc>
<sample>2010225588</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade</name>
<type>Trade</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>只包含Trade中的tid和snapshot、子订单Order中的oid和snapshot</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trade_snapshot_get_response":{"trade":{"orders":{"order":[{"oid":22328008080301,"snapshot":"snapshot0"}]},"snapshot":"snapshot0","tid":22328008080301}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><trade_snapshot_get_response><trade><orders list="true"><order><oid>22328013760301</oid><snapshot>snapshot0</snapshot></order></orders><snapshot>snapshot0</snapshot><tid>22328013760301</tid></trade></trade_snapshot_get_response><!--vm127.sqa-->]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trades.bought.get</name>
<cname>搜索当前会话用户作为买家达成的交易记录</cname>
<authorize>必须用户授权</authorize>
<desc>搜索当前会话用户作为买家达成的交易记录(目前只能查询三个月以内的订单)</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有：

   1. Trade中可以指定返回的fields：
seller_nick, buyer_nick, title, type, created, sid, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone            
   
2. Order中可以指定返回fields：
orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type                          
  
 3. fields：orders（返回Order的所有内容）</desc>
<sample>seller_nick</sample>
<default/>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询交易创建时间开始。格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询交易创建时间结束。格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 23:59:59</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 
 交易状态可选值 
 
    TRADE_NO_CREATE_PAY(没有创建支付宝交易) 
    WAIT_BUYER_PAY(等待买家付款) 
    WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
    WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
    TRADE_BUYER_SIGNED(买家已签收,货到付款专用) 
    TRADE_FINISHED(交易成功) 
    TRADE_CLOSED(交易关闭) 
    TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) 
    ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) 
    ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)</desc>
<sample>TRADE_NO_CREATE_PAY</sample>
<default/>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家昵称</desc>
<sample>zhangsan</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据 
交易类型可选值 
fixed(一口价) 
auction(拍卖) 
guarantee_trade(一口价、拍卖) 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
auto_delivery(自动发货) 
ec(直冲) 
cod(货到付款) 
fenxiao(分销) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易 
instant_trade (即时到账) 
b2c_cod(大商家货到付款)</desc>
<sample>shopex_trade</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
<sample>40</sample>
<default/>
</param>
<param>
<name>rate_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易是否评价.默认查询所有评价状态的数据，除了默认值外每次只能查询一种状态。
可选值： RATE_UNBUYER(买家未评) RATE_UNSELLER(卖家未评) RATE_BUYER_UNSELLER(买家已评，卖家未评) RATE_UNBUYER_SELLER(买家未评，卖家已评)</desc>
<sample>RATE_UNBUYER</sample>
<default/>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>123</sample>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trades_bought_get_response":{"trades":{"trade":[{"adjust_fee":"0.00","buyer_nick":"tbtest1062","buyer_obtain_point_fee":0,"buyer_rate":false,"cod_fee":"0.00","consign_time":"2010-04-15 14:02:17","created":"2010-04-15 13:50:32","discount_fee":"0.00","end_time":"2010-04-28 14:03:04","iid":"87044a28d424b70403f7b191556d62c4","modified":"2010-04-28 14:02:40","num":1,"orders":{"order":[{"adjust_fee":"0.00","buyer_rate":"false","discount_fee":"0.00","iid":"87044a28d424b70403f7b191556d62c4","num":1,"oid":22327070840301,"payment":"100.00","price":"100.00","refund_status":"NO_REFUND","seller_rate":"false","seller_type":"C","sku_id":"8158582","sku_properties_name":"机身颜色:军绿色;手机套餐:一电一充","status":"TRADE_FINISHED","title":"jeck test","total_fee":"100.00"}]},"pay_time":"2010-04-15 14:00:58","payment":"100.00","point_fee":0,"post_fee":"0.00","price":"100.00","real_point_fee":0,"received_payment":"100.00","seller_nick":"tbtest1061","seller_rate":false,"shipping_type":"free","sid":"22327070840301","status":"TRADE_FINISHED","tid":22327070840301,"title":"妙妙的经典小窝","type":"fixed"},{"adjust_fee":"0.00","buyer_nick":"tbtest1062","buyer_obtain_point_fee":0,"buyer_rate":false,"cod_fee":"0.00","created":"2010-03-19 10:47:45","discount_fee":"0.00","iid":"aa7fb0620f01b86d118caaa320bdac1d","modified":"2010-03-21 15:49:05","num":1,"orders":{"order":[{"adjust_fee":"0.00","buyer_rate":"false","discount_fee":"0.00","iid":"aa7fb0620f01b86d118caaa320bdac1d","num":1,"oid":22325801410373,"outer_sku_id":"10000005","payment":"1200.00","pic_path":"http://img08.taobao.net/bao/uploaded/i8/T1FXXXXedYt0Jl2wcZ_032342.jpg","price":"1200.00","refund_status":"NO_REFUND","seller_rate":"false","seller_type":"C","sku_id":"85739726","sku_properties_name":"机身颜色:褐色;手机套餐:官方标配","status":"WAIT_SELLER_SEND_GOODS","title":"Nokia/诺基亚","total_fee":"1200.00"}]},"pay_time":"2010-03-19 10:48:16","payment":"1200.00","pic_path":"http://img08.taobao.net/bao/uploaded/i8/T1FXXXXedYt0Jl2wcZ_032342.jpg","point_fee":0,"post_fee":"0.00","price":"1200.00","real_point_fee":0,"received_payment":"0.00","seller_nick":"tbtest1067","seller_rate":false,"shipping_type":"free","sid":"22325801410373","status":"WAIT_SELLER_SEND_GOODS","tid":22325801410373,"title":"tbtest1067的店铺","type":"fixed"},{"adjust_fee":"0.00","buyer_nick":"tbtest1062","buyer_obtain_point_fee":0,"buyer_rate":false,"cod_fee":"0.00","consign_time":"2010-03-19 17:08:55","created":"2010-03-19 10:38:02","discount_fee":"0.00","iid":"f709dafe4965b6412d982db4835e5e1d","modified":"2010-03-19 17:08:55","num":1,"orders":{"order":[{"adjust_fee":"0.00","buyer_rate":"false","discount_fee":"0.00","iid":"f709dafe4965b6412d982db4835e5e1d","num":1,"oid":22325801090369,"payment":"1.00","pic_path":"http://img01.taobao.net/bao/uploaded/i1/T1KpdXXkCOt0Kd0Dk6_062820.jpg","price":"1.00","refund_status":"NO_REFUND","seller_rate":"false","seller_type":"C","status":"WAIT_BUYER_CONFIRM_GOODS","title":"p100301801fwst","total_fee":"1.00"}]},"pay_time":"2010-03-19 10:38:48","payment":"1.00","pic_path":"http://img01.taobao.net/bao/uploaded/i1/T1KpdXXkCOt0Kd0Dk6_062820.jpg","point_fee":0,"post_fee":"0.00","price":"1.00","real_point_fee":0,"received_payment":"0.00","seller_nick":"tbtest767","seller_rate":false,"shipping_type":"free","sid":"22325801090369","status":"WAIT_BUYER_CONFIRM_GOODS","tid":22325801090369,"title":"tbtest767的店铺","type":"fixed"}]},"total_results":72}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><trades_bought_get_response><trades list="true"><trade><adjust_fee>0.00</adjust_fee><buyer_nick>tbtest1062</buyer_nick><buyer_obtain_point_fee>0</buyer_obtain_point_fee><buyer_rate>false</buyer_rate><cod_fee>0.00</cod_fee><consign_time>2010-04-15 14:02:17</consign_time><created>2010-04-15 13:50:32</created><discount_fee>0.00</discount_fee><end_time>2010-04-28 14:03:04</end_time><iid>87044a28d424b70403f7b191556d62c4</iid><modified>2010-04-28 14:02:40</modified><num>1</num><orders list="true"><order><adjust_fee>0.00</adjust_fee><buyer_rate>false</buyer_rate><discount_fee>0.00</discount_fee><iid>87044a28d424b70403f7b191556d62c4</iid><num>1</num><oid>22327070840301</oid><payment>100.00</payment><price>100.00</price><refund_status>NO_REFUND</refund_status><seller_rate>false</seller_rate><seller_type>C</seller_type><sku_id>8158582</sku_id><sku_properties_name>机身颜色:军绿色;手机套餐:一电一充</sku_properties_name><status>TRADE_FINISHED</status><title>jeck test</title><total_fee>100.00</total_fee></order></orders><pay_time>2010-04-15 14:00:58</pay_time><payment>100.00</payment><point_fee>0</point_fee><post_fee>0.00</post_fee><price>100.00</price><real_point_fee>0</real_point_fee><received_payment>100.00</received_payment><seller_nick>tbtest1061</seller_nick><seller_rate>false</seller_rate><shipping_type>free</shipping_type><sid>22327070840301</sid><status>TRADE_FINISHED</status><tid>22327070840301</tid><title>妙妙的经典小窝</title><type>fixed</type></trade><trade><adjust_fee>0.00</adjust_fee><buyer_nick>tbtest1062</buyer_nick><buyer_obtain_point_fee>0</buyer_obtain_point_fee><buyer_rate>false</buyer_rate><cod_fee>0.00</cod_fee><created>2010-03-19 10:47:45</created><discount_fee>0.00</discount_fee><iid>aa7fb0620f01b86d118caaa320bdac1d</iid><modified>2010-03-21 15:49:05</modified><num>1</num><orders list="true"><order><adjust_fee>0.00</adjust_fee><buyer_rate>false</buyer_rate><discount_fee>0.00</discount_fee><iid>aa7fb0620f01b86d118caaa320bdac1d</iid><num>1</num><oid>22325801410373</oid><outer_sku_id>10000005</outer_sku_id><payment>1200.00</payment><pic_path>http:]]></xml>
</sample>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trades.sold.get</name>
<cname>搜索当前会话用户作为卖家已卖出的交易数据</cname>
<authorize>必须用户授权</authorize>
<desc>搜索当前会话用户作为卖家已卖出的交易数据(只能获取到三个月以内的交易信息)</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有：&lt;br&gt;
1. Trade中可以指定返回的fields:&lt;br&gt;
seller_nick, buyer_nick, title, type, created,  tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone &lt;br&gt;
2. Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type &lt;br&gt;
3. fields：orders（返回Order的所有内容）</desc>
<sample>total_fee</sample>
<default/>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询三个月内交易创建时间开始。格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询交易创建时间结束。格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 23:59:59</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。
可选值：
TRADE_NO_CREATE_PAY(没有创建支付宝交易)
WAIT_BUYER_PAY(等待买家付款)
WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款)
WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货)
TRADE_BUYER_SIGNED(买家已签收,货到付款专用)
TRADE_FINISHED(交易成功)
TRADE_CLOSED(交易关闭)
TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭)
ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY)
ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)</desc>
<sample>ALL_WAIT_PAY</sample>
<default/>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>买家昵称</desc>
<sample>zhangsan</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据 。 
可选值： 
fixed(一口价) 
auction(拍卖) 
guarantee_trade(一口价、拍卖) 
independent_simple_trade(旺店入门版交易) 
independent_shop_trade(旺店标准版交易) 
auto_delivery(自动发货) 
ec(直冲) 
cod(货到付款) 
fenxiao(分销) 
game_equipment(游戏装备) 
shopex_trade(ShopEX交易) 
netcn_trade(万网交易) 
external_trade(统一外部交易) 
instant_trade (即时到账) 
b2c_cod(大商家货到付款)</desc>
<sample>game_equipment</sample>
<default/>
</param>
<param>
<name>rate_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>评价状态，默认查询所有评价状态的数据，除了默认值外每次只能查询一种状态。&lt;br&gt;
可选值：
RATE_UNBUYER(买家未评)
RATE_UNSELLER(卖家未评)
RATE_BUYER_UNSELLER(买家已评，卖家未评)
RATE_UNBUYER_SELLER(买家未评，卖家已评)</desc>
<sample>RATE_UNBUYER</sample>
<default/>
</param>
<param>
<name>tag</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
<sample>time_card</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:100</desc>
<sample>40</sample>
<default/>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>100</sample>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trades_sold_get_response":{"total_results":100,"trades":{"trade":[{"seller_nick":"我在测试","buyer_nick":"我在测试","title":"麦包包","type":"fixed(一口价)","created":"2000-01-01 00:00:00","iid":"152e442aefe88dd41cb0879232c0dcb0","price":"200.07","pic_path":"http://img08.taobao.net/bao/uploaded/i8/T1jVXXXePbXXaoPB6a_091917.jpg","num":1,"tid":2231958349,"buyer_message":"非常喜欢这款包","shipping_type":"free(卖家承担运费)","alipay_no":"2009112081173831","payment":"200.07","discount_fee":"200.07","adjust_fee":"200.07","snapshot_url":"T1mURbXopZXXXe3rLI.1257513712679_snap","snapshot":"自定义值","status":"TRADE_NO_CREATE_PAY","seller_rate":true,"buyer_rate":true,"buyer_memo":"上衣要大一号","seller_memo":"好的","trade_memo":"这是一次成功的交易","pay_time":"2000-01-01 00:00:00","end_time":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","buyer_obtain_point_fee":0,"point_fee":0,"real_point_fee":0,"total_fee":"200.07","post_fee":"200.07","buyer_alipay_no":"tbtest1063@taobaotest.com","receiver_name":"东方不败","receiver_state":"浙江省","receiver_city":"杭州市","receiver_district":"西湖区","receiver_address":"淘宝城911号","receiver_zip":"223700","receiver_mobile":"13512501826","receiver_phone":"13819175372","consign_time":"2000-01-01 00:00:00","buyer_email":"tbtest1064@taobaotest.com","commission_fee":"200.07","seller_alipay_no":"tbtest1063@taobaotest.com","seller_mobile":"13512501826","seller_phone":"13512501826","seller_name":"我在测试","seller_email":"tbtest1063@taobaotest.com","available_confirm_fee":"200.07","has_post_fee":true,"received_payment":"200.07","cod_fee":"12.07","cod_status":"EW_CREATED(订单已创建)","timeout_action_time":"2000-01-01 00:00:00","is_3D":true,"orders":{"iid":"152e442aefe88dd41cb0879232c0dcb0","sku_id":"5937146","sku_properties_name":"颜色:桔色;尺码:M","item_meal_name":"M8原装电池:便携支架:M8专用座充:莫凡保护袋","num":10,"title":"山寨版测试机器","price":"200.07","pic_path":"http://img08.taobao.net/bao/uploaded/i8/T1jVXXXePbXXaoPB6a_091917.jpg","seller_nick":"麦包包","buyer_nick":"碎银子","type":"直冲","created":"2000-01-01 00:00:00","refund_status":"SUCCESS(退款成功)","oid":2231958349,"outer_iid":"152e442aefe88dd41cb0879232c0dcb0","outer_sku_id":"81893848","total_fee":"200.07","payment":"200.07","discount_fee":"200.07","adjust_fee":"1.01","status":"TRADE_NO_CREATE_PAY(没有创建支付宝交易)","snapshot_url":"T1mURbXopZXXXe3rLI.1257513712679_snap","snapshot":"自定义值","timeout_action_time":"2000-01-01 00:00:00","buyer_rate":true,"seller_rate":true,"refund_id":2231958349,"seller_type":"B（商城商家）","modified":"2000-01-01 00:00:00","num_iid":2342344,"cid":123456},"buyer_flag":1,"seller_flag":1,"num_iid":3424234,"promotion":"hello world","promotion_details":{"id":22331764490705,"promotion_name":"满就减钱","discount_fee":"10.00"},"invoice_name":"淘宝"}]}}}]]></json>
<xml><![CDATA[<trades_sold_get_response><total_results>100</total_results><trades list="true"><trade><seller_nick>我在测试</seller_nick><buyer_nick>我在测试</buyer_nick><title>麦包包</title><type>fixed(一口价)</type><created>2000-01-01 00:00:00</created><iid>152e442aefe88dd41cb0879232c0dcb0</iid><price>200.07</price><pic_path>http:</pic_path><num>1</num><tid>2231958349</tid><buyer_message>非常喜欢这款包</buyer_message><shipping_type>free(卖家承担运费)</shipping_type><alipay_no>2009112081173831</alipay_no><payment>200.07</payment><discount_fee>200.07</discount_fee><adjust_fee>200.07</adjust_fee><snapshot_url>T1mURbXopZXXXe3rLI.1257513712679_snap</snapshot_url><snapshot>自定义值</snapshot><status>TRADE_NO_CREATE_PAY</status><seller_rate>true</seller_rate><buyer_rate>true</buyer_rate><buyer_memo>上衣要大一号</buyer_memo><seller_memo>好的</seller_memo><trade_memo>这是一次成功的交易</trade_memo><pay_time>2000-01-01 00:00:00</pay_time><end_time>2000-01-01 00:00:00</end_time><modified>2000-01-01 00:00:00</modified><buyer_obtain_point_fee>0</buyer_obtain_point_fee><point_fee>0</point_fee><real_point_fee>0</real_point_fee><total_fee>200.07</total_fee><post_fee>200.07</post_fee><buyer_alipay_no>tbtest1063@taobaotest.com</buyer_alipay_no><receiver_name>东方不败</receiver_name><receiver_state>浙江省</receiver_state><receiver_city>杭州市</receiver_city><receiver_district>西湖区</receiver_district><receiver_address>淘宝城911号</receiver_address><receiver_zip>223700</receiver_zip><receiver_mobile>13512501826</receiver_mobile><receiver_phone>13819175372</receiver_phone><consign_time>2000-01-01 00:00:00</consign_time><buyer_email>tbtest1064@taobaotest.com</buyer_email><commission_fee>200.07</commission_fee><seller_alipay_no>tbtest1063@taobaotest.com</seller_alipay_no><seller_mobile>13512501826</seller_mobile><seller_phone>13512501826</seller_phone><seller_name>我在测试</seller_name><seller_email>tbtest1063@taobaotest.com</seller_email><available_confirm_fee>200.07</available_confirm_fee><has_post_fee>true</has_post_fee><received_payment>200.07</received_payment><cod_fee>12.07</cod_fee><cod_status>EW_CREATED(订单已创建)</cod_status><timeout_action_time>2000-01-01 00:00:00</timeout_action_time><is_3D>true</is_3D><orders><iid>152e442aefe88dd41cb0879232c0dcb0</iid><sku_id>5937146</sku_id><sku_properties_name>颜色:桔色;尺码:M</sku_properties_name><item_meal_name>M8原装电池:便携支架:M8专用座充:莫凡保护袋</item_meal_name><num>10</num><title>山寨版测试机器</title><price>200.07</price><pic_path>http:</pic_path><seller_nick>麦包包</seller_nick><buyer_nick>碎银子</buyer_nick><type>直冲</type><created>2000-01-01 00:00:00</created><refund_status>SUCCESS(退款成功)</refund_status><oid>2231958349</oid><outer_iid>152e442aefe88dd41cb0879232c0dcb0</outer_iid><outer_sku_id>81893848</outer_sku_id><total_fee>200.07</total_fee><payment>200.07</payment><discount_fee>200.07</discount_fee><adjust_fee>1.01</adjust_fee><status>TRADE_NO_CREATE_PAY(没有创建支付宝交易)</status><snapshot_url>T1mURbXopZXXXe3rLI.1257513712679_snap</snapshot_url><snapshot>自定义值</snapshot><timeout_action_time>2000-01-01 00:00:00</timeout_action_time><buyer_rate>true</buyer_rate><seller_rate>true</seller_rate><refund_id>2231958349</refund_id><seller_type>B（商城商家）</seller_type><modified>2000-01-01 00:00:00</modified><num_iid>2342344</num_iid><cid>123456</cid></orders><buyer_flag>1</buyer_flag><seller_flag>1</seller_flag><num_iid>3424234</num_iid><promotion>hello world</promotion><promotion_details><id>22331764490705</id><promotion_name>满就减钱</promotion_name><discount_fee>10.00</discount_fee></promotion_details><invoice_name>淘宝</invoice_name></trade></trades></trades_sold_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:buyer_nick</code>
<desc>用户不存在【***】</desc>
<solution>通过简单的判断可以减少此类错误：排除特殊字符的昵称，如包含空格，冒号之类的昵称或排除字符长度小于5个，大于20个的</solution>
</error>
<error>
<code>isp.remote-service-timeout</code>
<desc>API调用远程服务超时</desc>
<solution>1. 每次返回50条以下，时间跨度小于半个小时 2. 避开交易高峰期上午9:30-11:00，下午14:00-17:00，晚上20:00-22:30 3.使用增量API（taobao.increment.trades.get）可以减少甚至避免超时问题</solution>
</error>
</errors>
<faqs>
<faq>
<question>taobao.trades.sold.get在获取订单时有两个金额：totalFee和payment，它俩有什么区别?</question>
<answer>1.payment买家实际支付给卖家的金额,包含运费和折扣, 
2.totalFee商品总金额=单价×数量,不包含运费和折扣。</answer>
</faq>
<faq>
<question>taobao.trades.sold.get如何返回收货人订单地址?</question>
<answer>这个接口是无法返回收货人地址，你通过这个接口查询到要发货的交易ID，用taobao.trade.fullinfo.get得到单笔交易的详细信息，其中就有收货人的地址和电话等详细信息。</answer>
</faq>
</faqs>
</api>
<api>
<cat>交易API</cat>
<name>taobao.trades.sold.increment.get</name>
<cname>搜索当前会话用户作为卖家已卖出的增量交易数据</cname>
<authorize>必须用户授权</authorize>
<desc>1. 搜索当前会话用户作为卖家已卖出的增量交易数据 
2. 只能查询时间跨度为一天的增量交易记录 
3. 返回数据结果为创建订单时间的倒序 
4. 只能查询3个月内修改过的数据，超过这个时间的数据无法通过taobao.trade.fullinfo.get获取详情。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。目前支持有：
1.Trade中可以指定返回的fields:seller_nick, buyer_nick, title, type, created, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, pic_path, num_iid, num, price, cod_fee, cod_status, shipping_type, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone 
2.Order中可以指定返回fields：
orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.sku_properties_name, orders.item_meal_name, orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type 
3.fields：orders（返回Order的所有内容）</desc>
<sample>tid,type,status,modified,orders.title,orders.oid</sample>
<default/>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>查询修改开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>查询修改结束时间，必须大于修改开始时间(修改时间跨度不能大于一天)。格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-02 00:00:00</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易状态，默认查询所有交易状态的数据，除了默认值外每次只能查询一种状态。 可选值 TRADE_NO_CREATE_PAY(没有创建支付宝交易) WAIT_BUYER_PAY(等待买家付款) WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) TRADE_BUYER_SIGNED(买家已签收,货到付款专用) TRADE_FINISHED(交易成功) TRADE_CLOSED(交易关闭) TRADE_CLOSED_BY_TAOBAO(交易被淘宝关闭) ALL_WAIT_PAY(包含：WAIT_BUYER_PAY、TRADE_NO_CREATE_PAY) ALL_CLOSED(包含：TRADE_CLOSED、TRADE_CLOSED_BY_TAOBAO)</desc>
<sample>TRADE_NO_CREATE_PAY</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易类型列表，同时查询多种交易类型可用逗号分隔。默认同时查询guarantee_trade, auto_delivery, ec, cod的4种交易类型的数据 。可选值： fixed(一口价) auction(拍卖) guarantee_trade(一口价、拍卖) independent_simple_trade(旺店入门版交易) independent_shop_trade(旺店标准版交易) auto_delivery(自动发货) ec(直冲) cod(货到付款) fenxiao(分销) game_equipment(游戏装备) shopex_trade(ShopEX交易) netcn_trade(万网交易) external_trade(统一外部交易) instant_trade (即时到账), b2c_cod(大商家货到付款)</desc>
<sample>fixed</sample>
<default/>
</param>
<param>
<name>tag</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家对交易的自定义分组标签，目前可选值为：time_card（点卡软件代充），fee_card（话费软件代充）</desc>
<sample>time_card</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数;默认值:1</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围：1~100，默认值：40。建议使用40可以提高成功率，减少超时数量。</desc>
<sample>40</sample>
<default/>
</param>
<param>
<name>use_has_next</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否启用has_next的分页方式，如果指定true,则返回的结果中不包含总记录数，但是会新增一个是否存在下一页的的字段，通过此种方式获取增量交易，成功率在原有的基础上有80%的提升。</desc>
<sample>true</sample>
<default>false</default>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>false</required>
<sample>100</sample>
<desc>搜索到的交易信息总数</desc>
</param>
<param>
<name>trades</name>
<type>Trade</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索到的交易信息列表，返回的Trade和Order中包含的具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>has_next</name>
<type>Boolean</type>
<level>Basic</level>
<required>false</required>
<sample>true</sample>
<desc>是否存在下一页</desc>
</param>
</response>
<sample>
<json><![CDATA[{"trades_sold_increment_get_response":{"total_results":"1","trades":{"trade":[{"buyer_obtain_point_fee":"0","iid":"c327531c3d817b25197f11aa1e3aba70","type":"fixed","end_time":"2009-11-10 17:04:10","seller_nick":"tbtest1063","created":"2009-11-03 16:58:11","buyer_nick":"tbtest1064","tid":"2231939034","shipping_type":"express","discount_fee":"0.00","status":"TRADE_CLOSED_BY_TAOBAO","modified":"2009-11-10 17:05:24","received_payment":"0.00","price":"100.00","total_fee":"100.00","orders":{"order":[{"iid":"c327531c3d817b25197f11aa1e3aba70","adjust_fee":"0.00","title":"闲林山水","sku_properties_name":"颜色:天蓝色;尺码:S","refund_status":"NO_REFUND","sku_id":"5893626","oid":"2231939034","discount_fee":"0.00","payment":"105.00","status":"TRADE_CLOSED_BY_TAOBAO","num":"1","total_fee":"100.00","price":"100.00"}]},"buyer_rate":"false","seller_rate":"false","adjust_fee":"0.00","cod_fee":"0.00","title":"tbtest1063的店铺","point_fee":"0","post_fee":"5.00","sid":"2231939034","payment":"105.00","real_point_fee":"0","num":"1"}]}}}]]></json>
<xml><![CDATA[<trades_sold_increment_get_response><total_results>1</total_results><trades list="true"><trade><buyer_obtain_point_fee>0</buyer_obtain_point_fee><iid>c327531c3d817b25197f11aa1e3aba70</iid><type>fixed</type><end_time>2009-11-10 17:04:10</end_time><seller_nick>tbtest1063</seller_nick><created>2009-11-03 16:58:11</created><buyer_nick>tbtest1064</buyer_nick><tid>2231939034</tid><shipping_type>express</shipping_type><discount_fee>0.00</discount_fee><status>TRADE_CLOSED_BY_TAOBAO</status><modified>2009-11-10 17:05:24</modified><received_payment>0.00</received_payment><price>100.00</price><total_fee>100.00</total_fee><orders list="true"><order><iid>c327531c3d817b25197f11aa1e3aba70</iid><adjust_fee>0.00</adjust_fee><title>闲林山水</title><sku_properties_name>颜色:天蓝色;尺码:S</sku_properties_name><refund_status>NO_REFUND</refund_status><sku_id>5893626</sku_id><oid>2231939034</oid><discount_fee>0.00</discount_fee><payment>105.00</payment><status>TRADE_CLOSED_BY_TAOBAO</status><num>1</num><total_fee>100.00</total_fee><price>100.00</price></order></orders><buyer_rate>false</buyer_rate><seller_rate>false</seller_rate><adjust_fee>0.00</adjust_fee><cod_fee>0.00</cod_fee><title>tbtest1063的店铺</title><point_fee>0</point_fee><post_fee>5.00</post_fee><sid>2231939034</sid><payment>105.00</payment><real_point_fee>0</real_point_fee><num>1</num></trade></trades></trades_sold_increment_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:start_modified-and-end_modified</code>
<desc>查询条件(修改时间)跨度不能超过一天</desc>
<solution>只能查询3个月内并且跨度为一天的修改过的数据</solution>
</error>
</errors>
<faqs>
<faq>
<question>如何获取需要发货的订单?</question>
<answer>可以根据查询修改开始时间(start_modified)和查询修改结束时间(end_modified)以及交易状态来查询taobao.trades.sold.get获取某个时间段内需要用户发货的订单。</answer>
</faq>
</faqs>
</api>
<api>
<cat>评价API</cat>
<name>taobao.traderate.add</name>
<cname>新增单个评价</cname>
<authorize>必须用户授权</authorize>
<desc>新增单个评价(&lt;font color="red"&gt;注：在评价之前需要对订单成功的时间进行判定（end_time）,如果超过15天，不能再通过该接口进行评价&lt;/font&gt;)</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易ID</desc>
<sample>1234</sample>
<default/>
</param>
<param>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>子订单ID</desc>
<sample>1234</sample>
<default/>
</param>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>评价结果,可选值:good(好评),neutral(中评),bad(差评)</desc>
<sample>neutral</sample>
<default/>
</param>
<param>
<name>role</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>评价者角色,可选值:seller(卖家),buyer(买家)</desc>
<sample>seller</sample>
<default/>
</param>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容</desc>
<sample>很好,很快</sample>
<default/>
</param>
<param>
<name>anony</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否匿名,卖家评不能匿名。可选值:true(匿名),false(非匿名)。注意：输入非可选值将会自动转为false</desc>
<sample>true</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade_rate</name>
<type>TradeRate</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回tid、oid、create</desc>
</param>
</response>
<sample>
<json><![CDATA[{"traderate_add_response":{"trade_rate":{"created":"2010-05-11 09:13:35","oid":22327539150543,"tid":22327539140543}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><traderate_add_response><trade_rate><created>2010-05-11 10:16:05</created><oid>22327537970543</oid><tid>22327537970543</tid></trade_rate></traderate_add_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.rate-service-error:-928</code>
<desc>不能对父子订单中的父订单进行评价</desc>
<solution>通过获取交易信息接口判断订单是父订单还是子订单之后再进行评价，判断的方法是tid=oid则对tid进行评价即可，tid!=oid则对oid进行评价</solution>
</error>
<error>
<code>isv.tc-service-error:-930</code>
<desc>不能对商城订单进行评价</desc>
<solution>前端注名这个规则或者评价前用taobao.user.get这个接口获取用户类型，如果是B商家则不予以评价</solution>
</error>
<error>
<code>isv.rate-service-error:-1020</code>
<desc>已评价或已过评价有效期</desc>
<solution>通过Order中的buyer_rate和seller_rate来决定是否需要对订单进行评价；通过Trade中的end_time来判断评价时间是否已经超过15天期限</solution>
</error>
<error>
<code>isv.rate-service-error:-931</code>
<desc>交易订单不存在</desc>
<solution>评价之前请通过交易的创建时间进行简单的判断，如果是3个月前创建的订单，不需要对其进行评价了</solution>
</error>
<error>
<code>isv.rate-service-error:-929</code>
<desc>父订单号不正确</desc>
<solution>在调用评价接口前需要确保oid是属于tid的一个子订单</solution>
</error>
<error>
<code>isv.tc-service-error:0</code>
<desc>参数错误或评价已过评价有效期</desc>
<solution>检查评价是否包含URL等参数（可以通过淘宝后台进行测试）或通过Trade中的end_time来判断评价时间是否已经超过15天期限</solution>
</error>
</errors>
</api>
<api>
<cat>评价API</cat>
<name>taobao.traderate.list.add</name>
<cname>针对父子订单新增批量评价</cname>
<authorize>必须用户授权</authorize>
<desc>针对父子订单新增批量评价(&lt;font color="red"&gt;注：在评价之前需要对订单成功的时间进行判定（end_time）,如果超过15天，不用再通过该接口进行评价&lt;/font&gt;)</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易ID</desc>
<sample>1234</sample>
<default/>
</param>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>评价结果。可选值:good(好评),neutral(中评),bad(差评)</desc>
<sample>bad</sample>
<default/>
</param>
<param>
<name>role</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>评价者角色。可选值:seller(卖家),buyer(买家)</desc>
<sample>buyer</sample>
<default/>
</param>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>评价内容,最大长度: 500个汉字 .注意：当评价结果为good时就不用输入评价内容.评价内容为neutral/bad的时候需要输入评价内容</desc>
<sample>很烂</sample>
<default/>
</param>
<param>
<name>anony</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否匿名，卖家评不能匿名。可选值:true(匿名),false(非匿名)。 注意：输入非可选值将会自动转为false；</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>oid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>子订单ID</desc>
<sample>12</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade_rate</name>
<type>TradeRate</type>
<level>Object</level>
<required>false</required>
<sample/>
<desc>返回的评论的信息，仅返回tid和created字段</desc>
</param>
</response>
<sample>
<json><![CDATA[{"traderate_list_add_response":{"trade_rate":{"created":"2010-05-11 08:30:15","tid":22327539140543}}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="utf-8"?><traderate_list_add_response><trade_rate><created>2010-05-11 10:16:28</created><tid>22327539140543</tid></trade_rate></traderate_list_add_response><!--vm127.sqa-->]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:tid</code>
<desc>参数：tid无效</desc>
<solution>评价之前请通过交易的创建时间进行简单的判断，如果是3个月前创建的订单，不需要对其进行评价了</solution>
</error>
<error>
<code>isv.tc-service-error:0</code>
<desc>参数错误或评价已过有效期</desc>
<solution>1，评价内容包含非法字符（网址，JS脚本，关键词等）
2，评价已过期，这种情况下加一个15天的有效期限制，也就是只对交易成功之后15天以内未评价的订单进行评价</solution>
</error>
<error>
<code>isv.tc-service-error:-1020</code>
<desc>已评价或已过评价有效期</desc>
<solution>加一个15天的有效期限制，也就是只对交易成功之后15天以内未评价的订单进行评价</solution>
</error>
<error>
<code>isv.tc-service-error:-930</code>
<desc>不能对商城订单进行评价</desc>
<solution>前端注名这个规则或者评价前用taobao.user.get这个接口获取用户类型，如果是B商家则不予以评价</solution>
</error>
<error>
<code>isv.rate-service-error:-923</code>
<desc>用户与交易不一致</desc>
<solution>调用之前请对SessionKey所绑定的用户和交易所属的用户进行匹配，只能一致的情况下才能进行调用</solution>
</error>
</errors>
</api>
<api>
<cat>评价API</cat>
<name>taobao.traderates.get</name>
<cname>搜索评价信息</cname>
<authorize>必须用户授权</authorize>
<desc>搜索评价信息。通过此API，最多只能获取到180天内的评价记录</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：TradeRate 结构中的所有字段，多个字段之间用“,”分隔</desc>
<sample>tid,oid,role,nick,result,created,rated_nick,item_title,item_price,content,reply</sample>
<default/>
</param>
<param>
<name>rate_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>评价类型。可选值:get(得到),give(给出)</desc>
<sample>get</sample>
<default/>
</param>
<param>
<name>role</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>评价者角色。可选值:seller(卖家),buyer(买家)</desc>
<sample>seller</sample>
<default/>
</param>
<param>
<name>result</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>评价结果。可选值:good(好评),neutral(中评),bad(差评)</desc>
<sample>good</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数; 默认值:40;最大值:200</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>peer_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>评价对方昵称</desc>
<sample>helloworld</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>评价开始时间（最长能获取180天以前的评价数据）</desc>
<sample>2011-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>评价结束时间</desc>
<sample>2011-01-02 00:00:00</sample>
<default/>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>交易订单id，可以是父订单id号，也可以是子订单id号</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>trade_rates</name>
<type>TradeRate</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>评价列表。返回的TradeRate包含的具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>50</sample>
<desc>搜索到的评价总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"traderates_get_response":{"trade_rates":{"trade_rate":[{"content":"好评！","created":"2010-05-20 22:00:37","item_price":"1.2","item_title":"【24小时自动电脑充值】海南移动快充1元67.la#AAA","nick":"easesou","oid":37750250222274,"rated_nick":"匿名","result":"good","role":"seller","tid":37750250222274},{"content":"好评！","created":"2010-05-20 22:00:37","item_price":"1.2","item_title":"【24小时自动电脑充值】湖北移动快充1元67.la#AAA","nick":"easesou","oid":37749751692274,"rated_nick":"匿名","result":"good","role":"seller","tid":37749751692274}]},"total_results":12}}]]></json>
<xml><![CDATA[<?xml version="1.0"encoding="UTF-16"standalone="no"?><traderates_get_response><trade_rates list="true"><trade_rate><content>好评！</content><created>2010-05-20 22:00:37</created><item_price>1.2</item_price><item_title>【24小时自动电脑充值】海南移动快充1元67.la#AAA</item_title><nick>easesou</nick><oid>37750250222274</oid><rated_nick>匿名</rated_nick><result>good</result><role>seller</role><tid>37750250222274</tid></trade_rate><trade_rate><content>好评！</content><created>2010-05-20 22:00:37</created><item_price>1.2</item_price><item_title>【24小时自动电脑充值】湖北移动快充1元67.la#AAA</item_title><nick>easesou</nick><oid>37749751692274</oid><rated_nick>匿名</rated_nick><result>good</result><role>seller</role><tid>37749751692274</tid></trade_rate></trade_rates><total_results>12</total_results></traderates_get_response>]]></xml>
</sample>
</api>
<api>
<cat>物流API</cat>
<name>taobao.areas.get</name>
<cname>查询地址区域</cname>
<authorize>不需用户授权</authorize>
<desc>查询标准地址区域代码信息 参考：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:Area 结构中的所有字段;多个字段之间用","分隔.如:id,type,name,parent_id,zip.</desc>
<sample>id,type,name</sample>
<default/>
</param>
</request>
<response>
<param>
<name>areas</name>
<type>Area</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>地址区域信息列表.返回的Area包含的具体信息为入参fields请求的字段信息.</desc>
</param>
</response>
<sample>
<json><![CDATA[{"areas_get_response":{"areas":{"area":[{"id":255,"type":1,"name":"北京市","parent_id":141141,"zip":"421403"}]}}}]]></json>
<xml><![CDATA[<areas_get_response><areas list="true"><area><id>255</id><type>1</type><name>北京市</name><parent_id>141141</parent_id><zip>421403</zip></area></areas></areas_get_response>]]></xml>
</sample>
</api>
<api>
<cat>物流API</cat>
<name>taobao.delivery.cod.send</name>
<cname>货到付款(cod)发货处理</cname>
<authorize>必须用户授权</authorize>
<desc>用户调用该接口可实现cod发货</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易ID</desc>
<sample>5227272</sample>
<default/>
</param>
<param>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>发货类型.cod(货到付款)</desc>
<sample>cod</sample>
<default/>
</param>
<param>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logisticcompanies.get  获取.</desc>
<sample>POST</sample>
<default/>
</param>
<param>
<name>seller_name</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家姓名</desc>
<sample>zhangsan</sample>
<default/>
</param>
<param>
<name>seller_area_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家所在地国家公布的标准地区码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm  或者调用 taobao.areas.get 获取</desc>
<sample>110000</sample>
<default/>
</param>
<param>
<name>seller_address</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家地址(详细地址).如:XXX街道XXX门牌,省市区不需要提供.&lt;br&gt;
&lt;font color="red"&gt;
校验规则：&lt;br&gt;
1.4-60字符(字母\数字\汉字)&lt;br&gt;
2.不能全部数字&lt;br&gt;
3.不能全部字母&lt;br&gt;
&lt;/font&gt;</desc>
<sample>华星路99号</sample>
<default/>
</param>
<param>
<name>seller_zip</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家邮编</desc>
<sample>421405</sample>
<default/>
</param>
<param>
<name>seller_phone</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>卖家固定电话.包含区号,电话,分机号,中间用 " – "; 卖家固定电话和卖家手机号码,必须填写一个.&lt;br&gt;
&lt;font color="red"&gt;校验规则：&lt;br&gt;
1.字符不能全部相同&lt;br&gt;
2.长度：5-24位&lt;br&gt;
3.只能包含数字和横杠‘-’&lt;/font&gt;</desc>
<sample>0571-88155188</sample>
<default/>
</param>
<param>
<name>seller_mobile</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>卖家手机号码&lt;br&gt;
&lt;font color="red"&gt;校验规则：&lt;br&gt;
1.8-16位数字&lt;br&gt;
2.不能数字全部相同&lt;br&gt;
3.不能全为字符格式&lt;/font&gt;</desc>
<sample>1345699875</sample>
<default/>
</param>
<param>
<name>fetcher_name</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>联系人名称</desc>
<sample>zhangsan</sample>
<default/>
</param>
<param>
<name>fetcher_area_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>取货地国家公布的标准地区码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm  或者调用 taobao.areas.get 获取</desc>
<sample>110000</sample>
<default/>
</param>
<param>
<name>fetcher_address</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>物流公司取货地址.XXX街道XXX门牌,省市区不需要提供.目的在于让物流公司能清楚的知道在哪取货。&lt;br&gt;
&lt;font color="red"&gt;
校验规则：&lt;br&gt;
1.4-60字符(字母\数字\汉字)&lt;br&gt;
2.不能全部数字&lt;br&gt;
3.不能全部字母&lt;br&gt;
&lt;/font&gt;</desc>
<sample>华星路99号</sample>
<default/>
</param>
<param>
<name>fetcher_zip</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>取货地邮编</desc>
<sample>421542</sample>
<default/>
</param>
<param>
<name>fetcher_phone</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>取货地固定电话.包含区号,电话,分机号,中间用 " – "; 取货地固定电话和取货地手机号码,必须填写一个.</desc>
<sample>0571-88155188</sample>
<default/>
</param>
<param>
<name>fetcher_mobile</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>取货地手机号码</desc>
<sample>1345999815</sample>
<default/>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_code中传入的代码非淘宝官方物流合作公司，此处运单号不校验。</desc>
<sample>5257222</sample>
<default/>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>只返回is_success：是否成功。</desc>
</param>
</response>
<sample>
<json><![CDATA[{"delivery_cod_send_response":{"shipping":{"is_success":true}}}]]></json>
<xml><![CDATA[<delivery_cod_send_response><shipping><is_success>true</is_success></shipping></delivery_cod_send_response>]]></xml>
</sample>
</api>
<api>
<cat>物流API</cat>
<name>taobao.delivery.send</name>
<cname>发货处理</cname>
<authorize>必须用户授权</authorize>
<desc>对买家已付款状态的交易进行发货操作。(注：该API不支持货到付款订单发货)</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易ID</desc>
<sample>255582</sample>
<default/>
</param>
<param>
<name>order_type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>发货类型. 可选( delivery_needed(物流订单发货),virtual_goods(虚拟物品发货). ) 注:选择virtual_goods类型进行发货的话下面的参数可以不需填写。如果选择delivery_needed 则company_code,out_sid,seller_name,seller_area_id,seller_address,seller_zip,seller_phone,seller_mobile,memo必须要填写</desc>
<sample>delivery_needed</sample>
<default/>
</param>
<param>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运单号.具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_code中传入的代码非淘宝官方物流合作公司，此处运单号不校验。如果orderType为delivery_needed，则必传</desc>
<sample>5257222</sample>
<default/>
</param>
<param>
<name>company_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logistics.companies.get 获取。如传入的代码非淘宝官方物流合作公司，默认是“其他”物流的方式，在淘宝不显示物流具体进度，故传入需谨慎。如果orderType为delivery_needed，则必传</desc>
<sample>POST</sample>
<default/>
</param>
<param>
<name>seller_name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家姓名。如果orderType为delivery_needed。&lt;font color=red&gt;注：最长支持15个字符&lt;/font color=red&gt;</desc>
<sample>DDDD</sample>
<default/>
</param>
<param>
<name>seller_area_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家所在地国家公布的标准地区码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm  或者调用 taobao.areas.get 获取。如果orderType为delivery_needed，则必传</desc>
<sample>55255</sample>
<default/>
</param>
<param>
<name>seller_address</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家地址(详细地址).如:XXX街道XXX门牌,省市区不需要提供。如果orderType为delivery_needed，则必传.&lt;br&gt;
&lt;font color="red"&gt;
校验规则：&lt;br&gt;
1.4-60字符(字母\数字\汉字)&lt;br&gt;
2.不能全部数字&lt;br&gt;
3.不能全部字母&lt;br&gt;
&lt;/font&gt;</desc>
<sample>XXX街道XXX门牌</sample>
<default/>
</param>
<param>
<name>seller_zip</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家邮编。如果orderType为delivery_needed，则必传</desc>
<sample>324400</sample>
<default/>
</param>
<param>
<name>seller_phone</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家固定电话.包含区号,电话,分机号,中间用 " – "; 卖家固定电话和卖家手机号码,必须填写一个.&lt;br&gt;
&lt;font color="red"&gt;校验规则：&lt;br&gt;
1.字符不能全部相同&lt;br&gt;
2.长度：5-24位&lt;br&gt;
3.只能包含数字和横杠‘-’&lt;/font&gt;</desc>
<sample>0571-88155642</sample>
<default/>
</param>
<param>
<name>seller_mobile</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家手机号码，必须由8到16位数字构成&lt;br&gt;
&lt;font color="red"&gt;校验规则：&lt;br&gt;
1.8-16位数字&lt;br&gt;
2.不能数字全部相同&lt;br&gt;
3.不能全为字符格式&lt;/font&gt;</desc>
<sample>145623587</sample>
<default/>
</param>
<param>
<name>memo</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家备注.最大长度为250个字符。如果orderType为delivery_needed，则必传</desc>
<sample>卖家备注</sample>
<default/>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>可选</required>
<desc>返回的字段</desc>
<sample>pid,modified</sample>
<default/>
</param>
</request>
<response>
<param>
<name>shipping</name>
<type>Shipping</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>只返回is_success</desc>
</param>
</response>
<sample>
<json><![CDATA[{"delivery_send_response":{"shipping":{"is_success":true}}}]]></json>
<xml><![CDATA[<delivery_send_response><shipping><is_success>true</is_success></shipping></delivery_send_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.logistics-delivery-service-error:B01</code>
<desc>物流订单不存在</desc>
<solution>调用发货接口前要先判断tid是不是属于自身的tid，并且需要判断tid是否存在，最好用搜索出来的tid列表里面的数据传入。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B02</code>
<desc>没有权限进行发货</desc>
<solution>在发货前要判断好订单的状态，只有交易存在、属于自己、并且是等待卖家发货的才能发，其余的状态无需调用这个接口。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B04</code>
<desc>订单状态不对</desc>
<solution>1.遇到isv开头的错误不要在程序重试；
2.建议在发货前先调用交易API如：taobao.trade.fullinfo.get来查询这个订单的状态，根据订单状态再做相应的处理，避免状态为已发货订单进行重复发货</solution>
</error>
<error>
<code>isv.missing-parameter:seller_name</code>
<desc>缺少必要的参数:seller_name</desc>
<solution>在前端对是否传入seller_name进行校验，未传入seller_name不允许发货。</solution>
</error>
<error>
<code>isv.missing-parameter:out_sid</code>
<desc>缺少必要的参数:out_sid</desc>
<solution>在前端对是否传入out_sid进行校验，未传入out_sid不允许发货。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:P09</code>
<desc>货物描述太长</desc>
<solution>在前端对输入备注的字符长度进行校验，超过规定的长度（最大长度为250个字符）不允许发货</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B73</code>
<desc>发货信息的固定电话号码格式错误</desc>
<solution>卖家固定电话包含区号,电话号,分机号,中间用"–"隔开，没有隔开或者用错误的符号隔开都是不正确的格式。参照此，在前端做好校验，未传入正确的格式不允许发货。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B70</code>
<desc>发货信息的手机号码格式错误</desc>
<solution>在前端对手机号码格式做好校验，手机号码必须由8到16位数字构成，不是正确的格式不允许其发货。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B53</code>
<desc>没有发货类型，不能发货</desc>
<solution>在前端对发货类型是否传入做好校验，没有传入order_type的不允许其发货。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B56</code>
<desc>没有选择物流公司</desc>
<solution>在前端对是否选择物流公司(company_code)做好校验，没有选择company_code的不允许其发货。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B59</code>
<desc>运单号为空</desc>
<solution>在前端对是否填写运单号(out_sid)进行校验，没有传入out_sid不允许其发货。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B64</code>
<desc>发货信息的邮编格式错误</desc>
<solution>在前端对邮编格式做好校验，邮政编码为6位数字，传入错误的邮政编码不允许其发货。</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B61</code>
<desc>发货信息的市县级行政区不存在</desc>
<solution>发货地址的市县级行政区不能让卖家自己填写，应该提供下拉框的形式供卖家选择，防止传入不正确的市县级行政区</solution>
</error>
<error>
<code>isv.logistics-delivery-service-error:B60</code>
<desc>运单号不符合规则</desc>
<solution>每个物流公司都有特定的运单号规则，参照该运单号规则在前端对运单号是否符合对应的规则进行校验，不符合规则的不允许其发货。</solution>
</error>
<error>
<code>isv.missing-parameter:company_code</code>
<desc>缺少必要的参数:company_code</desc>
<solution>自提的或者货运的没有快递单号的订单，建议order_type字段选择virtual_goods(虚拟物品发货)方式进行发货，就不需要传company_code这个字段了。</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>参数无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
</errors>
<faqs>
<faq>
<question>发货时seller_area_id如何取到?</question>
<answer>通过taobao.areas.get获取 或者查看国家公布的行政区域码表：http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm</answer>
</faq>
<faq>
<question>物流公司代码和运单号如何取到?</question>
<answer>通过taobao.logisticcompanies.get 获取物流公司代码,运单号通过物流公司发货时返回给你运单号(例如投送快递时,快递公司会返回运送物品的运单号)</answer>
</faq>
<faq>
<question>调用发货API成功，再次调用还是会返回成功，更换了参数信息还是会返回成功?</question>
<answer>如果调用发货API发货成功后。如果还对已经发货的交易id来进行发货的话，会一直返回成功信息。即便是更换了参数信息也不会修改之前发货的记录.</answer>
</faq>
</faqs>
</api>
<api>
<cat>物流API</cat>
<name>taobao.logistics.companies.get</name>
<cname>查询物流公司信息</cname>
<authorize>不需用户授权</authorize>
<desc>查询淘宝网合作的物流公司信息，用于发货接口。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值:LogisticCompany 结构中的所有字段;多个字段间用","逗号隔开. 
如:id,code,name</desc>
<sample>id,code,name</sample>
<default/>
</param>
<param>
<name>is_recommended</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否查询推荐物流公司.可选值:true,false.如果不提供此参数,将会返回所有支持电话联系的物流公司.</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>order_mode</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>推荐物流公司的下单方式.可选值:offline(电话联系/自己联系),online(在线下单),all(即电话联系又在线下单). 此参数仅仅用于is_recommended 为ture时。就是说对于推荐物流公司才可用.如果不选择此参数将会返回推荐物流中支持电话联系的物流公司.</desc>
<sample>offline</sample>
<default/>
</param>
</request>
<response>
<param>
<name>logistics_companies</name>
<type>LogisticsCompany</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>物流公司信息。返回的LogisticCompany包含的具体信息为入参fields请求的字段信息。</desc>
</param>
</response>
<sample>
<json><![CDATA[{"logistics_companies_get_response":{"logistics_companies":{"logistics_company":[{"id":44555,"code":"AB15555","name":"pingpaiming"}]}}}]]></json>
<xml><![CDATA[<logistics_companies_get_response><logistics_companies><logistics_company><id>44555</id><code>AB15555</code><name>pingpaiming</name></logistics_company></logistic_companies></logistics_companies_get_response>]]></xml>
</sample>
</api>
<api>
<cat>物流API</cat>
<name>taobao.logistics.orders.detail.get</name>
<cname>批量查询物流订单,返回详细信息</cname>
<authorize>必须用户授权</authorize>
<desc>查询物流订单的详细信息，设计用户隐私字段。（注：该API主要是提供给卖家查询物流订单使用，买家查询物流订单，建议使用taobao.logistics.trace.search）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:Shipping 物流数据结构中所有字段.fileds中可以指定返回以上任意一个或者多个字段,以","分隔.</desc>
<sample>tid,seller_nick,buyer_nick,item_title,receiver_location,status,type,company_name,created,modified</sample>
<default/>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>交易ID.如果加入tid参数的话,不用传其他的参数,但是仅会返回一条物流订单信息.</desc>
<sample>255222</sample>
<default/>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>买家昵称</desc>
<sample>zhangsan</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>物流状态.可查看数据结构 Shipping 中的status字段.</desc>
<sample>CREATED</sample>
<default/>
</param>
<param>
<name>seller_confirm</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家是否发货.可选值:yes(是),no(否).如:yes.</desc>
<sample>yes</sample>
<default/>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>收货人姓名</desc>
<sample>name</sample>
<default/>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>创建时间开始.格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>创建时间结束.格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer</desc>
<sample>buyer</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post</desc>
<sample>post</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码.该字段没传 或 值&lt;1 ,则默认page_no为1</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数.该字段没传 或 值&lt;1 ，则默认page_size为40</desc>
<sample>40</sample>
<default>40</default>
</param>
</request>
<response>
<param>
<name>shippings</name>
<type>Shipping</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>获取的物流订单详情列表.返回的Shipping包含的具体信息为入参fields请求的字段信息.</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1</sample>
<desc>搜索到的物流订单列表总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"logistics_orders_detail_get_response":{"shippings":{"shipping":[{"tid":125555221,"seller_nick":"huzh","buyer_nick":"ddd","delivery_start":"2000-01-01 00:00:00","delivery_end":"2000-01-01 00:00:00","out_sid":"1455858255","item_title":"连衣花裙","receiver_name":"周锦","receiver_phone":057188155188,"receiver_mobile":1384567842,"location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"},"status":"CREATED","type":"free","freight_payer":"buyer","seller_confirm":"yes","company_name":"sto","is_success":true}]},"total_results":1}}]]></json>
<xml><![CDATA[<logistics_orders_detail_get_response><shippings list="true"><shipping><tid>125555221</tid><seller_nick>huzh</seller_nick><buyer_nick>ddd</buyer_nick><delivery_start>2000-01-01 00:00:00</delivery_start><delivery_end>2000-01-01 00:00:00</delivery_end><out_sid>1455858255</out_sid><item_title>连衣花裙</item_title><receiver_name>周锦</receiver_name><receiver_phone>057188155188</receiver_phone><receiver_mobile>1384567842</receiver_mobile><location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></location><status>CREATED</status><type>free</type><freight_payer>buyer</freight_payer><seller_confirm>yes</seller_confirm><company_name>sto</company_name><is_success>true</is_success></shipping></shippings><total_results>1</total_results></logistics_orders_detail_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:trade_id:P07</code>
<desc>参数：trade_id:P07无效，格式不对、非法值、越界等</desc>
<solution>在查询物流详情之前要对交易状态进行判断，没有发货的就不要再查询物流详情</solution>
</error>
</errors>
</api>
<api>
<cat>物流API</cat>
<name>taobao.logistics.orders.get</name>
<cname>批量查询物流订单</cname>
<authorize>必须用户授权</authorize>
<desc>批量查询物流订单。（注：该API主要是提供给卖家查询物流订单使用，买家查询物流订单，建议使用taobao.logistics.trace.search）</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:Shipping 物流数据结构中的以下字段:  
tid,seller_nick,buyer_nick,delivery_start, delivery_end,out_sid,item_title,receiver_name, created,modified,status,type,freight_payer,seller_confirm,company_name；多个字段之间用","分隔。如tid,seller_nick,buyer_nick,delivery_start。</desc>
<sample>tid,seller_nick,buyer_nick,delivery_start</sample>
<default/>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>交易ID.如果加入tid参数的话,不用传其他的参数,但是仅会返回一条物流订单信息.</desc>
<sample>112312323</sample>
<default/>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>买家昵称</desc>
<sample>jayzhou</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>物流状态.查看数据结构 Shipping 中的status字段.</desc>
<sample>CREATED</sample>
<default/>
</param>
<param>
<name>seller_confirm</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家是否发货.可选值:yes(是),no(否).如:yes</desc>
<sample>yes</sample>
<default/>
</param>
<param>
<name>receiver_name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>收货人姓名</desc>
<sample>王刚</sample>
<default/>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>创建时间开始</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>创建时间结束</desc>
<sample>2000-01-02 00:00:00</sample>
<default/>
</param>
<param>
<name>freight_payer</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>谁承担运费.可选值:buyer(买家),seller(卖家).如:buyer</desc>
<sample>buyer</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>物流方式.可选值:post(平邮),express(快递),ems(EMS).如:post</desc>
<sample>post</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码.该字段没传 或 值&lt;1 ,则默认page_no为1</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数.该字段没传 或 值&lt;1 ,则默认page_size为40</desc>
<sample>40</sample>
<default>40</default>
</param>
</request>
<response>
<param>
<name>shippings</name>
<type>Shipping</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>获取的物流订单详情列表  
返回的Shipping包含的具体信息为入参fields请求的字段信息</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>100</sample>
<desc>搜索到的物流订单列表总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"logistics_orders_get_response":{"shippings":{"shipping":[{"tid":125555221,"seller_nick":"huzh","buyer_nick":"ddd","delivery_start":"2000-01-01 00:00:00","delivery_end":"2000-01-01 00:00:00","out_sid":"1455858255","item_title":"连衣花裙","receiver_name":"周锦","receiver_phone":057188155188,"receiver_mobile":1384567842,"receiver_location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"},"status":"CREATED","type":"free","freight_payer":"buyer","seller_confirm":"yes","company_name":"sto","is_success":true}]},"total_results":"1"}}]]></json>
<xml><![CDATA[<logistics_orders_get_response><shippings list="true"><shipping><tid>125555221</tid><seller_nick>huzh</seller_nick><buyer_nick>ddd</buyer_nick><delivery_start>2000-01-01 00:00:00</delivery_start><delivery_end>2000-01-01 00:00:00</delivery_end><out_sid>1455858255</out_sid><item_title>连衣花裙</item_title><receiver_name>周锦</receiver_name><receiver_phone>057188155188</receiver_phone><receiver_mobile>1384567842</receiver_mobile><receiver_location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></receiver_location><status>CREATED</status><type>free</type><freight_payer>buyer</freight_payer><seller_confirm>yes</seller_confirm><company_name>sto</company_name><is_success>true</is_success></shipping></shippings><total_results>1</total_results></logistics_orders_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:trade_id:P07</code>
<desc>参数：trade_id:P07无效，格式不对、非法值、越界等</desc>
<solution>1. 在调用订单获取数据的时候，需要提前判断交易是否已经发货，对于没有发货的订单不要去取物流信息。2. 通过增量API接口同步订单的时候，不要同步3个月以外的订单，以防止取不到交易的情况。</solution>
</error>
</errors>
</api>
<api>
<cat>物流API</cat>
<name>taobao.logistics.partners.get</name>
<cname>查询物流公司信息</cname>
<authorize>不需用户授权</authorize>
<desc>查询物流公司信息（可以查询目的地可不可达情况）</desc>
<request>
<param>
<name>service_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>服务类型，根据此参数可查出提供相应服务类型的物流公司信息(物流公司状态正常)，可选值：cod(货到付款)、online(在线下单)、 offline(自己联系)、limit(限时物流)。然后再根据source_id,target_id,goods_value这三个条件来过滤物流公司. 目前输入自己联系服务类型将会返回空，因为自己联系并没有具体的服务信息，所以不会有记录。</desc>
<sample>cod</sample>
<default/>
</param>
<param>
<name>source_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>物流公司揽货地地区码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm  或者调用 taobao.areas.get 获取</desc>
<sample>110000</sample>
<default>0</default>
</param>
<param>
<name>target_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>物流公司派送地地区码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm  或者调用 taobao.areas.get 获取</desc>
<sample>110000</sample>
<default>0</default>
</param>
<param>
<name>goods_value</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>货物价格.只有当选择货到付款此参数才会有效</desc>
<sample>30</sample>
<default>0</default>
</param>
</request>
<response>
<param>
<name>logistics_partners</name>
<type>LogisticsPartner</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>物流公司信息。</desc>
</param>
</response>
<sample>
<json><![CDATA[{
    "logistics_partners_get_response": {
        "logistics_partners": {
            "logistics_partner": [{
                "cover_remark": "全境揽收",
                "uncover_remark": "乡村不派送",
                "partner": {
                    "wangwang_id": "hello123",
                    "account_no": "物流货号",
                    "full_name": "公司全称",
                    "company_id": 107,
                    "company_name": "EMS",
                    "company_code": "EMS"
                }
            }]
        }
    }
}]]></json>
<xml><![CDATA[<logistics_partners_get_response>
    <logistics_partners list="true">
        <logistics_partner>
            <cover_remark>
                全境揽收
            </cover_remark>
            <uncover_remark>
                乡村不派送
            </uncover_remark>
            <partner>
                <wangwang_id>
                    hello123
                </wangwang_id>
                <account_no>
                    物流货号
                </account_no>
                <full_name>
                    公司全称
                </full_name>
                <company_id>
                    107
                </company_id>
                <company_name>
                    EMS
                </company_name>
                <company_code>
                    EMS
                </company_code>
            </partner>
        </logistics_partner>
    </logistics_partners>
</logistics_partners_get_response>]]></xml>
</sample>
</api>
<api>
<cat>物流API</cat>
<name>taobao.logistics.trace.search</name>
<cname>物流流转信息查询</cname>
<authorize>不需用户授权</authorize>
<desc>用户根据淘宝交易号查询物流流转信息，如2010-8-10 15：23：00到达杭州集散地</desc>
<request>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>交易号</desc>
<sample>132465798</sample>
<default/>
</param>
<param>
<name>seller_nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家昵称</desc>
<sample>seller</sample>
<default/>
</param>
</request>
<response>
<param>
<name>out_sid</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>1324657987</sample>
<desc>运单号</desc>
</param>
<param>
<name>company_name</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>中通速递</sample>
<desc>物流公司名称</desc>
</param>
<param>
<name>tid</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1324657987</sample>
<desc>交易号</desc>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>对方已签收</sample>
<desc>订单的物流状态
* 等候发送给物流公司
*已提交给物流公司,等待物流公司接单
*已经确认消息接收，等待物流公司接单
*物流公司已接单
*物流公司不接单
*物流公司揽收失败
*物流公司揽收成功
*签收失败
*对方已签收
*对方拒绝签收</desc>
</param>
<param>
<name>trace_list</name>
<type>TransitStepInfo</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>流转信息列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"logistics_trace_search_response":{"out_sid":"1324657987","company_name":"中通速递","tid":1324657987,"status":"接单成功","trace_list":{"transit_step_info":[{"status_time":"2000-01-01 00:00:00","status_desc":"达到杭州物流集中地"}]}}}]]></json>
<xml><![CDATA[<logistics_trace_search_response><out_sid>1324657987</out_sid><company_name>中通速递</company_name><tid>1324657987</tid><status>接单成功</status><trace_list list="true"><transit_step_info><status_time>2000-01-01 00:00:00</status_time><status_desc>达到杭州物流集中地</status_desc></transit_step_info></trace_list></logistics_trace_search_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:tid|seller_nick</code>
<desc>无效的查询参数</desc>
<solution/>
</error>
<error>
<code>isv.seller-not-exist:seller_nick</code>
<desc>该用户不存在</desc>
<solution/>
</error>
<error>
<code>isv.order-not-exist:trade_id</code>
<desc>该订单不存在</desc>
<solution/>
</error>
<error>
<code>isv.parameters-mismatch:seller-and-order</code>
<desc>用户与订单匹配失败</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:order_not_consigned</code>
<desc>该订单尚未发货</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:order_no_mailno</code>
<desc>该订单未指定运单号</desc>
<solution/>
</error>
<error>
<code>isp.data-fetch-failed</code>
<desc>流转数据获取失败</desc>
<solution/>
</error>
<error>
<code>isp.order-data-error</code>
<desc>错误的订单数据</desc>
<solution/>
</error>
<error>
<code>isp.company-data-error</code>
<desc>错误的物流公司数据</desc>
<solution/>
</error>
<error>
<code>isp.company-not-support</code>
<desc>物流公司不支持流转查询</desc>
<solution/>
</error>
<error>
<code>isp.order-no-trace</code>
<desc>订单无流转信息</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>收费API</cat>
<name>taobao.guarantyfunds.get</name>
<cname>B商家保证金查询</cname>
<authorize>必须用户授权</authorize>
<desc>B商家保证金查询</desc>
<request>
<param>
<name>begin_date</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询保证金操作记录创建时间开始，格式为:yyyy-MM-dd</desc>
<sample>2008-01-01 10:12:34</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询保证金操作记录创建时间结束，格式为:yyyy-MM-dd</desc>
<sample>2008-01-01 10:12:34</sample>
<default/>
</param>
</request>
<response>
<param>
<name>guarantyFunds</name>
<type>GuarantyFund</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc>B商家保证金使用记录，最大返回1000条记录。  
如果不传入开始日期和结束日期，则返回所有不超过1000条的记录  
如果只传入开始日期，不传入结束日期，则返回开始日期以后创建的所有不超过1000条的记录  
如果只传入结束日期，不传入开始日期，则返回结束日期以前创建的所有不超过1000条的记录</desc>
</param>
</response>
<sample>
<json><![CDATA[{
    "guarantyfunds_get_response": {
        "guarantyFunds": {
            "guaranty_fund": [{
                "id": 123456,
                "type": 1,
                "amount": 123456,
                "balance": 500,
                "seller_id": 123456,
                "seller_nick": "商家昵称",
                "buyer_id": 123456,
                "buyer_nick": "买家昵称",
                "order_id": 35572326056594,
                "accuse_id": 123456,
                "operation_type": 5,
                "operation_action": "保证金操作动作",
                "memo": "备注",
                "creator": "保证金创建者",
                "operator": "保证金操作者",
                "created": "2000-01-01 00:00:00",
                "modified": "2000-01-01 00:00:00",
                "status": 0
            }]
        }
    }
}]]></json>
<xml><![CDATA[<guarantyfunds_get_response>
    <guarantyFunds list="true">
        <guaranty_fund>
            <id>
                123456
            </id>
            <type>
                1
            </type>
            <amount>
                123456
            </amount>
            <balance>
                500
            </balance>
            <seller_id>
                123456
            </seller_id>
            <seller_nick>
                商家昵称
            </seller_nick>
            <buyer_id>
                123456
            </buyer_id>
            <buyer_nick>
                买家昵称
            </buyer_nick>
            <order_id>
                35572326056594
            </order_id>
            <accuse_id>
                123456
            </accuse_id>
            <operation_type>
                5
            </operation_type>
            <operation_action>
                保证金操作动作
            </operation_action>
            <memo>
                备注
            </memo>
            <creator>
                保证金创建者
            </creator>
            <operator>
                保证金操作者
            </operator>
            <created>
                2000-01-01 00:00:00
            </created>
            <modified>
                2000-01-01 00:00:00
            </modified>
            <status>
                0
            </status>
        </guaranty_fund>
    </guarantyFunds>
</guarantyfunds_get_response>]]></xml>
</sample>
</api>
<api>
<cat>收费API</cat>
<name>taobao.vas.order.search</name>
<cname>订单记录导出</cname>
<authorize>不需用户授权</authorize>
<desc>用于ISV查询自己名下的应用及收费项目的订单记录</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
<sample>ts-1234</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>淘宝会员名</desc>
<sample>hz0799</sample>
<default/>
</param>
<param>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
<sample>ts-1234-1</sample>
<default/>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>订购时间起始值</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>订购时间结束值</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>biz_type</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>订单类型，1=订购 2=续费 3=升级 4=后台赠送 5=自动续费 6=订单审核后生成 空=全部</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>一页包含的记录数</desc>
<sample>20</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>页码</desc>
<sample>1</sample>
<default/>
</param>
</request>
<response>
<param>
<name>article_biz_orders</name>
<type>ArticleBizOrder</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>商品订单对象</desc>
</param>
<param>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>100</sample>
<desc>总记录数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"vas_order_search_response":{"article_biz_orders":{"article_biz_order":[{"nick":"hz0799","article_name":"阿里网店版","article_code":"ts-123","article_item_name":"阿里网店版_批量续费","item_code":"ts-123-1","gmt_create":"2000-01-01 00:00:00","order_cycle":"1月","biz_type":1,"order_id":7000011,"fee":"10","prom_fee":"5","total_pay_fee":"5"}]},"total_item":100}}]]></json>
<xml><![CDATA[<vas_order_search_response><article_biz_orders list="true"><article_biz_order><nick>hz0799</nick><article_name>阿里网店版</article_name><article_code>ts-123</article_code><article_item_name>阿里网店版_批量续费</article_item_name><item_code>ts-123-1</item_code><gmt_create>2000-01-01 00:00:00</gmt_create><order_cycle>1月</order_cycle><biz_type>1</biz_type><order_id>7000011</order_id><fee>10</fee><prom_fee>5</prom_fee><total_pay_fee>5</total_pay_fee></article_biz_order></article_biz_orders><total_item>100</total_item></vas_order_search_response>]]></xml>
</sample>
</api>
<api>
<cat>收费API</cat>
<name>taobao.vas.subsc.search</name>
<cname>订购记录导出</cname>
<authorize>不需用户授权</authorize>
<desc>用于ISV查询自己名下的应用及收费项目的订购记录</desc>
<request>
<param>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
<sample>ts-1234</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>淘宝会员名</desc>
<sample>hz0799</sample>
<default/>
</param>
<param>
<name>item_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>收费项目代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得收费项目代码</desc>
<sample>ts-1234-1</sample>
<default/>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>订购关系生成时间起始值</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>订购关系生成时间结束值</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>start_deadline</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>到期时间起始值</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_deadline</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>到期时间结束值</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>status</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>订购记录状态，1=有效 2=过期</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>autosub</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否自动续费，true=自动续费 false=非自动续费 空=全部</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>expire_notice</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否到期提醒，true=到期提醒 false=非到期提醒 空=全部</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>一页包含的记录数</desc>
<sample>20</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>页码</desc>
<sample>1</sample>
<default/>
</param>
</request>
<response>
<param>
<name>article_subs</name>
<type>ArticleSub</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>订购关系对象</desc>
</param>
<param>
<name>total_item</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>100</sample>
<desc>总记录数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"vas_subsc_search_response":{"article_subs":{"article_sub":[{"nick":"hz0799","article_name":"阿里网店版","article_code":"ts-123","article_item_name":"阿里网店版_批量续费","item_code":"ts-123-1","deadline":"2000-01-01 00:00:00","status":1,"autosub":true,"expire_notice":true}]},"total_item":100}}]]></json>
<xml><![CDATA[<vas_subsc_search_response><article_subs list="true"><article_sub><nick>hz0799</nick><article_name>阿里网店版</article_name><article_code>ts-123</article_code><article_item_name>阿里网店版_批量续费</article_item_name><item_code>ts-123-1</item_code><deadline>2000-01-01 00:00:00</deadline><status>1</status><autosub>true</autosub><expire_notice>true</expire_notice></article_sub></article_subs><total_item>100</total_item></vas_subsc_search_response>]]></xml>
</sample>
</api>
<api>
<cat>收费API</cat>
<name>taobao.vas.subscribe.get</name>
<cname>订购关系查询</cname>
<authorize>不需用户授权</authorize>
<desc>用于ISV根据登录进来的淘宝会员名查询该为该会员开通哪些收费项目，ISV只能查询自己名下的应用及收费项目的订购情况</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>淘宝会员名</desc>
<sample>hz0799</sample>
<default/>
</param>
<param>
<name>article_code</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>应用收费代码，从合作伙伴后台（my.open.taobao.com）-收费管理-收费项目列表 能够获得该应用的收费代码</desc>
<sample>ts-1234</sample>
<default/>
</param>
</request>
<response>
<param>
<name>article_user_subscribes</name>
<type>ArticleUserSubscribe</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>用户订购信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"vas_subscribe_get_response":{"article_user_subscribes":{"article_user_subscribe":[{"item_code":"ts-123-1","deadline":"2000-01-01 00:00:00","status":1}]}}}]]></json>
<xml><![CDATA[<vas_subscribe_get_response><article_user_subscribes list="true"><article_user_subscribe><item_code>ts-123-1</item_code><deadline>2000-01-01 00:00:00</deadline><status>1</status></article_user_subscribe></article_user_subscribes></vas_subscribe_get_response>]]></xml>
</sample>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.picture.category.get</name>
<cname>获取图片分类信息</cname>
<authorize>必须用户授权</authorize>
<desc>获取图片分类信息</desc>
<request>
<param>
<name>fields</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>需要返回的字段,根据PictureCategory中的以下字段：picture_category_id,picture_category_name,position,type,total,created,modified ,多个字段用“,”分隔。如：type,total,created,modified</desc>
<sample>picture_category_id,picture_category_name,position,type,total,created,modified</sample>
<default/>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>图片分类ID</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>picture_category_name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>图片分类名，不支持模糊查询</desc>
<sample>分类</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>分类类型,fixed代表店铺装修分类类别，auction代表宝贝分类类别，user-define代表用户自定义分类类别</desc>
<sample>类型</sample>
<default/>
</param>
<param>
<name>parent_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>取二级分类时设置为对应父分类id 
取一级分类时父分类id设为0 
取全部分类的时候不设或设为-1</desc>
<sample>0</sample>
<default>-1</default>
</param>
</request>
<response>
<param>
<name>picture_categories</name>
<type>PictureCategory</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>图片分类</desc>
</param>
</response>
<sample>
<json><![CDATA[{"picture_category_get_response":{"picture_categories":{"picture_category":[{"picture_category_id":1234,"picture_category_name":"名称","uid":12345678,"sorts":1,"type":"sys-fixture","total":100,"gmt_create":"2000-01-01 00:00:00","gmt_modified":"2000-01-01 00:00:00","parent_id":0}]}}}]]></json>
<xml><![CDATA[<picture_category_get_response><picture_categories list="true"><picture_category><picture_category_id>1234</picture_category_id><picture_category_name>名称</picture_category_name><uid>12345678</uid><sorts>1</sorts><type>sys-fixture</type><total>100</total><gmt_create>2000-01-01 00:00:00</gmt_create><gmt_modified>2000-01-01 00:00:00</gmt_modified><parent_id>0</parent_id></picture_category></picture_categories></picture_category_get_response>]]></xml>
</sample>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.picture.delete</name>
<cname>删除图片空间图片</cname>
<authorize>必须用户授权</authorize>
<desc>删除图片空间图片</desc>
<request>
<param>
<name>picture_ids</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>图片ID字符串,可以一个也可以一组,用英文逗号间隔,如450,120,155</desc>
<sample>450,120,155</sample>
<default/>
</param>
</request>
<response>
<param>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>是否删除</desc>
</param>
</response>
<sample>
<json><![CDATA[{"picture_delete_response":{"success":true}}]]></json>
<xml><![CDATA[<picture_delete_response><success>true</success></picture_delete_response>]]></xml>
</sample>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.picture.get</name>
<cname>获取图片信息</cname>
<authorize>必须用户授权</authorize>
<desc>获取图片信息</desc>
<request>
<param>
<name>fields</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>需要返回的字段，根据Picture中的以下字段：picture_id,picture_category_id,picture_path,title,sizes,pixel,status,deleted,created,modified，多个字段用","分隔。如：picture_path,title,sizes</desc>
<sample>picture_id,picture_category_id,picture_path,title,sizes,pixel,status,deleted,created,modified</sample>
<default/>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>图片ID</desc>
<sample>1001</sample>
<default/>
</param>
<param>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>图片分类ID</desc>
<sample>10000</sample>
<default/>
</param>
<param>
<name>deleted</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否删除,unfroze代表没有删除</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>modified_time</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>图片编辑时间,返回的是图片最后修改（包括标题、分类、内容）时间为大于这个时间点的图片</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>title</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>图片标题,最大长度50字符,中英文都算一字符</desc>
<sample>标题</sample>
<default/>
</param>
<param>
<name>order_by</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>图片查询结果排序,time:desc按上传时间从晚到早(默认), time:asc按上传时间从早到晚,sizes:desc按图片从大到小，sizes:asc按图片从小到大,默认time:desc</desc>
<sample>time:desc</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询上传开始时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>查询上传结束时间点,格式:yyyy-MM-dd HH:mm:ss</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码.传入值为1代表第一页,传入值为2代表第二页,依此类推,默认值为1</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数.每页返回最多返回100条,默认值40</desc>
<sample>40</sample>
<default/>
</param>
</request>
<response>
<param>
<name>totalResults</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>100</sample>
<desc>总的结果数</desc>
</param>
<param>
<name>pictures</name>
<type>Picture</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>图片信息列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"picture_get_response":{"totalResults":100,"pictures":{"picture":[{"picture_id":123,"picture_category_id":12,"picture_path":"i3/156447112/Tdsxsiixxx.jpg","title":"title","sizes":100,"uid":1234567,"pixel":"450x150","status":"unfroze","gmt_create":"2000-01-01 00:00:00","gmt_modified":"2000-01-01 00:00:00","success":true}]}}}]]></json>
<xml><![CDATA[<picture_get_response><totalResults>100</totalResults><pictures list="true"><picture><picture_id>123</picture_id><picture_category_id>12</picture_category_id><picture_path>i3/156447112/Tdsxsiixxx.jpg</picture_path><title>title</title><sizes>100</sizes><uid>1234567</uid><pixel>450x150</pixel><status>unfroze</status><gmt_create>2000-01-01 00:00:00</gmt_create><gmt_modified>2000-01-01 00:00:00</gmt_modified><success>true</success></picture></pictures></picture_get_response>]]></xml>
</sample>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.picture.upload</name>
<cname>上传单张图片</cname>
<authorize>必须用户授权</authorize>
<desc>上传单张图片</desc>
<request>
<param>
<name>picture_category_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>图片分类ID，具体某个分类ID或0上传到未分类下，只能一个分类</desc>
<sample>123</sample>
<default/>
</param>
<param>
<name>img</name>
<type>byte[]</type>
<level>Basic</level>
<required>必须</required>
<desc>图片二进制文件流,不能为空,允许png、jpg、gif图片格式</desc>
<sample>我是被上传的文件内容</sample>
<default/>
</param>
<param>
<name>image_input_title</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>包括后缀名的图片标题,不能为空，如Bule.jpg,有些卖家希望图片上传后取图片文件的默认名</desc>
<sample>Bule.jpg</sample>
<default/>
</param>
<param>
<name>title</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>图片标题,如果为空,传的图片标题就取去掉后缀名的image_input_title,超过50字符长度会截取50字符,重名会在标题末尾加"(1)";标题末尾已经有"(数字)"了，则数字加1</desc>
<sample>图片名称</sample>
<default/>
</param>
<param>
<name>picture_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>如果此参数大于0，而且在后台能查到对应的图片，则此次上传为原图替换</desc>
<sample>10000</sample>
<default>0</default>
</param>
</request>
<response>
<param>
<name>picture</name>
<type>Picture</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>当前上传的一张图片信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"picture_upload_response":{"picture":{"picture_id":123,"picture_category_id":12,"picture_path":"http://img07.taobaocdn.com/imgextra/i7/22670458/T2dD0kXb4cXXXXXXXX_!!22670458.jpg","title":"title","sizes":100,"uid":1234567,"pixel":"450x150","status":"unfroze","gmt_create":"2000-01-01 00:00:00","gmt_modified":"2000-01-01 00:00:00","success":true}}}]]></json>
<xml><![CDATA[<picture_upload_response><picture><picture_id>123</picture_id><picture_category_id>12</picture_category_id><picture_path>http:</picture_path><title>title</title><sizes>100</sizes><uid>1234567</uid><pixel>450x150</pixel><status>unfroze</status><gmt_create>2000-01-01 00:00:00</gmt_create><gmt_modified>2000-01-01 00:00:00</gmt_modified><success>true</success></picture></picture_upload_response>]]></xml>
</sample>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.sellercats.list.add</name>
<cname>添加卖家自定义类目</cname>
<authorize>必须用户授权</authorize>
<desc>此API添加卖家店铺内自定义类目  
父类目parent_cid值等于0：表示此类目为店铺下的一级类目，值不等于0：表示此类目有父类目  
注：因为缓存的关系,添加的新类目需8个小时后才可以在淘宝页面上正常显示，但是不影响在该类目下商品发布</desc>
<request>
<param>
<name>name</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家自定义类目名称。不超过20个字符</desc>
<sample>店铺一级类目</sample>
<default/>
</param>
<param>
<name>pict_url</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>链接图片URL地址。(绝对地址，格式：http://host/image_path)</desc>
<sample>http://host/image_path</sample>
<default/>
</param>
<param>
<name>parent_cid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>父类目编号，如果类目为店铺下的一级类目：值等于0，如果类目为子类目，调用获取taobao.sellercats.list.get父类目编号</desc>
<sample>12345678</sample>
<default/>
</param>
<param>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>该类目在页面上的排序位置,取值范围:大于零的整数</desc>
<sample>6</sample>
<default/>
</param>
</request>
<response>
<param>
<name>seller_cat</name>
<type>SellerCat</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回seller_cat数据结构中的：cid,created</desc>
</param>
</response>
<sample>
<json><![CDATA[{"sellercats_list_add_response":{"seller_cat":{"cid":12345,"created":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<sellercats_list_add_response><seller_cat><cid>12345</cid><created>2000-01-01 00:00:00</created></seller_cat></sellercats_list_add_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.shop-service-error:SHOP_CATEGORY_ORDER_ERROR</code>
<desc>类目在页面上的排序出错</desc>
<solution>用taobao.sellercats.list.get 获取最大的类目排序，然后在此基础上添加类目，不能添加类目排序超过（最大排序+1）的类目</solution>
</error>
<error>
<code>isv.shop-service-error:SHOP_CAT_IS_EXIST</code>
<desc>类目已经存在</desc>
<solution>类目名称不要重复</solution>
</error>
</errors>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.sellercats.list.get</name>
<cname>获取前台展示的店铺内卖家自定义商品类目</cname>
<authorize>不需用户授权</authorize>
<desc>此API获取当前卖家店铺在淘宝前端被展示的浏览导航类目（面向买家）</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家昵称</desc>
<sample>bill</sample>
<default/>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>可选</required>
<desc>fields参数</desc>
<sample>cid,name</sample>
<default/>
</param>
</request>
<response>
<param>
<name>seller_cats</name>
<type>SellerCat</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>卖家自定义类目</desc>
</param>
</response>
<sample>
<json><![CDATA[{"sellercats_list_get_response":{"seller_cats":{"seller_cat":[{"cid":12345,"parent_cid":12,"name":"自定义类型名称","pic_url":"xva1sdfxxx.jpg","sort_order":1,"type":"manual_type"}]}}}]]></json>
<xml><![CDATA[<sellercats_list_get_response><seller_cats list="true"><seller_cat><cid>12345</cid><parent_cid>12</parent_cid><name>自定义类型名称</name><pic_url>xva1sdfxxx.jpg</pic_url><sort_order>1</sort_order><type>manual_type</type></seller_cat></seller_cats></sellercats_list_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:uid</code>
<desc>参数：uid无效，格式不对、非法值、越界等</desc>
<solution>用户对应的店铺已过期，或者不存在，正常错误提醒，不要重试</solution>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>根据用户昵称:***查询不到对应的用户信息</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
<error>
<code>isv.shop-not-exist</code>
<desc>根据用户找不到店铺</desc>
<solution>用户未开店，不要重试</solution>
</error>
</errors>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.sellercats.list.update</name>
<cname>更新卖家自定义类目</cname>
<authorize>必须用户授权</authorize>
<desc>此API更新卖家店铺内自定义类目  
注：因为缓存的关系，添加的新类目需8个小时后才可以在淘宝页面上正常显示，但是不影响在该类目下商品发布</desc>
<request>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家自定义类目编号</desc>
<sample>12345678</sample>
<default/>
</param>
<param>
<name>name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家自定义类目名称。不超过20个字符</desc>
<sample>我的类目</sample>
<default/>
</param>
<param>
<name>pict_url</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>链接图片URL地址</desc>
<sample>http://cn.yimg.com/bookmark/yisou/img/ysdm4161.jpg</sample>
<default/>
</param>
<param>
<name>sort_order</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>该类目在页面上的排序位置,取值范围:大于零的整数</desc>
<sample>1</sample>
<default/>
</param>
</request>
<response>
<param>
<name>seller_cat</name>
<type>SellerCat</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回sellercat数据结构中的：cid,modified</desc>
</param>
</response>
<sample>
<json><![CDATA[{"sellercats_list_update_response":{"seller_cat":{"cid":12345,"modified":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<sellercats_list_update_response><seller_cat><cid>12345</cid><modified>2000-01-01 00:00:00</modified></seller_cat></sellercats_list_update_response>]]></xml>
</sample>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.shop.get</name>
<cname>获取卖家店铺的基本信息</cname>
<authorize>不需用户授权</authorize>
<desc>获取卖家店铺的基本信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表。可选值：Shop 结构中的所有字段；多个字段之间用逗号(,)分隔</desc>
<sample>sid,cid,title,nick,desc,bulletin,pic_path,created,modified</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>卖家昵称</desc>
<sample>卖家昵称</sample>
<default/>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>店铺信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"shop_get_response":{"shop":{"sid":44750468,"cid":123456,"nick":"csuky","title":"我的店铺","desc":"我的店铺的描述","bulletin":"我的店铺的公告","pic_path":"/e2/c0/T1KVXXXhGvt0L1upjX.jpg","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","shop_score":{"item_score":60,"service_score":100,"delivery_score":90}}}}]]></json>
<xml><![CDATA[<shop_get_response><shop><sid>44750468</sid><cid>123456</cid><nick>csuky</nick><title>我的店铺</title><desc>我的店铺的描述</desc><bulletin>我的店铺的公告</bulletin><pic_path>/e2/c0/T1KVXXXhGvt0L1upjX.jpg</pic_path><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><shop_score><item_score>60</item_score><service_score>100</service_score><delivery_score>90</delivery_score></shop_score></shop></shop_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>user 不存在</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.shop.remainshowcase.get</name>
<cname>获取卖家店铺剩余橱窗数量</cname>
<authorize>必须用户授权</authorize>
<desc>获取卖家店铺剩余橱窗数量，已用橱窗数量，总橱窗数量（对于B卖家，后两个参数返回-1）</desc>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>支持返回剩余橱窗数量，已用橱窗数量，总橱窗数量</desc>
</param>
</response>
<sample>
<json><![CDATA[{"shop_remainshowcase_get_response":{"shop":{"remain_count":9}}}]]></json>
<xml><![CDATA[<shop_remainshowcase_get_response><shop><remain_count>9</remain_count></shop></shop_remainshowcase_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:bseller</code>
<desc>参数：bseller无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.shop.update</name>
<cname>更新店铺基本信息</cname>
<authorize>必须用户授权</authorize>
<desc>目前只支持标题、公告和描述的更新</desc>
<request>
<param>
<name>title</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>店铺标题。不超过30个字符；过滤敏感词，如淘咖啡、阿里巴巴等。title, bulletin和desc至少必须传一个</desc>
<sample>店铺标题</sample>
<default/>
</param>
<param>
<name>bulletin</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>店铺公告。不超过1024个字符</desc>
<sample>店铺公告</sample>
<default/>
</param>
<param>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>店铺描述。10～2000个字符以内</desc>
<sample>店铺描述</sample>
<default/>
</param>
</request>
<response>
<param>
<name>shop</name>
<type>Shop</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>店铺信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"shop_update_response":{"shop":{"sid":44750468,"modified":"2000-01-01 00:00:00",}}}]]></json>
<xml><![CDATA[<shop_update_response><shop><sid>44750468</sid><modified>2000-01-01 00:00:00</modified></shop></shop_update_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:bulletin-and-title-and-desc</code>
<desc>请输入要修改的参数</desc>
<solution>bulletin-and-title-and-desc这三个参数至少传入一个</solution>
</error>
<error>
<code>isv.shop-service-error:SHOP_TITLE_DUPLICATE</code>
<desc>店铺重名</desc>
<solution>重新输入店铺名称</solution>
</error>
</errors>
</api>
<api>
<cat>店铺API</cat>
<name>taobao.shopcats.list.get</name>
<cname>获取前台展示的店铺类目</cname>
<authorize>不需用户授权</authorize>
<desc>此API获取淘宝面向买家的浏览导航类目  
跟后台卖家商品管理的类目有差异</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>可选</required>
<desc>需要返回的字段列表，见ShopCat，默认返回：cid,parent_cid,name,is_parent</desc>
<sample>cid,parent_cid,name,is_parent</sample>
<default>cid,parent_cid,name,is_parent</default>
</param>
</request>
<response>
<param>
<name>shop_cats</name>
<type>ShopCat</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>店铺类目列表信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"shopcats_list_get_response":{"shop_cats":{"shop_cat":[{"cid":12345678,"parent_cid":123456,"name":"名称","is_parent":true}]}}}]]></json>
<xml><![CDATA[<shopcats_list_get_response><shop_cats list="true"><shop_cat><cid>12345678</cid><parent_cid>123456</parent_cid><name>名称</name><is_parent>true</is_parent></shop_cat></shop_cats></shopcats_list_get_response>]]></xml>
</sample>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.cooperation.update</name>
<cname>更新合作关系</cname>
<authorize>必须用户授权</authorize>
<desc>供应商更新合作的分销商相关数据</desc>
<request>
<param>
<name>distributor_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>分销商ID</desc>
<sample>1234</sample>
<default/>
</param>
<param>
<name>grade_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>等级ID(0代表取消)</desc>
<sample>1234</sample>
<default/>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>更新结果成功失败</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_cooperation_update_response":{"is_success":true}}]]></json>
<xml><![CDATA[<fenxiao_cooperation_update_response><is_success>true</is_success></fenxiao_cooperation_update_response>]]></xml>
</sample>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.discount.add</name>
<cname>新增等级折扣</cname>
<authorize>必须用户授权</authorize>
<desc>新增等级折扣</desc>
<request>
<param>
<name>discount_name</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>折扣名称,长度不能超过25字节</desc>
<sample>一级会员</sample>
<default/>
</param>
<param>
<name>target_types</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠），例如"GRADE,DISTRIBUTOR"</desc>
<sample>GRADE,DISTRIBUTOR</sample>
<default/>
</param>
<param>
<name>target_ids</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>会员等级的id或者分销商id，例如：”1001,2001,1002”</desc>
<sample>1001,2001,1002</sample>
<default/>
</param>
<param>
<name>discount_types</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>PERCENT（按折扣优惠）、PRICE（按减价优惠），例如"PERCENT,PRICE,PERCENT"</desc>
<sample>PERCENT,PRICE,PERCENT</sample>
<default/>
</param>
<param>
<name>discount_values</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>优惠比率或者优惠价格，例如：”81.31,-23.45,71.23”,大小为-100000000到100000000之间</desc>
<sample>81.31,-23.45,71.23</sample>
<default/>
</param>
</request>
<response>
<param>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>123</sample>
<desc>折扣ID</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_discount_add_response":{"discount_id":123}}]]></json>
<xml><![CDATA[<fenxiao_discount_add_response><discount_id>123</discount_id></fenxiao_discount_add_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:discount_name</code>
<desc>优惠方案名称不能为空，长度不能超过25。</desc>
<solution>优惠方案名称不能为空，长度不能超过25。</solution>
</error>
</errors>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.discount.update</name>
<cname>修改等级折扣</cname>
<authorize>必须用户授权</authorize>
<desc>修改等级折扣</desc>
<request>
<param>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>折扣ID</desc>
<sample>123</sample>
<default/>
</param>
<param>
<name>discount_name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>折扣名称，长度不能超过25字节</desc>
<sample>一级会员</sample>
<default/>
</param>
<param>
<name>discount_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>状态DEL（删除）UPDATE(更新)</desc>
<sample>DEL</sample>
<default/>
</param>
<param>
<name>detail_ids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>详情ID，例如：”0,1002,1003”</desc>
<sample>12345</sample>
<default/>
</param>
<param>
<name>target_types</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>GRADE（按会员等级优惠）、DISTRIBUTOR（按分销商优惠），例如"GRADE,DISTRIBUTOR"</desc>
<sample>GRADE,DISTRIBUTOR</sample>
<default/>
</param>
<param>
<name>target_ids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>会员等级的id或者分销商id，例如：”1001,2001,1002”</desc>
<sample>1001,2001,1002</sample>
<default/>
</param>
<param>
<name>discount_types</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>PERCENT（按折扣优惠）、PRICE（按减价优惠），例如"PERCENT,PRICE,PERCENT"</desc>
<sample>PERCENT,PRICE,PERCENT</sample>
<default/>
</param>
<param>
<name>discount_values</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>优惠比率或者优惠价格，例如：”81.31,-23.45,71.23”,大小为-100000000到100000000之间</desc>
<sample>81.31,-23.45,71.23</sample>
<default/>
</param>
<param>
<name>detail_statuss</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>ADD(新增)、UPDATE（更新）、DEL（删除，对应的target_type等信息填NULL），例如：”UPDATE,DEL,DEL”</desc>
<sample>UPDATE,DEL,DEL</sample>
<default/>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>成功状态</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_discount_update_response":{"is_success":true}}]]></json>
<xml><![CDATA[<fenxiao_discount_update_response><is_success>true</is_success></fenxiao_discount_update_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:discount_percent</code>
<desc>折扣数值不合法，必须0.01%&lt;=折扣&lt;=999.99%。</desc>
<solution>折扣数值不合法，必须0.01%&lt;=折扣&lt;=999.99%。</solution>
</error>
</errors>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.discounts.get</name>
<cname>获取折扣信息</cname>
<authorize>必须用户授权</authorize>
<desc>查询折扣信息</desc>
<request>
<param>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>折扣ID</desc>
<sample>123</sample>
<default/>
</param>
<param>
<name>ext_fields</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>指定查询额外的信息，可选值：DETAIL（查询折扣详情），多个可选值用逗号分割。（只允许指定折扣ID情况下使用）</desc>
<sample>DETAIL</sample>
<default/>
</param>
</request>
<response>
<param>
<name>discounts</name>
<type>Discount</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>折扣数据结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>12</sample>
<desc>记录数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_discounts_get_response":{"discounts":{"discount":[{"discount_id":123,"name":"一级会员","details":{"discount_detail":[{"detail_id":456,"target_type":"GRADE","target_id":789,"target_name":"一级会员","discount_type":"PERCENT","discount_value":10,"created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00"}]},"created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00"}]},"total_results":12}}]]></json>
<xml><![CDATA[<fenxiao_discounts_get_response><discounts list="true"><discount><discount_id>123</discount_id><name>一级会员</name><details list="true"><discount_detail><detail_id>456</detail_id><target_type>GRADE</target_type><target_id>789</target_id><target_name>一级会员</target_name><discount_type>PERCENT</discount_type><discount_value>10</discount_value><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified></discount_detail></details><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified></discount></discounts><total_results>12</total_results></fenxiao_discounts_get_response>]]></xml>
</sample>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.distributors.get</name>
<cname>获取分销商信息</cname>
<authorize>必须用户授权</authorize>
<desc>查询和当前登录供应商有合作关系的分销商的信息</desc>
<request>
<param>
<name>nicks</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>分销商用户名列表。多个之间以“,”分隔;最多支持50个分销商用户名。</desc>
<sample>nick1,nick2,nick3</sample>
<default/>
</param>
</request>
<response>
<param>
<name>distributors</name>
<type>Distributor</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc>分销商详细信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_distributors_get_response":{"distributors":{"distributor":[{"distributor_id":"123","distributor_name":"张三","contact_person":"李四","mobile_phone":"13606513469","phone":"0431-88155188","email":"zhangsan123@126.com","alipay_account":zhangsan@126.com",
              "phone":"88888888",
              "shop_web_link":"http:},{"distributor_id":"1234","distributor_name":"李四","contact_person":"李四五","mobile_phone":"13606513465","phone":"0431-88155188","email":"lisi@126.com","alipay_account":lisi@126.com",
              "phone":"88888888",
              "shop_web_link":"http:}]}}}]]></json>
<xml><![CDATA[<fenxiao_distributors_get_response><distributors list="true"><distributor><distributor_id>123</distributor_id><distributor_name>张三</distributor_name><contact_person>张三</contact_person><mobile_phonel>13606513489</mobile_phone><phone>987654329</phone><email>zhangsan123@126.com</email><alipay_account>zhangsan123@126.com</alipay_account><shop_web_link>http:</distributor><distributor><distributor_id>1234</distributor_id><distributor_name>李四</distributor_name><contact_person>李四五</contact_person><mobile_phonel>13606513459</mobile_phone><phone>987654321</phone><email>lisi@126.com</email><alipay_account>lisi@126.com</alipay_account><shop_web_link>http:</distributor><distributors></fenxiao_distributors_get_response>]]></xml>
</sample>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.grades.get</name>
<cname>分销商等级查询</cname>
<authorize>必须用户授权</authorize>
<desc>根据供应商ID，查询他的分销商等级信息</desc>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>10</sample>
<desc>记录数</desc>
</param>
<param>
<name>fenxiao_grades</name>
<type>FenxiaoGrade</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc>分销商等级信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_grades_get_response":{"total_results":10,"fenxiao_grades":{"fenxiao_grade":[{"grade_id":100001,"name":"第一级分销商","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00"}]}}}]]></json>
<xml><![CDATA[<fenxiao_grades_get_response><total_results>10</total_results><fenxiao_grades list="true"><fenxiao_grade><grade_id>100001</grade_id><name>第一级分销商</name><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified></fenxiao_grade></fenxiao_grades></fenxiao_grades_get_response>]]></xml>
</sample>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.orders.get</name>
<cname>查询采购单信息</cname>
<authorize>必须用户授权</authorize>
<desc>查询采购单信息</desc>
<request>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易状态，不传默认查询所有采购单。可选值: 
 
    * WAIT_BUYER_PAY(等待买家付款) 
    * WAIT_SELLER_SEND_GOODS(等待卖家发货,即:买家已付款) 
    * WAIT_BUYER_CONFIRM_GOODS(等待买家确认收货,即:卖家已发货) 
    * TRADE_FINISHED(交易成功) 
    * TRADE_CLOSED(交易关闭)</desc>
<sample>WAIT_BUYER_PAY</sample>
<default/>
</param>
<param>
<name>start_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>起始时间 格式 yyyy-MM-dd。</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>结束时间 格式 yyyy-MM-dd 起始时间与结束时间跨度为7天 。</desc>
<sample>2000-01-01 23:59:59</sample>
<default/>
</param>
<param>
<name>time_type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>可选值：trade_time_type(采购单按照成交时间范围查询),update_time_type(采购单按照更新时间范围查询)</desc>
<sample>trade_time_type</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。（大于0的整数。默认为1）</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。（每页条数不超过50条）</desc>
<sample>10</sample>
<default/>
</param>
<param>
<name>purchase_order_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>采购单编号</desc>
<sample>120121243</sample>
<default/>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1</sample>
<desc>搜索到的采购单记录总数</desc>
</param>
<param>
<name>purchase_orders</name>
<type>PurchaseOrder</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>采购单及子采购单信息。返回 PurchaseOrder 包含的字段信息。</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_orders_get_response":{"total_results":1,"purchase_orders":{"purchase_order":[{"supplier_from":"values: taobao","supplier_username":"zhangsan","distributor_from":"taobao","distributor_username":"zhangsan","buyer_nick":"zhangsan","type":"values:daixiao","created":"2000-01-01 00:00:00","id":555,"distributor_memo":"分销商留言。","alipay_no":"5588","total_fee":"200.07","post_fee":"200.07","distributor_payment":"200.07","snapshot_url":"www.vancl.com","status":"TRADE_FINISHED(交易成功)","pay_time":"2000-01-01 00:00:00","consign_time":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","sub_purchase_orders":{"sub_purchase_order":[{"status":"WAIT_BUYER_PAY(等待买家付款)","refund_fee":"12.23","item_id":5555,"item_outer_id":"555","sku_id":555,"sku_outer_id":"5555","sku_properties":"颜色:红色","num":50,"title":"裙子","price":"50","snapshot_url":"www.vancl.com","created":"2000-01-01 00:00:00","id":5552,"total_fee":"200.07","distributor_payment":"200.07","buyer_payment":"200.07"}]},"receiver":{"name":"zhangsan","phone":"057188155188","mobile_phone":"1384567895","location":{"zip":"310000","address":"华星路99号创业大厦","city":"杭州","state":"浙江","country":"中国","district":"西湖区"}}}]}}}]]></json>
<xml><![CDATA[<fenxiao_orders_get_response><total_results>1</total_results><purchase_orders list="true"><purchase_order><supplier_from>values:taobao</supplier_from><supplier_username>zhangsan</supplier_username><distributor_from>taobao</distributor_from><distributor_username>zhangsan</distributor_username><buyer_nick>zhangsan</buyer_nick><type>values:daixiao</type><created>2000-01-01 00:00:00</created><id>555</id><distributor_memo>分销商留言。</distributor_memo><alipay_no>5588</alipay_no><total_fee>200.07</total_fee><post_fee>200.07</post_fee><distributor_payment>200.07</distributor_payment><snapshot_url>www.vancl.com</snapshot_url><status>TRADE_FINISHED(交易成功)</status><pay_time>2000-01-01 00:00:00</pay_time><consign_time>2000-01-01 00:00:00</consign_time><modified>2000-01-01 00:00:00</modified><sub_purchase_orders list="true"><sub_purchase_order><status>WAIT_BUYER_PAY(等待买家付款)</status><refund_fee>12.23</refund_fee><item_id>5555</item_id><item_outer_id>555</item_outer_id><sku_id>555</sku_id><sku_outer_id>5555</sku_outer_id><sku_properties>颜色:红色</sku_properties><num>50</num><title>裙子</title><price>50</price><snapshot_url>www.vancl.com</snapshot_url><created>2000-01-01 00:00:00</created><id>5552</id><total_fee>200.07</total_fee><distributor_payment>200.07</distributor_payment><buyer_payment>200.07</buyer_payment></sub_purchase_order></sub_purchase_orders><receiver><name>zhangsan</name><phone>057188155188</phone><mobile_phone>1384567895</mobile_phone><location><zip>310000</zip><address>华星路99号创业大厦</address><city>杭州</city><state>浙江</state><country>中国</country><district>西湖区</district></location></receiver></purchase_order></purchase_orders></fenxiao_orders_get_response>]]></xml>
</sample>
<errors>
<error>
<code>BIZ_ERR_USER_ID_NUM</code>
<desc/>
<solution/>
</error>
<error>
<code>PARAMS_PUCHASEORDER_STATUS</code>
<desc/>
<solution/>
</error>
</errors>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.product.add</name>
<cname>添加产品</cname>
<authorize>必须用户授权</authorize>
<desc>添加分销平台产品数据。业务逻辑与分销系统前台页面一致。 
 
    * 产品图片默认为空 
    * 产品发布后默认为下架状态</desc>
<request>
<param>
<name>name</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>产品名称，长度不超过60个字节。</desc>
<sample>裙子</sample>
<default/>
</param>
<param>
<name>productcat_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>产品线ID</desc>
<sample>555</sample>
<default/>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>标准价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>cost_price</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>采购价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>retail_price_low</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>最低零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>retail_price_high</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>最高零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间，最高零售价必须大于最低零售价。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>category_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>所属类目id，参考Taobao.itemcats.get，不支持成人等类目，输入成人类目id保存提示类目属性错误。</desc>
<sample>234545</sample>
<default/>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商家编码，长度不能超过60个字节。</desc>
<sample>hz000014</sample>
<default/>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>产品库存必须是1到999999。</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>alarm_number</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>警戒库存必须是0到29999。</desc>
<sample>1000</sample>
<default/>
</param>
<param>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>产品描述，长度为5到25000字符。</desc>
<sample>产品描述</sample>
<default/>
</param>
<param>
<name>prov</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>所在地：省，例：“浙江”</desc>
<sample>浙江</sample>
<default/>
</param>
<param>
<name>city</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>所在地：市，例：“杭州”</desc>
<sample>杭州</sample>
<default/>
</param>
<param>
<name>postage_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费）,默认seller。</desc>
<sample>buyer</sample>
<default/>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>运费模板ID，参考taobao.postages.get。</desc>
<sample>555</sample>
<default/>
</param>
<param>
<name>postage_ordinary</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>平邮费用，单位：元。例：“10.56”。 大小为0.01元到999999元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>postage_fast</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>快递费用，单位：元。例：“10.56”。 大小为0.01元到999999元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>postage_ems</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>ems费用，单位：元。例：“10.56”。 大小为0.00元到999999元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>have_invoice</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>是否有发票，可选值：false（否）、true（是），默认false。</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>have_guarantee</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>是否有保修，可选值：false（否）、true（是），默认false。</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>折扣ID</desc>
<sample>1234</sample>
<default/>
</param>
</request>
<response>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>5522</sample>
<desc>产品ID</desc>
</param>
<param>
<name>created</name>
<type>Date</type>
<level>Basic</level>
<required>true</required>
<sample>2000-01-01 00:00:00</sample>
<desc>产品创建时间 时间格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_product_add_response":{"pid":5522,"created":"2000-01-01 00:00:00"}}]]></json>
<xml><![CDATA[<fenxiao_product_add_response><pid>5522</pid><created>2000-01-01 00:00:00</created></fenxiao_product_add_response>]]></xml>
</sample>
<errors>
<error>
<code>PARAM_ERR_PRODUCT_DESCRIPTION</code>
<desc/>
<solution/>
</error>
</errors>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.product.update</name>
<cname>更新产品</cname>
<authorize>必须用户授权</authorize>
<desc>更新分销平台产品数据，不传更新数据返回失败</desc>
<request>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>产品ID</desc>
<sample>444</sample>
<default/>
</param>
<param>
<name>name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>产品名称，长度不超过60个字节。</desc>
<sample>袜子</sample>
<default/>
</param>
<param>
<name>standard_price</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>标准价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>cost_price</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>采购价格，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>retail_price_low</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>最低零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>retail_price_high</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>最高零售价，单位：元。例：“10.56”。必须在0.01元到10000000元之间，最高零售价必须大于最低零售价。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商家编码，长度不能超过60个字节。</desc>
<sample>hz00141</sample>
<default/>
</param>
<param>
<name>quantity</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>产品库存必须是1到999999。</desc>
<sample>10</sample>
<default/>
</param>
<param>
<name>alarm_number</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>警戒库存必须是0到29999。</desc>
<sample>50</sample>
<default/>
</param>
<param>
<name>desc</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>产品描述，长度为5到25000字符。</desc>
<sample>红色</sample>
<default/>
</param>
<param>
<name>prov</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>所在地：省，例：“浙江”</desc>
<sample>浙江</sample>
<default/>
</param>
<param>
<name>city</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>所在地：市，例：“杭州”</desc>
<sample>杭州</sample>
<default/>
</param>
<param>
<name>postage_type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>运费类型，可选值：seller（供应商承担运费）、buyer（分销商承担运费），默认seller。</desc>
<sample>seller</sample>
<default/>
</param>
<param>
<name>postage_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>运费模板ID，参考taobao.postages.get。更新时必须指定运费类型为 buyer，否则不更新。</desc>
<sample>434343</sample>
<default/>
</param>
<param>
<name>postage_ordinary</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>平邮费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>postage_fast</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>快递费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>postage_ems</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>ems费用，单位：元。例：“10.56”。大小为0.01元到999999元之间。更新时必须指定运费类型为buyer，否则不更新。</desc>
<sample>10.56</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>发布状态，可选值：up（上架）、down（下架）、delete（删除），输入非法字符则忽略。</desc>
<sample>delete</sample>
<default/>
</param>
<param>
<name>sku_ids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>sku id列表，例：1001,1002,1003</desc>
<sample>1001,1002,1003</sample>
<default/>
</param>
<param>
<name>sku_cost_prices</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>sku采购价格，单位元，例："10.50,11.00,20.50"，字段必须和上面的sku_ids保持一致。</desc>
<sample>10.50,11.00,20.50</sample>
<default/>
</param>
<param>
<name>sku_quantitys</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>sku库存，单位元，例："10,20,30"，字段必须和sku_ids保持一致。</desc>
<sample>10,20,30</sample>
<default/>
</param>
<param>
<name>sku_outer_ids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>sku商家编码 ，单位元，例："S1000,S1002,S1003"，字段必须和上面的id保持一致，如果没有可以写成",,"</desc>
<sample>S1000,S1002,S1003</sample>
<default/>
</param>
<param>
<name>have_invoice</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否有发票，可选值：false（否）、true（是），默认false。</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>have_guarantee</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否有保修，可选值：false（否）、true（是），默认false。</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>discount_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>折扣ID</desc>
<sample>10001</sample>
<default/>
</param>
</request>
<response>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>12313454121</sample>
<desc>产品ID</desc>
</param>
<param>
<name>modified</name>
<type>Date</type>
<level>Basic</level>
<required>true</required>
<sample>2000-01-01 00:00:00</sample>
<desc>更新时间，时间格式：yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_product_update_response":{"pid":12313454121,"modified":"2000-01-01 00:00:00"}}]]></json>
<xml><![CDATA[<fenxiao_product_update_response><pid>12313454121</pid><modified>2000-01-01 00:00:00</modified></fenxiao_product_update_response>]]></xml>
</sample>
<errors>
<error>
<code>PARAM_ERR_PRODUCT_TITLE</code>
<desc/>
<solution/>
</error>
<error>
<code>PARAM_ERR_PRODUCT_NO_FIELD_UPDATED</code>
<desc/>
<solution/>
</error>
<error>
<code>PARAM_ERR_PRODUCT_DESCRIPTION</code>
<desc/>
<solution/>
</error>
<error>
<code>PARAM_ERR_PRODUCT_PID</code>
<desc/>
<solution/>
</error>
<error>
<code>PARAM_ERR_PRODUCT_QUANTITY</code>
<desc/>
<solution/>
</error>
<error>
<code>PARAM_ERR_PRODUCT_COST_PRICE_SKU_HIGH</code>
<desc/>
<solution/>
</error>
<error>
<code>PARAM_ERR_PRODUCT_POSTAGE_UPDATE</code>
<desc/>
<solution/>
</error>
<error>
<code>PARAM_ERR_PRODUCT_RETAIL_PRICE</code>
<desc/>
<solution/>
</error>
</errors>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.productcats.get</name>
<cname>查询产品线列表</cname>
<authorize>必须用户授权</authorize>
<desc>查询供应商的所有产品线数据。根据登陆用户来查询，不需要其他入参</desc>
<request>
<param>
<name>fields</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>返回字段列表</desc>
<sample>total_results,productcats</sample>
<default/>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>10</sample>
<desc>查询结果记录数</desc>
</param>
<param>
<name>productcats</name>
<type>ProductCat</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>产品线列表。返回 ProductCat 包含的字段信息。</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_productcats_get_response":{"productcats":{"product_cat":[{"id":"52","name":"默认产品线","product_num":"0"}]},"total_results":1}}]]></json>
<xml><![CDATA[<fenxiao_productcats_get_response>-<productcats list="true">-<product_cat><id>52</id><name>默认产品线</name><product_num>0</product_num></product_cat></productcats><total_results>1</total_results></fenxiao_productcats_get_response>]]></xml>
</sample>
</api>
<api>
<cat>分销API</cat>
<name>taobao.fenxiao.products.get</name>
<cname>查询产品列表</cname>
<authorize>必须用户授权</authorize>
<desc>查询供应商的产品数据。 
 
    * 入参传入pids将优先查询，即只按这个条件查询。 
    * 入参fields传skus将查询sku的数据，不传该参数默认不查询，返回产品的其它信息。 
    * 入参fields传入images将查询多图数据，不传只返回主图数据。 
    * 入参fields仅对传入pids生效（只有按ID查询时，才能查询额外的数据） 
    * 查询结果按照产品发布时间倒序，即时间近的数据在前。</desc>
<request>
<param>
<name>outer_id</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商家编码</desc>
<sample>a154552</sample>
<default/>
</param>
<param>
<name>productcat_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>产品线ID</desc>
<sample>3232312</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>产品状态，可选值：up（上架）、down（下架），不传默认查询所有</desc>
<sample>up</sample>
<default/>
</param>
<param>
<name>pids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>产品ID列表（最大限制30），用逗号分割，例如：“1001,1002,1003,1004,1005”</desc>
<sample>1001,1002,1003,1004,1005</sample>
<default/>
</param>
<param>
<name>fields</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>指定查询额外的信息，可选值：skus（sku数据）、images（多图），多个可选值用逗号分割。</desc>
<sample>skus,images</sample>
<default/>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>开始修改时间</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>结束修改时间</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码（大于0的整数，默认1）</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页记录数（默认20，最大50）</desc>
<sample>20</sample>
<default/>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>10</sample>
<desc>查询结果记录数</desc>
</param>
<param>
<name>products</name>
<type>FenxiaoProduct</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>产品对象记录集。返回 FenxiaoProduct 包含的字段信息。</desc>
</param>
</response>
<sample>
<json><![CDATA[{"fenxiao_products_ge_response":{"total_results":10,"products":{"fenxiao_product":[{"pid":1255,"name":"jayzhou","productcat_id":444,"standard_price":"5","cost_price":"5","retail_price_low":"10.56","retail_price_high":"10.56","outer_id":4444,"quantity":444,"alarm_number":444,"pictures":"http://img01.taobaocdn.com/xxx.jpg,http://img01.taobaocdn.com/xxx.jpg","desc_path":"http://img03.taobaocdn.com/xxx.dpc","prov":"浙江","city":"杭州","postage_type":"12","postage_id":5545,"postage_ordinary":"10.56","postage_fast":"10.56","postage_ems":"12.2","have_invoice":true,"have_guarantee":true,"status":"up","items_count":5,"orders_count":5,"created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","skus":{"fenxiao_sku":[{"id":"jayzhou","name":"如鞋子的sku：“红色，35”","cost_price":"1","quantity":"1","outer_id":"1"}]}}]}}}]]></json>
<xml><![CDATA[<fenxiao_products_ge_response><total_results>10</total_results><products list="true"><fenxiao_product><pid>1255</pid><name>jayzhou</name><productcat_id>444</productcat_id><standard_price>5</standard_price><cost_price>5</cost_price><retail_price_low>10.56</retail_price_low><retail_price_high>10.56</retail_price_high><outer_id>4444</outer_id><quantity>444</quantity><alarm_number>444</alarm_number><pictures>http:</pictures><desc_path>http:</desc_path><prov>浙江</prov><city>杭州</city><postage_type>12</postage_type><postage_id>5545</postage_id><postage_ordinary>10.56</postage_ordinary><postage_fast>10.56</postage_fast><postage_ems>12.2</postage_ems><have_invoice>true</have_invoice><have_guarantee>true</have_guarantee><status>up</status><items_count>5</items_count><orders_count>5</orders_count><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><skus><fenxiao_sku><id>jayzhou</id><name>如鞋子的sku：“红色，35”</name><cost_price>1</cost_price><quantity>1</quantity><outer_id>1</outer_id></fenxiao_sku></skus></fenxiao_product></products></fenxiao_products_ge_response>]]></xml>
</sample>
<errors>
<error>
<code>BIZ_ERR_USER_ID_NUM</code>
<desc/>
<solution/>
</error>
</errors>
</api>
<api>
<cat>画报API</cat>
<name>taobao.huabao.channel.get</name>
<cname>取频道信息</cname>
<authorize>不需用户授权</authorize>
<desc>更新频道Id取频道详情</desc>
<request>
<param>
<name>channel_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>频道Id</desc>
<sample>1</sample>
<default/>
</param>
</request>
<response>
<param>
<name>channel</name>
<type>PosterChannel</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>频道信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"huabao_channel_get_response":{"channel":{"wapurl":"http://poster.wap.taobao.com/digital.htm","id":"123456","name":"abc","cn_name":"中文名","desc":"说明","url":"http://www.taobao.com/XXXXXX"}}}]]></json>
<xml><![CDATA[<huabao_channel_get_response><channel><wapurl>http:</wapurl><id>123456</id><name>abc</name><cn_name>中文名</cn_name><desc>说明</desc><url>http:</url></channel></huabao_channel_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.channel-not-exist:INVAILD_CHNNELID</code>
<desc>根据channelid查询不到channel</desc>
<solution>先通过接口taobao.huabao.channels.get取画报频道，再通过频道id取频道详情</solution>
</error>
<error>
<code>isp.poster-service-unavailable</code>
<desc>调用后端服务poster抛异常，服务不可用</desc>
<solution>后端服务问题，及时联系小二处理</solution>
</error>
</errors>
</api>
<api>
<cat>画报API</cat>
<name>taobao.huabao.channels.get</name>
<cname>取画报频道</cname>
<authorize>不需用户授权</authorize>
<desc>取画报所有频道</desc>
<response>
<param>
<name>channels</name>
<type>PosterChannel</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>类目信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"huabao_channels_get_response":{"channels":{"poster_channel":[{"wapurl":"http://poster.wap.taobao.com/digital.htm","id":"123456","name":"abc","cn_name":"中文名","desc":"说明","url":"http://www.taobao.com/XXXXXX"}]}}}]]></json>
<xml><![CDATA[<huabao_channels_get_response><channels list="true"><poster_channel><wapurl>http:</wapurl><id>123456</id><name>abc</name><cn_name>中文名</cn_name><desc>说明</desc><url>http:</url></poster_channel></channels></huabao_channels_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.poster-service-unavailable</code>
<desc>调用后端服务poster抛异常，服务不可用</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>画报API</cat>
<name>taobao.huabao.poster.get</name>
<cname>取画报详情</cname>
<authorize>不需用户授权</authorize>
<desc>根据画报Id取画报详情</desc>
<request>
<param>
<name>poster_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>画报的Id值</desc>
<sample>235498</sample>
<default/>
</param>
</request>
<response>
<param>
<name>poster</name>
<type>Poster</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>画报信息</desc>
</param>
<param>
<name>pics</name>
<type>PosterPicture</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>画报图片</desc>
</param>
</response>
<sample>
<json><![CDATA[{"huabao_poster_get_response":{"poster":{"id":"123456","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","title":"图片标题","short_title":"图片短标题","tags":"tag1,tag2","weight":5,"cover_urls":"http://www.taobao.com/XXXXXX","hits":100,"channel_id":"123456"},"pics":{"poster_picture":[{"poster_id":"123456","id":"123456","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","url":"http://www.taobao.com/XXXXXX","desc":"说明"}]}}}]]></json>
<xml><![CDATA[<huabao_poster_get_response><poster><id>123456</id><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><title>图片标题</title><short_title>图片短标题</short_title><tags>tag1,tag2</tags><weight>5</weight><cover_urls>http:</cover_urls><hits>100</hits><channel_id>123456</channel_id></poster><pics list="true"><poster_picture><poster_id>123456</poster_id><id>123456</id><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><url>http:</url><desc>说明</desc></poster_picture></pics></huabao_poster_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.poster-not-exist:INVAILD_ID</code>
<desc>根据ID查询不到画报</desc>
<solution>选通过接口taobao.huabao.specialposters.get获取指定画报列表
，再通过画报ID取得画报详情</solution>
</error>
</errors>
</api>
<api>
<cat>画报API</cat>
<name>taobao.huabao.poster.goodsinfo.get</name>
<cname>取得画报相关商品信息</cname>
<authorize>不需用户授权</authorize>
<desc>根据画报ID获得与其相关的商品信息</desc>
<request>
<param>
<name>poster_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>画报的ID</desc>
<sample>1</sample>
<default/>
</param>
</request>
<response>
<param>
<name>goodsinfolist</name>
<type>PosterGoodsInfo</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>和画报相关的商品信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"huabao_poster_goodsinfo_get_response":{"goodsinfolist":{"poster_goods_info":[{"num_id":1,"poster_id":100,"title":"吉他","short_title":"吉他","price":"100.00","note":"白","url":"http://auction1.wap.taobao.com/auction/item_detail--7040991384.htm?","pic_id":123}]}}}]]></json>
<xml><![CDATA[<huabao_poster_goodsinfo_get_response><goodsinfolist list="true"><poster_goods_info><num_id>1</num_id><poster_id>100</poster_id><title>吉他</title><short_title>吉他</short_title><price>100.00</price><note>白</note><url>http:</url><pic_id>123</pic_id></poster_goods_info></goodsinfolist></huabao_poster_goodsinfo_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.poster-not-exist:INVAILD_ID</code>
<desc>根据ID查询不到画报</desc>
<solution>选通过接口taobao.huabao.specialposters.get获取指定画报列表 ，再通过画报ID取得画报详情</solution>
</error>
</errors>
</api>
<api>
<cat>画报API</cat>
<name>taobao.huabao.posters.get</name>
<cname>取指定频道Id的画报列表</cname>
<authorize>不需用户授权</authorize>
<desc>取指定频道Id的画报列表，可以支持分页</desc>
<request>
<param>
<name>channel_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>频道的Id值</desc>
<sample>2000</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>查询返回的记录数</desc>
<sample>20</sample>
<default>20</default>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>当前页，默认为1（当输入为负，零，或者超出页数范围时，取默认值）</desc>
<sample>10</sample>
<default>1</default>
</param>
</request>
<response>
<param>
<name>posters</name>
<type>Poster</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>画报信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"huabao_posters_get_response":{"posters":{"poster":[{"id":"123456","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","title":"图片标题","short_title":"图片短标题","tags":"tag1,tag2","weight":5,"cover_urls":"http://www.taobao.com/XXXXXX","hits":100,"channel_id":"123456"}]}}}]]></json>
<xml><![CDATA[<huabao_posters_get_response><posters list="true"><poster><id>123456</id><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><title>图片标题</title><short_title>图片短标题</short_title><tags>tag1,tag2</tags><weight>5</weight><cover_urls>http:</cover_urls><hits>100</hits><channel_id>123456</channel_id></poster></posters></huabao_posters_get_response>]]></xml>
</sample>
</api>
<api>
<cat>画报API</cat>
<name>taobao.huabao.specialposters.get</name>
<cname>获取指定画报列表</cname>
<authorize>不需用户授权</authorize>
<desc>取指定频道Id的指定条数推荐画报</desc>
<request>
<param>
<name>channel_ids</name>
<type>Number</type>
<level>Basic Array</level>
<required>必须</required>
<desc>频道Id</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>number</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>返回的记录数，默认10条，最多20条，如果请求超过20或者小于等于10，则按10条返回 type为NEW时该参数无效,返回为指定频道的最新的一条记录</desc>
<sample>10</sample>
<default>10</default>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>类型可选：HOT(热门），RECOMMEND（推荐），NEW（最新）</desc>
<sample>HOT</sample>
<default/>
</param>
</request>
<response>
<param>
<name>posters</name>
<type>Poster</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>画报信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"huabao_specialposters_get_response":{"posters":{"poster":[{"id":"123456","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","title":"图片标题","short_title":"图片短标题","tags":"tag1,tag2","weight":5,"cover_urls":"http://www.taobao.com/XXXXXX","hits":100,"channel_id":"123456"}]}}}]]></json>
<xml><![CDATA[<huabao_specialposters_get_response><posters list="true"><poster><id>123456</id><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><title>图片标题</title><short_title>图片短标题</short_title><tags>tag1,tag2</tags><weight>5</weight><cover_urls>http:</cover_urls><hits>100</hits><channel_id>123456</channel_id></poster></posters></huabao_specialposters_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-paramete:type</code>
<desc>错误的type参数值</desc>
<solution>type必须是HOT 或 RECOMMEND之一</solution>
</error>
</errors>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.avgwaittime.get</name>
<cname>平均等待时长</cname>
<authorize>必须用户授权</authorize>
<desc>根据客服ID和日期，获取该客服"当日接待的所有客户的平均等待时长"。 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"当日接待的所有客户的平均等待时长"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"当日接待的所有客户的平均等待时长"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"当日接待的所有客户的平均等待时长"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaohello</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>开始时间</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>结束时间</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
</request>
<response>
<param>
<name>waiting_time_list_on_days</name>
<type>WaitingTimesOnDay</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc>平均等待时长</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_avgwaittime_get_response":{"result_code":0,"waiting_time_list_on_days":{"WaitingTimesOnDay":[{"waiting_date":"2000-01-01 00:00:00","waiting_time_list":{"service_staff_id":"cntaobaohello","avg_waiting_times":56}}]}}}]]></json>
<xml><![CDATA[<wangwang_eservice_avgwaittime_get_response><waiting_time_list_on_days><WaitingTimesOnDay><waiting_date>2000-01-01 00:00:00</waiting_date><waiting_time_by_ids><waiting_time_by_id><service_staff_id>cntaobaohello</service_staff_id><avg_waiting_times>56</avg_waiting_times><waiting_time_by_id><waiting_time_by_id><service_staff_id>cntaobaohello2</service_staff_id><avg_waiting_times>12</avg_waiting_times></waiting_time_by_id></waiting_time_by_ids></WaitingTimesOnDay><WaitingTimesOnDay><waiting_date>2000-01-01 00:00:00</waiting_date><waiting_time_by_ids><waiting_time_by_id><service_staff_id>cntaobaohello</service_staff_id><avg_waiting_times>56</avg_waiting_times><waiting_time_by_id><waiting_time_by_id><service_staff_id>cntaobaohello2</service_staff_id><avg_waiting_times>12</avg_waiting_times></waiting_time_by_id></waiting_time_by_ids></WaitingTimesOnDay></waiting_time_list_on_days></wangwang_eservice_avgwaittime_get_response><error_response><code>isv.invalid-parameter</code><msg>参数不合法</msg></error_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:service_staff_id</code>
<desc>缺少必要的参数service_staff_id</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:start_date</code>
<desc>缺少必要的参数start_date</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:end_date</code>
<desc>缺少必要的参数end_date</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1021</code>
<desc>参数start_date-and-end_date:无效:时间段超过7天</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1022</code>
<desc>参数start_date-and-end_date无效:开始日期不能晚于结束日期</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date</code>
<desc>参数start_date无效:不能查询90天前的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1023</code>
<desc>参数service_staff_id无效:id数超过30</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1024</code>
<desc>参数service_staff_id无效:service_staff_id中包含非本店铺账号</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1010</code>
<desc>权限不够:无权查看其他店铺帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1011</code>
<desc>权限不够:无权查看本店铺其他帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1012</code>
<desc>权限不够:无权查看其他组帐号数据</desc>
<solution/>
</error>
<error>
<code>isp.avgwaittime-service-notready</code>
<desc>不在服务提供时间段，服务提供时间（7:00:00-24:00:00）</desc>
<solution/>
</error>
<error>
<code>isp.avgwaittime-service-maintenance</code>
<desc>服务维护中</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1020</code>
<desc>参数start_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1020</code>
<desc>参数end_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1025</code>
<desc>参数start_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1025</code>
<desc>参数end_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1013</code>
<desc>权限不够:操作用户非E客服用户</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.chatlog.get</name>
<cname>获取具体的聊天记录</cname>
<authorize>可选用户授权</authorize>
<desc/>
<request>
<param>
<name>from_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>聊天消息被查询用户ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaotest</sample>
<default/>
</param>
<param>
<name>to_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>聊天消息相关方ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaotest</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>聊天消息起始时间，如2010-02-01</desc>
<sample>2010-02-01</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>聊天消息终止时间，如2010-03-24</desc>
<sample>2010-03-24</sample>
<default/>
</param>
<param>
<name>charset</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>字符集</desc>
<sample>utf-8</sample>
<default>utf-8</default>
</param>
</request>
<response>
<param>
<name>ret</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>10000</sample>
<desc>返回码。  
10000:成功；  
 
50000：时间非法，包括1)时间段超过7天,或2)起始时间距今超过30天，或3)时间格式不对；  
 
40000：聊天用户ID不是该店铺的帐号或子帐号查询主帐号私密联系人的聊天记录；  
 
30000：系统错误，包括必填参数为空。</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>123</sample>
<desc>聊天记录数目。</desc>
</param>
<param>
<name>msgs</name>
<type>Msg</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>聊天消息列表，即Msg[]，direction=0为from_id发送消息给to_id，direction=1为to_id发送消息给from_id</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_chatlog_get_response":{"ret":10000,"count":123,"msgs":{"Msg":[{"direction":1,"time":"2010-03-24","content":"你好，在吗？"}]}}}]]></json>
<xml><![CDATA[<wangwang_eservice_chatlog_get_response><ret>10000</ret><count>123</count><msgs list="true"><Msg><direction>1</direction><time>2010-03-24</time><content>你好，在吗？</content></Msg></msgs></wangwang_eservice_chatlog_get_response>]]></xml>
</sample>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.chatpeers.get</name>
<cname>获取聊天对象列表，查询时间段&lt;=7天,只支持xml返回</cname>
<authorize>可选用户授权</authorize>
<desc>获取聊天对象列表，查询时间段&lt;=7天,只支持xml返回</desc>
<request>
<param>
<name>chat_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>聊天用户ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaotest</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>查询起始日期。如2010-02-01，与当前日期间隔小于3个月。</desc>
<sample>2010-02-01</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>查询结束日期。如2010-03-24，与起始日期跨度不能超过7天</desc>
<sample>2010-03-24</sample>
<default/>
</param>
<param>
<name>charset</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>字符集</desc>
<sample>utf-8</sample>
<default>utf-8</default>
</param>
</request>
<response>
<param>
<name>ret</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>10000</sample>
<desc>返回码： 
10000:成功； 

60000：时间非法，包括1)时间段超过7天,或2)起始时间距今超过30天，或3)时间格式不对； 

50000：聊天用户ID不是该店铺的帐号； 

40000：系统错误，包括必填参数为空。</desc>
</param>
<param>
<name>count</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>123</sample>
<desc>成员数目。</desc>
</param>
<param>
<name>chatpeers</name>
<type>Chatpeer</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>聊天对象ID列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_chatpeers_get_response":{"ret":10000,"count":123,"chatpeer":{"ChatPeer":[{"uid":"cntaobaotest","date":"2010-02-01"}]}}}]]></json>
<xml><![CDATA[<wangwang_eservice_chatpeers_get_response><ret>10000</ret><count>123</count><chatpeer list="true"><ChatPeer><uid>cntaobaotest</uid><date>2010-02-01</date></ChatPeer></chatpeer></wangwang_eservice_chatpeers_get_response>]]></xml>
</sample>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.chatrecord.get</name>
<cname>聊天记录查询</cname>
<authorize>必须用户授权</authorize>
<desc>该接口会返回一个聊天记录的下载地址。 
请于5分钟以后使用该链接下载,该链接有如下限制： 
1.该链接的有效期为3个小时，逾期作废。 
2.同一链接只能使用一次。 
 
用户点击地址，下载聊天记录压缩包（压缩包中含有1个文件或多个文件，查询了几个用户的聊天记录，就含有几个文本文件）。  
 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"聊天记录"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"聊天记录"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"聊天记录"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询30天以前的记录 
    7、不能查询当天的数据</desc>
<request>
<param>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaohello,cntaobaoabc</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>开始日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>截止日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
</request>
<response>
<param>
<name>log_file_url</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>http://ltjl.wangwang.taobao.com/top/ecs/downLogFile.do?login_id=cntaobaoabc002&amp;ts=1283262864373&amp;r=39203bbe3bd64ff5b9ec5deb4a509221&amp;t=8b0f6e28136274d07e155e236dbc47e7</sample>
<desc>聊天日志文件下载url</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_chatRecord_get_response":{"result_code":0,"log_file_url":"downloadUrl?login_id=cntaobaohello&ts=123244354&f=35454355&token=fgjklewfsdkmvnuey"}}]]></json>
<xml><![CDATA[<wangwang_eservice_chatRecord_get_response><log_file_url>downloadUrl?login_id=cntaobaohello&ts=123244354&f=35454355&token=fgjklewfsdkmvnuey</log_file_url></wangwang_eservice_chatRecord_get_response><error_response><code>isv.invalid-parameter</code><msg>参数不合法</msg></error_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:service_staff_id</code>
<desc>缺少必要的参数service_staff_id</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:start_date</code>
<desc>缺少必要的参数start_date</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:end_date</code>
<desc>缺少必要的参数end_date</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1010</code>
<desc>权限不够:无权查看其他店铺帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1011</code>
<desc>权限不够:无权查看本店铺其他帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1012</code>
<desc>权限不够:无权查看其他组帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1021</code>
<desc>参数start_date-and-end_date:无效:时间段超过7天</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1022</code>
<desc>参数start_date-and-end_date无效:开始日期不能晚于结束日期</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date</code>
<desc>参数start_date无效:不能查询30天前的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1023</code>
<desc>参数service_staff_id无效:id数超过30</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1024</code>
<desc>参数service_staff_id无效:service_staff_id中包含非本店铺账号</desc>
<solution/>
</error>
<error>
<code>isp.chatrecord-service-maintenance</code>
<desc>服务维护中</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1020</code>
<desc>参数start_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1020</code>
<desc>参数end_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1025</code>
<desc>参数start_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1025</code>
<desc>参数end_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1013</code>
<desc>权限不够:操作用户非E客服用户</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.evaluation.get</name>
<cname>客服评价统计</cname>
<authorize>必须用户授权</authorize>
<desc>根据操作者ID，返回被查者ID指定日期内每个帐号每日的"客服评价统计" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"客服评价统计"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"客服评价统计"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"客服评价统计"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaohello</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>查询开始日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>查询结束日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
</request>
<response>
<param>
<name>staff_eval_stat_on_days</name>
<type>StaffEvalStatOnDay</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>客服平均统计列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_evaluation_get_response":{"result_code":0,"staff_eval_stat_list":{"staff_eval_stat_on_day":[{"eval_date":"2000-01-01 00:00:00","staff_eval_stat_list":{"service_staff_id":"cntaobaohello","evaluations":"111,222,333"}}]}}}]]></json>
<xml><![CDATA[<wangwang_eservice_evaluation_get_response><staff_eval_stat_on_days><staff_eval_stat_on_day><eval_date>2000-01-01 00:00:00</eval_date><staff_eval_stat_by_ids><staff_eval_stat_by_id><service_staff_id>cntaobaohello</service_staff_id><evaluations><evaluation><evaluation_name>很满意</evaluation_name><evaluation_num>111</evaluation_num></evaluation><evaluation><evaluation_name>满意</evaluation_name><evaluation_num>22</evaluation_num></evaluation></evaluations></staff_eval_stat_by_id></staff_eval_stat_by_ids></staff_eval_stat_on_day><staff_eval_stat_on_day><eval_date>2000-01-01 00:00:00</eval_date><staff_eval_stat_by_ids><staff_eval_stat_by_id><service_staff_id>cntaobaohello2</service_staff_id><evaluations><evaluation><evaluation_name>很满意</evaluation_name><evaluation_num>111</evaluation_num></evaluation><evaluation><evaluation_name>满意</evaluation_name><evaluation_num>22</evaluation_num></evaluation></evaluations></staff_eval_stat_by_id></staff_eval_stat_by_ids></staff_eval_stat_on_day></staff_eval_stat_on_days></wangwang_eservice_evaluation_get_response><error_response><code>isv.invalid-parameter</code><msg>参数不合法</msg></error_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:service_staff_id</code>
<desc>缺少必要的参数service_staff_id</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:start_date</code>
<desc>缺少必要的参数start_date</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:end_date</code>
<desc>缺少必要的参数end_date</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1021</code>
<desc>参数start_date-and-end_date:无效:时间段超过7天</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1022</code>
<desc>参数start_date-and-end_date无效:开始日期不能晚于结束日期</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date</code>
<desc>参数start_date无效:不能查询90天前的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1020</code>
<desc>参数start_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1020</code>
<desc>参数end_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1023</code>
<desc>参数service_staff_id无效:id数超过30</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1024</code>
<desc>参数service_staff_id无效:service_staff_id中包含非本店铺账号</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1010</code>
<desc>权限不够:无权查看其他店铺帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1011</code>
<desc>权限不够:无权查看本店铺其他帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1012</code>
<desc>权限不够:无权查看其他组帐号数据</desc>
<solution/>
</error>
<error>
<code>isp.evaluation-service-maintenance</code>
<desc>服务维护中</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1025</code>
<desc>参数start_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1025</code>
<desc>参数end_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1013</code>
<desc>权限不够:操作用户非E客服用户</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.groupmember.get</name>
<cname>获取组成员列表</cname>
<authorize>必须用户授权</authorize>
<desc>用某个组管理员账号查询，返回该组组名、和该组所有组成员ID（E客服的分流设置）。 
 
用旺旺主帐号查询，返回所有组的组名和该组所有组成员ID。 
 
返回的组成员ID可以是多个，用 "," 隔开。 
 
被查者ID只能传入一个。 
 
组成员中排名最靠前的ID是组管理员ID</desc>
<request>
<param>
<name>manager_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>被查询用户组管理员ID：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaotest</sample>
<default/>
</param>
</request>
<response>
<param>
<name>group_member_list</name>
<type>GroupMember</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>组及其成员列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_groupmember_get_response":{"result_code":0,"group_member_list":{"GroupMember":[{"group_name":"group1","member_list":"cntaobaohello,cntaobaoabc"}]}}]]></json>
<xml><![CDATA[<wangwang_eservice_groupmember_get_response><group_member_list><GroupMember><group_name>group1</group_name><member_list>cntaobaohello,cntaobaoabc</member_list></GroupMember><GroupMember><group_name>group2</group_name><member_list>cntaobaohello2,cntaobaoabc2</member_list></GroupMember></group_member_list></wangwang_eservice_groupmember_get_response><error_response><code>isv.invalid-parameter</code><msg>参数不合法</msg></error_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:manager_id</code>
<desc>缺少必要的参数manager_id</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:manager_id:1020</code>
<desc>manager_id不是本店铺帐号</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1010</code>
<desc>权限不够:操作者不是主帐号</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1011</code>
<desc>权限不够:manager_id为非组管理员账号</desc>
<solution/>
</error>
<error>
<code>isp.groupmember-service-maintenance</code>
<desc>服务维护中</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.noreplynum.get</name>
<cname>客服未回复人数</cname>
<authorize>必须用户授权</authorize>
<desc>根据操作者ID，返回被查者ID指定日期内每个帐号每日的"未回复情况" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"未回复情况"（未回复人数、未回复的ID）。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"未回复情况"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"未回复情况"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、开始时间与结束时间之间的间隔不能超过7天 
    6、不能查询90天以前的数据 
    7、不能查询当天的记录</desc>
<request>
<param>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaohello</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>开始日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>结束日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
</request>
<response>
<param>
<name>non_reply_stat_on_days</name>
<type>NonReplyStatOnDay</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>未回复统计列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_noreplynum_get_response":{"result_code":0,"non_reply_stat_on_days":{"NonReplyStatOnDay":[{"nonreply_date":"2000-01-01 00:00:00","nonreply_stat_list":{"service_staff_id":"cntaobaohello","non_reply_num":3,"non_reply_customId":"cntaobaohello,cntaobaoabc"}}]}}}]]></json>
<xml><![CDATA[<wangwang_eservice_noreplynum_get_response><non_reply_stat_on_days><NonReplyStatOnDay><nonreply_date>2000-01-01 00:00:00</nonreply_date><nonreply_stat_by_ids><nonreply_stat_by_id><service_staff_id>cntaobaohello</service_staff_id><non_reply_num>3</non_reply_num><non_reply_customId>cntaobaohello,cntaobaoabc</non_reply_customId></nonreply_stat_by_id><nonreply_stat_by_id><service_staff_id>cntaobaohello2</service_staff_id><non_reply_num>3</non_reply_num><non_reply_customId>cntaobaohello2,cntaobaoabc2</non_reply_customId></nonreply_stat_by_id></nonreply_stat_by_ids></NonReplyStatOnDay></non_reply_stat_on_days></wangwang_eservice_noreplynum_get_response><error_response><code>isv.invalid-parameter</code><msg>参数不合法</msg></error_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:service_staff_id</code>
<desc>缺少必要的参数service_staff_id</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:start_date</code>
<desc>缺少必要的参数start_date</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:end_date</code>
<desc>缺少必要的参数end_date</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1021</code>
<desc>参数start_date-and-end_date:无效:时间段超过7天</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1022</code>
<desc>参数start_date-and-end_date无效:开始日期不能晚于结束日期</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date</code>
<desc>参数start_date无效:不能查询90天前的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1020</code>
<desc>参数start_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1020</code>
<desc>参数end_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1023</code>
<desc>参数service_staff_id无效:id数超过30</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1024</code>
<desc>参数service_staff_id无效:service_staff_id中包含非本店铺账号</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1010</code>
<desc>权限不够:无权查看其他店铺帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1011</code>
<desc>权限不够:无权查看本店铺其他帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1012</code>
<desc>权限不够:无权查看其他组帐号数据</desc>
<solution/>
</error>
<error>
<code>isp.noreplynum-service-notready</code>
<desc>不在服务提供时间段，服务提供时间（7:00:00-24:00:00）</desc>
<solution/>
</error>
<error>
<code>isp.noreplynum-service-maintenance</code>
<desc>服务维护中</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1025</code>
<desc>参数start_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1025</code>
<desc>参数end_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1013</code>
<desc>权限不够:操作用户非E客服用户</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.onlinetime.get</name>
<cname>日累计在线时长</cname>
<authorize>必须用户授权</authorize>
<desc>描述：根据客服ID和日期，获取该客服"当日在线时长"。 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"当日在线时长"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"当日在线时长"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"当日在线时长"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    5、日累计在线时长定义：当日该用户累计的旺旺在线时长 
 
    6、开始时间与结束时间之间的间隔不能超过7天 
    7、不能查询90天以前的数据 
    8、不能查询当天的记录</desc>
<request>
<param>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaohello</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>开始日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>结束日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
</request>
<response>
<param>
<name>online_times_list_on_days</name>
<type>OnlineTimesOnDay</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>客服在线时长（按天统计，排列）</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_onlinetime_get_response":{"result_code":0,"online_times_list_on_days":{"online_times_on_day":[{"online_date":"2000-01-01 00:00:00","online_time_list":{"service_staff_id":"cntaobaohello","online_times":126}}]}}}]]></json>
<xml><![CDATA[<wangwang_eservice_onlinetime_get_response><online_times_list_on_days><online_times_on_day><online_date>2000-01-01 00:00:00</online_date><online_time_by_ids><online_time_by_id><service_staff_id>cntaobaohello</service_staff_id><online_times>126</online_times></online_time_by_id></online_time_by_ids></online_times_on_day><online_times_on_day><online_date>2000-01-01 00:00:00</online_date><online_time_by_ids><online_time_by_id><service_staff_id>cntaobaohello</service_staff_id><online_times>126</online_times></online_time_by_id></online_time_by_ids></online_times_on_day></online_times_list_on_days></wangwang_eservice_onlinetime_get_response><error_response><code>isv.invalid-parameter</code><msg>参数不合法</msg></error_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:service_staff_id</code>
<desc>缺少必要的参数service_staff_id</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:start_date</code>
<desc>缺少必要的参数start_date</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:end_date</code>
<desc>缺少必要的参数end_date</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1021</code>
<desc>参数start_date-and-end_date:无效:时间段超过7天</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1022</code>
<desc>参数start_date-and-end_date无效:开始日期不能晚于结束日期</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date</code>
<desc>参数start_date无效:不能查询90天前的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1023</code>
<desc>参数service_staff_id无效:id数超过30</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1024</code>
<desc>参数service_staff_id无效:service_staff_id中包含非本店铺账号</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1010</code>
<desc>权限不够:无权查看其他店铺帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1011</code>
<desc>权限不够:无权查看本店铺其他帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1012</code>
<desc>权限不够:无权查看其他组帐号数据</desc>
<solution/>
</error>
<error>
<code>isp.onlinetime-service-maintenance</code>
<desc>服务维护中</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1020</code>
<desc>参数start_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1020</code>
<desc>参数end_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1025</code>
<desc>参数start_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1025</code>
<desc>参数end_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1013</code>
<desc>权限不够:操作用户非E客服用户</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>旺旺API</cat>
<name>taobao.wangwang.eservice.receivenum.get</name>
<cname>客服接待数</cname>
<authorize>必须用户授权</authorize>
<desc>根据操作者ID，返回被查者ID指定时间段内每个帐号的"已接待人数" 
 
备注：1、如果是操作者ID=被查者ID，返回被查者ID的"已接待人数"。 
 
    2、如果操作者是组管理员，他可以查询他的组中的所有子帐号的"已接待人数"。 
 
    3、如果操作者是主账户，他可以查询所有子帐号的"已接待人数"。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
 
    5、规则：某客服在1天内和同一个客户交流了多次，已回复人数算1。 
 
    6、"已接待人数"定义：买家、卖家彼此发过至少1条消息 ，不论谁先发都可以。 
    4、被查者ID可以是多个，用 "," 隔开，id数不能超过30。 
    7、开始时间与结束时间之间的间隔不能超过7天 
    8、不能查询90天以前的数据 
    9、不能查询当天的记录</desc>
<request>
<param>
<name>service_staff_id</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>客服人员id：cntaobao+淘宝nick，例如cntaobaotest</desc>
<sample>cntaobaohello</sample>
<default/>
</param>
<param>
<name>start_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>查询接待人数的开始日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>查询接待人数的结束日期</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
</request>
<response>
<param>
<name>reply_stat_list_on_days</name>
<type>ReplyStatOnDay</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>客服回复列表，按天统计，排列</desc>
</param>
</response>
<sample>
<json><![CDATA[{"wangwang_eservice_receivenum_get_response":{"result_code":312,"reply_stat_list_On_days":{"ReplyStatList":[{"reply_date":"2000-01-01 00:00:00","reply_stat_on_day":{"user_id":"cntaobaohello","reply_num":3}}]}}}]]></json>
<xml><![CDATA[<wangwang_eservice_receivenum_get_response><reply_stat_list_On_days><reply_stat_on_day><reply_date>2000-01-01 00:00:00</reply_date><reply_stat_by_ids><reply_stat_by_id><user_id>cntaobaohello</user_id><reply_num>3</reply_num></reply_stat_by_id><reply_stat_by_id><user_id>cntaobaohello2</user_id><reply_num>3</reply_num></reply_stat_by_id></reply_stat_by_ids></reply_stat_on_day></reply_stat_list_On_days></wangwang_eservice_receivenum_get_response><error_response><code>isv.invalid-parameter</code><msg>参数不合法</msg></error_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:service_staff_id</code>
<desc>缺少必要的参数service_staff_id</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:start_date</code>
<desc>缺少必要的参数start_date</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:end_date</code>
<desc>缺少必要的参数end_date</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1021</code>
<desc>参数start_date-and-end_date:无效:时间段超过7天</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date-and-end_date:1022</code>
<desc>参数start_date-and-end_date无效:开始日期不能晚于结束日期</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date</code>
<desc>参数start_date无效:不能查询90天前的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1020</code>
<desc>参数start_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1020</code>
<desc>参数end_date无效:不能查询当天及以后的数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1023</code>
<desc>参数service_staff_id无效:id数超过30</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:service_staff_id:1024</code>
<desc>参数service_staff_id无效:service_staff_id中包含非本店铺账号</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1011</code>
<desc>权限不够:无权查看本店铺其他帐号数据</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1012</code>
<desc>权限不够:无权查看其他组帐号数据</desc>
<solution/>
</error>
<error>
<code>isp.receivenum-service-notready</code>
<desc>不在服务提供时间段，服务提供时间（7:00:00-24:00:00）</desc>
<solution/>
</error>
<error>
<code>isp.receivenum-service-maintenance</code>
<desc>服务维护中</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_date:1025</code>
<desc>参数start_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:end_date:1025</code>
<desc>参数end_date无效:格式不正确</desc>
<solution/>
</error>
<error>
<code>isv.invalid-permission:1013</code>
<desc>权限不够:操作用户非E客服用户</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.caturl.get</name>
<cname>淘宝客类目推广URL</cname>
<authorize>不需用户授权</authorize>
<desc>淘宝客类目推广URL</desc>
<request>
<param>
<name>q</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>关键词</desc>
<sample>abc</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>类目id.注意：这里的类目id是淘宝后台发布商品的类目id.</desc>
<sample>1255225</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>推广者的淘宝会员昵称.注：这里指的是淘宝的登录会员名</desc>
<sample>jayzhou</sample>
<default/>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
<sample>blog</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>taobaoke_item</name>
<type>TaobaokeItem</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>只返回taobaoke_cat_click_url</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_caturl_get_response":{"taobaoke_item":{"keyword_click_url":"http://www.taobao.com"}}}]]></json>
<xml><![CDATA[<taobaoke_caturl_get_response><taobaoke_item><keyword_click_url>http:</keyword_click_url></taobaoke_item></taobaoke_caturl_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>传入的nick不存在</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
<error>
<code>isv.invalid-parameter:outer_code</code>
<desc>参数：outer_code无效，格式不对、非法值、越界等</desc>
<solution>请在前端作好校验：英文和数字组成，长度不能大于12个字符，用于区分不同的推广渠道</solution>
</error>
</errors>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.items.convert</name>
<cname>淘客商品转换</cname>
<authorize>不需用户授权</authorize>
<desc>淘宝客商品转换</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:num_iid,title,nick,pic_url,price,click_url,commission,ommission_rate,commission_num,commission_volume,shop_click_url,seller_credit_score,item_location,volume
;字段之间用","分隔.</desc>
<sample>num_iid,click_url,iid,commission,commission_rate,commission_num,commission_volume</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>推广者的淘宝会员昵称.注：指的是淘宝的会员登录名</desc>
<sample>hz0799</sample>
<default/>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
<sample>bbs</sample>
<default/>
</param>
<param>
<name>num_iids</name>
<type>Number</type>
<level>Basic Array</level>
<required>必须</required>
<desc>淘宝客商品数字id串.最大输入50个.格式如:"value1,value2,value3" 用" , "号分隔商品数字id</desc>
<sample>1,2,3</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>taobaoke_items</name>
<type>TaobaokeItem</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>淘宝客商品对象列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1</sample>
<desc>返回的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_items_convert_response":{"taobaoke_items":{"taobaoke_item":[{"iid":"234","num_iid":123,"title":"1212","nick":"jayzhou","pic_url":"http://xnimg.cn/imgpro/logo/earthquake-white.gif","price":"12.15","click_url":"http://blog.open.taobao.com","commission":"12.15","commission_rate":"12%","commission_num":"123","commission_volume":"12.15","shop_click_url":"http://blog.open.taobao.com","seller_credit_score":12,"item_location":"北京"}]},"total_results":1}}]]></json>
<xml><![CDATA[<taobaoke_items_convert_response><taobaoke_items list="true"><taobaoke_item><iid>234</iid><num_iid>123</num_iid><title>1212</title><nick>jayzhou</nick><pic_url>http:</pic_url><price>12.15</price><click_url>http:</click_url><commission>12.15</commission><commission_rate>12%</commission_rate><commission_num>123</commission_num><commission_volume>12.15</commission_volume><shop_click_url>http:</shop_click_url><seller_credit_score>12</seller_credit_score><item_location>北京</item_location></taobaoke_item></taobaoke_items><total_results>1</total_results></taobaoke_items_convert_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:iids</code>
<desc>参数：iids无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:iids-or-num_iids</code>
<desc>参数：iid或numIid没有传入</desc>
<solution>请在前端作好校验，必须传入num_iid</solution>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>传入的nick不存在</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
<error>
<code>isv.invalid-parameter:num_iids</code>
<desc>参数：num_iids无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:outer_code</code>
<desc>参数：outer_code无效，格式不对、非法值、越界等</desc>
<solution>请在前端作好校验：英文和数字组成，长度不能大于12个字符，用于区分不同的推广渠道</solution>
</error>
</errors>
<faqs>
<faq>
<question>淘宝客商品转换是什么意思？</question>
<answer>通过淘宝客商品ID转换成推广商品并返回详细信息。</answer>
</faq>
</faqs>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.items.detail.get</name>
<cname>查询淘宝客推广商品详细信息</cname>
<authorize>不需用户授权</authorize>
<desc>查询淘宝客推广商品详细信息</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:TaobaokeItemDetail淘宝客商品结构体中的所有字段;字段之间用","分隔。item_detail需要设置到Item模型下的字段,如设置:num_iid,detail_url等; 只设置item_detail,则不返回的Item下的所有信息.注：item结构中的skus和videos不返回</desc>
<sample>num_iid,detail_url</sample>
<default/>
</param>
<param>
<name>num_iids</name>
<type>Number</type>
<level>Basic Array</level>
<required>必须</required>
<desc>淘宝客商品数字id串.最大输入10个.格式如:"value1,value2,value3" 用" , "号分隔商品id.</desc>
<sample>1,2,3</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘宝用户昵称，注：指的是淘宝的会员登录名.如果昵称错误,那么客户就收不到佣金.每个淘宝昵称都对应于一个pid，在这里输入要结算佣金的淘宝昵称，当推广的商品成功后，佣金会打入此输入的淘宝昵称的账户。具体的信息可以登入阿里妈妈的网站查看.</desc>
<sample>jayzhou</sample>
<default/>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
<sample>abc</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
<param>
<name>taobaoke_item_details</name>
<type>TaobaokeItemDetail</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>淘宝客商品对象列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_items_detail_get_response":{"total_results":1,"taobaoke_item_details":{"taobaoke_item_detail":[{"click_url":"http://taobao.xxx.com","shop_click_url":"http://easesou.taobao.com","seller_credit_score":90}]}}}]]></json>
<xml><![CDATA[<taobaoke_items_detail_get_response><total_results>1</total_results><taobaoke_item_details list="true"><taobaoke_item_detail><click_url>http:</click_url><shop_click_url>http:</shop_click_url><seller_credit_score>90</seller_credit_score></taobaoke_item_detail></taobaoke_item_details></taobaoke_items_detail_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter:nick-and-num_iid</code>
<desc>参数：nick，num_iid至少需要传一个</desc>
<solution>请在前端作好校验，必须传入num_iid</solution>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>传入的nick不存在</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
<error>
<code>isv.invalid-parameter:num_iids</code>
<desc>参数：num_iids无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.items.get</name>
<cname>查询淘宝客推广商品</cname>
<authorize>不需用户授权</authorize>
<desc>查询淘宝客推广商品</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:num_iid,title,nick,pic_url,price,click_url,commission,commission_rate,commission_num,commission_volume,shop_click_url,seller_credit_score,item_location,volume
;字段之间用","分隔</desc>
<sample>num_iid</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘宝用户昵称，注：指的是淘宝的会员登录名.如果昵称错误,那么客户就收不到佣金.每个淘宝昵称都对应于一个pid，在这里输入要结算佣金的淘宝昵称，当推广的商品成功后，佣金会打入此输入的淘宝昵称的账户。具体的信息可以登入阿里妈妈的网站查看.
&lt;font color="red"&gt;注意nick和pid至少需要传递一个,如果2个都传了,将以pid为准&lt;/font&gt;</desc>
<sample>jay</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>用户的pid,必须是mm_xxxx_0_0这种格式中间的"xxxx".
&lt;font color="red"&gt;注意nick和pid至少需要传递一个,如果2个都传了,将以pid为准,且pid的最大长度是20&lt;/font&gt;</desc>
<sample>mm_123456_0_0</sample>
<default/>
</param>
<param>
<name>keyword</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>商品标题中包含的关键字. 注意:查询时keyword,cid至少选择其中一个参数</desc>
<sample>abc</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>商品所属分类id</desc>
<sample>123</sample>
<default/>
</param>
<param>
<name>start_price</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>起始价格.传入价格参数时,需注意起始价格和最高价格必须一起传入,并且 start_price &lt;= end_price</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>end_price</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>最高价格</desc>
<sample>999</sample>
<default/>
</param>
<param>
<name>auto_send</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否自动发货</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>area</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品所在地</desc>
<sample>杭州</sample>
<default/>
</param>
<param>
<name>start_credit</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家信用: 
 
1heart(一心)  
2heart (两心)  
3heart(三心)  
4heart(四心)  
5heart(五心)  
1diamond(一钻)  
2diamond(两钻)  
3diamond(三钻)  
4diamond(四钻)  
5diamond(五钻)  
1crown(一冠)  
2crown(两冠)  
3crown(三冠)  
4crown(四冠)  
5crown(五冠)  
1goldencrown(一黄冠)  
2goldencrown(二黄冠)  
3goldencrown(三黄冠)  
4goldencrown(四黄冠)  
5goldencrown(五黄冠)</desc>
<sample>1heart</sample>
<default/>
</param>
<param>
<name>end_credit</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>可选值和start_credit一样.start_credit的值一定要小于或等于end_credit的值。注：end_credit与start_credit一起使用才生效</desc>
<sample>1heart</sample>
<default/>
</param>
<param>
<name>sort</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>默认排序:default 
 
price_desc(价格从高到低)  
price_asc(价格从低到高)  
credit_desc(信用等级从高到低)  
commissionRate_desc(佣金比率从高到底)  
commissionRate_asc(佣金比率从低到高)  
commissionNum_desc(成交量成高到低)  
commissionNum_asc(成交量从低到高)  
commissionVolume_desc(总支出佣金从高到底)  
commissionVolume_asc(总支出佣金从低到高)  
delistTime_desc(商品下架时间从高到底)  
delistTime_asc(商品下架时间从低到高)</desc>
<sample>price_desc</sample>
<default/>
</param>
<param>
<name>guarantee</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否查询消保卖家</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>start_commissionRate</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>起始佣金比率选项，如：1234表示12.34%</desc>
<sample>1234</sample>
<default/>
</param>
<param>
<name>end_commissionRate</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>最高佣金比率选项，如：2345表示23.45%。注：要起始佣金比率和最高佣金比率一起设置才有效。</desc>
<sample>2345</sample>
<default/>
</param>
<param>
<name>start_commissionNum</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>起始累计推广量佣金.注：返回的数据是30天内累计推广量，具该字段要与最高累计推广量一起使用才生效</desc>
<sample>1000</sample>
<default/>
</param>
<param>
<name>end_commissionNum</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>最高累计推广佣金选项</desc>
<sample>10000</sample>
<default/>
</param>
<param>
<name>start_totalnum</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>累计推广量范围开始</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>end_totalnum</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>累计推广量范围结束</desc>
<sample>10</sample>
<default/>
</param>
<param>
<name>cash_coupon</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否支持抵价券，设置为true表示该商品支持抵价券，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>vip_card</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否支持VIP卡，设置为true表示该商品支持VIP卡，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>overseas_item</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否海外商品，设置为true表示该商品是属于海外商品，默认为false</desc>
<sample>true</sample>
<default>false</default>
</param>
<param>
<name>sevendays_return</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否支持7天退换，设置为true表示该商品支持7天退换，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>real_describe</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否如实描述(即:先行赔付)商品，设置为true表示该商品是如实描述的商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>onemonth_repair</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否30天维修，设置为true表示该商品是支持30天维修，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>cash_ondelivery</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否支持货到付款，设置为true表示该商品是支持货到付款，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>mall_item</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>是否商城的商品，设置为true表示该商品是属于淘宝商城的商品，设置为false或不设置表示不判断这个属性</desc>
<sample>true</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>结果页数.1~99</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页返回结果数.最大每页40</desc>
<sample>40</sample>
<default>40</default>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
<sample>abc</sample>
<default/>
</param>
<param>
<name>is_mobile</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>标识一个应用是否来在无线或者手机应用,如果是true则会使用其他规则加密点击串.如果不穿值,则默认是false.</desc>
<sample>true</sample>
<default>false</default>
</param>
</request>
<response>
<param>
<name>taobaoke_items</name>
<type>TaobaokeItem</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>淘宝客商品对象列表.不返回taobaoke_cat_click_url和keyword_click_url两个字段。</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_items_get_response":{"taobaoke_items":{"taobaoke_item":[{"iid":"234","num_iid":123,"title":"1212","nick":"jayzhou","pic_url":"http://img01.taobaocdn.com/bao/uploaded/i1/T1GM8KXkheXXXz9q_b_093149.jpg","price":"12.15","click_url":"http://s.click.taobao.com/.....&p=mm_15999136_0_0&n=19&u=12001469","commission":"12.15","commission_rate":"12%","commission_num":"123","commission_volume":"12.15","shop_click_url":"http://s.click.taobao.com/.....&p=mm_15999136_0_0&n=19&u=12001469","seller_credit_score":12,"item_location":"北京","volume":100,"taobaoke_cat_click_url":"http://www.taobao.com","keyword_click_url":"http://www.taobao.com"}]},"total_results":1}}]]></json>
<xml><![CDATA[<taobaoke_items_get_response><taobaoke_items list="true"><taobaoke_item><iid>234</iid><num_iid>123</num_iid><title>1212</title><nick>jayzhou</nick><pic_url>http:</pic_url><price>12.15</price><click_url>http:</click_url><commission>12.15</commission><commission_rate>12%</commission_rate><commission_num>123</commission_num><commission_volume>12.15</commission_volume><shop_click_url>http:</shop_click_url><seller_credit_score>12</seller_credit_score><item_location>北京</item_location><volume>100</volume><taobaoke_cat_click_url>http:</taobaoke_cat_click_url><keyword_click_url>http:</keyword_click_url></taobaoke_item></taobaoke_items><total_results>1</total_results></taobaoke_items_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>传入的nick不存在</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
<error>
<code>isv.invalid-parameter:outer_code</code>
<desc>参数：outer_code无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:price</code>
<desc>参数：price无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.missing-parameter:nick-or-cid</code>
<desc>参数：nick或cid没有传入</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:sort</code>
<desc>参数：sort无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:rate_sum</code>
<desc>参数：rate_sum无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
</errors>
<faqs>
<faq>
<question>taobao.taobaoke.items.get输入参数sort中default的排序方式，默认为何种排序?</question>
<answer>默认是根据掌柜推荐的排序。</answer>
</faq>
<faq>
<question>taobao.taobaoke.items.get无法显示全部的页数?</question>
<answer>只能显示前100页，每页最多为40条</answer>
</faq>
</faqs>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.listurl.get</name>
<cname>淘宝客关键词搜索URL</cname>
<authorize>不需用户授权</authorize>
<desc>淘宝客关键词搜索URL</desc>
<request>
<param>
<name>q</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>关键词</desc>
<sample>abc</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>推广者的淘宝会员昵称.注：这里指的是淘宝的登录会员名</desc>
<sample>jayzhou</sample>
<default/>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
<sample>blog</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>taobaoke_item</name>
<type>TaobaokeItem</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>只返回keyword_click_url</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_listurl_get_response":{"taobaoke_item":{"keyword_click_url":"http://www.taobao.com"}}}]]></json>
<xml><![CDATA[<taobaoke_listurl_get_response><taobaoke_item><keyword_click_url>http:</keyword_click_url></taobaoke_item></taobaoke_listurl_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>传入的nick不存在</desc>
<solution>发生错误不要重试,清除本地数据库该用户资料，或者使用其他接口（如：taobao.item.get）来更新用户资料</solution>
</error>
</errors>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.report.get</name>
<cname>淘宝客报表查询</cname>
<authorize>必须用户授权</authorize>
<desc>淘宝客报表查询</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:TaobaokeReportMember淘宝客报表成员结构体中的所有字段;字段之间用","分隔.</desc>
<sample>trade_id,pay_time,pay_price,num_iid</sample>
<default/>
</param>
<param>
<name>date</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>需要查询报表的日期，有效的日期为最近3个月内的某一天，格式为:yyyyMMdd,如20090520.</desc>
<sample>20090520</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>当前页数.</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页返回结果数,默认是40条.最大每页40</desc>
<sample>40</sample>
<default>40</default>
</param>
</request>
<response>
<param>
<name>taobaoke_report</name>
<type>TaobaokeReport</type>
<level>Object</level>
<required>false</required>
<sample/>
<desc>淘宝客报表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_report_get_response":{"total_results":1000,"taobaoke_report":{"taobaoke_report_members":{"taobaoke_report_member":[{"app_key":"12","outer_code":"12","trade_id":12,"pay_time":"2000-01-01 00:00:00","pay_price":"12.15","num_iid":12,"item_title":"好","item_num":12,"category_id":12,"category_name":"12","shop_title":"很好","commission_rate":"1:2","commission":"12.15","iid":"12","seller_nick":"jayzhou"}]}}}}]]></json>
<xml><![CDATA[<taobaoke_report_get_response><total_results>1000</total_results><taobaoke_report><taobaoke_report_members list="true"><taobaoke_report_member><app_key>12</app_key><outer_code>12</outer_code><trade_id>12</trade_id><pay_time>2000-01-01 00:00:00</pay_time><pay_price>12.15</pay_price><num_iid>12</num_iid><item_title>好</item_title><item_num>12</item_num><category_id>12</category_id><category_name>12</category_name><shop_title>很好</shop_title><commission_rate>1:2</commission_rate><commission>12.15</commission><iid>12</iid><seller_nick>jayzhou</seller_nick></taobaoke_report_member></taobaoke_report_members></taobaoke_report></taobaoke_report_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:date-format</code>
<desc>参数：date-format无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.shops.convert</name>
<cname>淘客店铺转换</cname>
<authorize>不需用户授权</authorize>
<desc>淘宝客店铺转换</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:TaobaokeShop淘宝客商品结构体中的user_id,shop_title,click_url,commission_rate;字段之间用","分隔.</desc>
<sample>user_id,shop_title,click_url,commission_rate</sample>
<default/>
</param>
<param>
<name>sids</name>
<type>Number</type>
<level>Basic Array</level>
<required>必须</required>
<desc>店铺id串.最大输入10个.格式如:"value1,value2,value3" 用" , "号分隔店铺id.</desc>
<sample>1,2,3</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>推广者的淘宝会员昵称.注：这里指的是淘宝的登录会员名</desc>
<sample>hz0799</sample>
<default/>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
<sample>blog</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>taobaoke_shops</name>
<type>TaobaokeShop</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>淘宝客店铺对象列表,不能返回shop_type,seller_credit,auction_coun,
total_auction</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_shops_convert_response":{"taobaoke_shops":{"taobaoke_shop":[{"user_id":1212,"shop_title":"好","click_url":"http://blog.open.taobao.com","commission_rate":"12%"}]}}}]]></json>
<xml><![CDATA[<taobaoke_shops_convert_response><taobaoke_shops list="true"><taobaoke_shop><user_id>1212</user_id><shop_title>好</shop_title><click_url>http:</click_url><commission_rate>12%</commission_rate></taobaoke_shop></taobaoke_shops></taobaoke_shops_convert_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:outer_code</code>
<desc>参数：outer_code无效，格式不对、非法值、越界等</desc>
<solution>请在前端作好校验：英文和数字组成，长度不能大于12个字符，用于区分不同的推广渠道</solution>
</error>
</errors>
<faqs>
<faq>
<question>淘宝客店铺转换是什么意思？</question>
<answer>通过淘宝客店铺ID串转换成店铺推广URL。</answer>
</faq>
</faqs>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.shops.get</name>
<cname>淘宝客店铺搜索</cname>
<authorize>不需用户授权</authorize>
<desc>提供对参加了淘客推广的店铺的搜索</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段，目前包括如下字段 user_id click_url shop_title commission_rate seller_credit shop_type auction_count total_auction</desc>
<sample>click_url,shop_title</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>前台类目id</desc>
<sample>16</sample>
<default/>
</param>
<param>
<name>start_credit</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>店铺掌柜信用等级起始</desc>
<sample>1heart</sample>
<default/>
</param>
<param>
<name>end_credit</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>店铺掌柜信用等级查询结束</desc>
<sample>2heart</sample>
<default/>
</param>
<param>
<name>start_commissionrate</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>店铺佣金比例查询开始值，注意佣金比例是x10000的整数.50表示0.5%</desc>
<sample>50</sample>
<default/>
</param>
<param>
<name>end_commissionrate</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>店铺佣金比例查询结束值</desc>
<sample>150</sample>
<default/>
</param>
<param>
<name>start_auctioncount</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>店铺宝贝数查询开始值</desc>
<sample>10</sample>
<default/>
</param>
<param>
<name>end_auctioncount</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>店铺商品数查询结束值</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>start_totalaction</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>店铺累计推广量开始值</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>end_totalaction</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>店铺累计推广数查询结束值</desc>
<sample>200</sample>
<default/>
</param>
<param>
<name>only_mall</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否只显示商城店铺</desc>
<sample>true</sample>
<default>false</default>
</param>
<param>
<name>keyword</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>店铺主题关键字查询</desc>
<sample>手机</sample>
<default/>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
<sample>bbs</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码.结果页1~99</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数.最大每页40</desc>
<sample>40</sample>
<default>40</default>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘宝用户昵称，注：指的是淘宝的会员登录名.如果昵称错误,那么客户就收不到佣金.每个淘宝昵称都对应于一个pid，在这里输入要结算佣金的淘宝昵称，当推广的商品成功后，佣金会打入此输入的淘宝昵称的账户。具体的信息可以登入阿里妈妈的网站查看</desc>
<sample>taobaoApp</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>Number</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘客用户的pid,用于生成点击串.nick和pid都传入的话,以pid为准</desc>
<sample>123456</sample>
<default/>
</param>
</request>
<response>
<param>
<name>taobaoke_shops</name>
<type>TaobaokeShop</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>搜索结果列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>100</sample>
<desc>符合条件的店铺总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_shops_get_response":{"taobaoke_shops":{"taobaoke_shop":[{"user_id":1212,"shop_title":"好","click_url":"http://blog.open.taobao.com","commission_rate":"1.5","seller_credit":"14","shop_type":"B","auctionCount":"100","total_auction":"200"}]},"total_results":100}}]]></json>
<xml><![CDATA[<taobaoke_shops_get_response><taobaoke_shops list="true"><taobaoke_shop><user_id>1212</user_id><shop_title>好</shop_title><click_url>http:</click_url><commission_rate>1.5</commission_rate><seller_credit>14</seller_credit><shop_type>B</shop_type><auctionCount>100</auctionCount><total_auction>200</total_auction></taobaoke_shop></taobaoke_shops><total_results>100</total_results></taobaoke_shops_get_response>]]></xml>
</sample>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.tool.relation</name>
<cname>工具联盟注册校验</cname>
<authorize>不需用户授权</authorize>
<desc>判断用户pid是否是appkey关联的注册用户</desc>
<request>
<param>
<name>pubid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>用户的pubid 用来判断这个pubid是否是appkey关联的开发者的注册用户</desc>
<sample>12345678</sample>
<default/>
</param>
</request>
<response>
<param>
<name>tools_user</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>返回true或false表示是否关联用户</desc>
</param>
</response>
<sample>
<json><![CDATA[{
    "taobaoke_tool_relation_response": {
        "tools_user": true
    }
}]]></json>
<xml><![CDATA[<taobaoke_tool_relation_response>
    <tools_user>
        true
    </tools_user>
</taobaoke_tool_relation_response>]]></xml>
</sample>
</api>
<api>
<cat>淘客API</cat>
<name>taobao.taobaoke.virtualcard.get</name>
<cname>虚拟卡查询</cname>
<authorize>不需用户授权</authorize>
<desc>虚拟点卡充值卡电话卡等查询</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘宝用户昵称，注：指的是淘宝的会员登录名.如果昵称错误,那么客户就收不到佣金.每个淘宝昵称都对应于一个pid，在这里输入要结算佣金的淘宝昵称，当推广的商品成功后，佣金会打入此输入的淘宝昵称的账户。具体的信息可以登入阿里妈妈的网站查看</desc>
<sample>test</sample>
<default/>
</param>
<param>
<name>pid</name>
<type>String</type>
<level>Basic</level>
<required>特殊可选</required>
<desc>淘客id</desc>
<sample>1234567</sample>
<default/>
</param>
<param>
<name>biz_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>电话卡或游戏点卡标记. 
电话卡：phoneCard，游戏卡：gameCard 
 
注意:如果是电话卡查询,则 area,operator,price,card_type都是必须的参数.  
如果是游戏卡查询,则game_name,price,card_type是必须参数</desc>
<sample>phoneCard</sample>
<default/>
</param>
<param>
<name>card_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>电话充值卡类型. 
卖家代充：autoship，自动发货：autopost，10分钟代充：10minship</desc>
<sample>autoship</sample>
<default/>
</param>
<param>
<name>area</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>电话卡地区目前只有如下地区支持: 
浙江 
				上海 
				北京 
				广东 
				江苏 
				山东 
				福建 
				辽宁 
				河南 
				四川 
				湖北 
				天津 
				湖南 
				河北 
				重庆 
				云南 
				新疆 
				西藏 
				青海 
				宁夏 
				内蒙 
				江西 
				吉林 
				黑龙江 
				海南 
				贵州 
				广西 
				甘肃 
				安徽 
				陕西 
				山西</desc>
<sample>浙江</sample>
<default/>
</param>
<param>
<name>operator</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>电话卡运营商. 
1:移动 2:联通 3:电信</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>price</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>充值卡面值.目前只支持如下面值: 
  1, 
        10,  
        20,  
        30,  
        50,  
        100, 
        200, 
        300, 
        500,  
        1000</desc>
<sample>30</sample>
<default/>
</param>
<param>
<name>game_name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>游戏名,目前只支持如下游戏: 
魔兽世界 
				永恒之塔 
				奇迹世界 
				征途 
				热血传奇 
				传奇世界 
				梦幻西游 
				大话西游 
				大唐豪侠 
				天龙八部 
				完美世界 
				魔域 
				诛仙 
				热血江湖 
				问道 
				劲舞团 
				完美世界国际版 
				剑侠世界 
				武林外传 
				剑情网络版 
				剑侠情缘 
				封神榜 
				QQ幻想 
				泡泡堂 
				冒险岛 
				水浒Q传 
				彩虹岛 
				街头篮球 
				跑跑卡丁车 
				三国群英传 
				惊天动地 
				超级舞者 
				梦幻国度 
				天堂 
				风云 
				卓越之剑 
				华夏 
				联众世界 
				浩方 
				春秋Q传 
				刀剑英雄 
				新英雄年代 
				信长之野望 
				热舞派对 
				赤壁 
				大话西游外传 
				SD敢达 
				穿越火线 
				QQ自由幻想 
				QQ三国 
				QQ华夏 
				传奇外传 
				封神榜 
				地下城与勇士</desc>
<sample>魔兽世界</sample>
<default/>
</param>
<param>
<name>outer_code</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>自定义输入串.格式:英文和数字组成;长度不能大于12个字符,区分不同的推广渠道,如:bbs,表示bbs为推广渠道;blog,表示blog为推广渠道.</desc>
<sample>bbs</sample>
<default/>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需返回的字段列表.可选值:num_iid,title,nick,pic_url,price,click_url,commission,ommission_rate,commission_num,commission_volume,shop_click_url,seller_credit_score,item_location,volume ;字段之间用","分隔</desc>
<sample>num_iid</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>结果页数.1~99</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页返回结果数.最大每页40</desc>
<sample>40</sample>
<default>40</default>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>10</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
<param>
<name>taobaoke_items</name>
<type>TaobaokeItem</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>淘宝客商品对象列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taobaoke_virtualcard_get_response":{"total_results":10,"taobaoke_items":{"taobaoke_item":[{"iid":"234","num_iid":123,"title":"1212","nick":"jayzhou","pic_url":"http://img01.taobaocdn.com/bao/uploaded/i1/T1GM8KXkheXXXz9q_b_093149.jpg","price":"12.15","click_url":"http://s.click.taobao.com/.....&p=mm_15999136_0_0&n=19&u=12001469","commission":"12.15","commission_rate":"12%","commission_num":"123","commission_volume":"12.15","shop_click_url":"http://s.click.taobao.com/.....&p=mm_15999136_0_0&n=19&u=12001469","seller_credit_score":12,"item_location":"北京","volume":100,"taobaoke_cat_click_url":"http://www.taobao.com","keyword_click_url":"http://www.taobao.com"}]}}}]]></json>
<xml><![CDATA[<taobaoke_virtualcard_get_response><total_results>10</total_results><taobaoke_items list="true"><taobaoke_item><iid>234</iid><num_iid>123</num_iid><title>1212</title><nick>jayzhou</nick><pic_url>http:</pic_url><price>12.15</price><click_url>http:</click_url><commission>12.15</commission><commission_rate>12%</commission_rate><commission_num>123</commission_num><commission_volume>12.15</commission_volume><shop_click_url>http:</shop_click_url><seller_credit_score>12</seller_credit_score><item_location>北京</item_location><volume>100</volume><taobaoke_cat_click_url>http:</taobaoke_cat_click_url><keyword_click_url>http:</keyword_click_url></taobaoke_item></taobaoke_items></taobaoke_virtualcard_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.taobaoke-service-unavailable</code>
<desc>查询失败,服务不可用.</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>增量API</cat>
<name>taobao.increment.app.subscribe</name>
<cname>ISV订阅增量消息</cname>
<authorize>不需用户授权</authorize>
<desc>此接口用于ISV订阅增量消息。  
只有开通了增量消息角色的ISV才能开通增量消息的服务  
如果ISV已经开通了增量消息服务，重复开通会跟据传入的参数更新ISV的服务记录（如：订阅字段、有效期限等等）  
传入的topics消息类型的数量和顺序要和传入的status消息状态所属的类型的数量和顺序要一致。传了某个消息类型的topic却传入他对应位置的status为""(空字符串)时表示订阅这个topic下的所有消息  
每次订阅操作如果是更新旧有数据，那么会进行替换操作，即：会使用当前传入要更新的数据置换久的数据，而不会执行合并的操作。例如：以前订阅了trade的所有消息，这次更新的时候传入了topic为refund，status为RefundSuccess。那么此时用户不是既定阅了交易所有的消息又定了退款成功的消息，而是只订阅了退款成功的消息。</desc>
<request>
<param>
<name>topics</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>要订阅的消息类别。可多个类别同时订阅，每种类型之间以";"分隔。具体选值请见：增量消息类型说明。例如，如果要同时订阅交易，退款，商品的消息传入的字符串就是"trade;refund;item"</desc>
<sample>trade;refund;item</sample>
<default/>
</param>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>要订阅的消息状态。可选值有：商品消息状态、退款消息状态、交易消息状态里面的状态类型。status字段支持多个状态同时订阅。每个大类的状态（商品消息状态里的所有消息状态属于同一个大类，退款消息状态里的所有消息状态属于同一个大类，交易消息状态里的所有消息状态属于同一个大类）要合并到一起传入。每个大类的消息内部用","连接，大类之间用";"连接。另，大类的排列顺序要和topics入参中类型的顺序一一对应，如果不传具体某个大类的消息而传入all，表示订阅这个大类下所有的消息状态。如：传入了topics="trade;refund;item"时：当传入status="all;all;all"表示我订阅者三种类型消息下的所有状态的消息；当传入status="TradeCreate,TradeSuccess;all;ItemDelete"表示我订阅交易类型下的交易创建和交易成功的消息，退款类型下的所有退款相关消息，商品下的商品删除的消息。</desc>
<sample>TradeCreate,TradeSuccess;all;ItemDelete</sample>
<default/>
</param>
<param>
<name>duration</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>ISV订阅服务时间，以月计算。目前可选值：1、3、6、12四种时间间隔。如果ISV属于淘宝的合作伙伴或者是自用型，可以选择订阅时间为-1（表示永久订阅）</desc>
<sample>1</sample>
<default/>
</param>
</request>
<response>
<param>
<name>subscribe_message</name>
<type>SubscribeMessage</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>ISV的订购信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"increment_app_subscribe_response":{"subscribe_message":{"app_key":"12023790","start_date":"2000-01-01 00:00:00","end_date":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","subscriptions":{"subscription":[{"topic":"trade","status":"ItemAdd"}]}}}}]]></json>
<xml><![CDATA[<increment_app_subscribe_response><subscribe_message><app_key>12023790</app_key><start_date>2000-01-01 00:00:00</start_date><end_date>2000-01-01 00:00:00</end_date><modified>2000-01-01 00:00:00</modified><subscriptions><subscription><topic>trade</topic><status>ItemAdd</status></subscription></subscriptions></subscribe_message></increment_app_subscribe_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:app_level</code>
<desc>参数：app_level无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.parameters-mismatch:status-and-topics</code>
<desc>参数：statustopics不匹配</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>增量API</cat>
<name>taobao.increment.authorizemessages.get</name>
<cname>用户授权信息查询</cname>
<authorize>不需用户授权</authorize>
<desc>taobao.increment.authorizemessages.get</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。具体字段间AuthorizeMessage说明</desc>
<sample>app_key,nick,start_date,end_date,created,modified,status</sample>
<default/>
</param>
<param>
<name>nicks</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>用户昵称列表，每个nick之间以","间隔，一次不超过20个</desc>
<sample>nick1,nick2,nick3</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1,即返回第一页数据。</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40。注：只有不指定nick参数时分页才有作用。</desc>
<sample>40</sample>
<default>40</default>
</param>
</request>
<response>
<param>
<name>authorize_messages</name>
<type>AuthorizeMessage</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>用户授权信息列表</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1</sample>
<desc>符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"increment_authorizemessages_get_response":{"authorize_messages":{"authorize_message":[{"app_key":"12023790","nick":"我是一个用户名","start_date":"2000-01-01 00:00:00","end_date":"2000-01-01 00:00:00","created":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","status":"normal"}]},"total_results":123}}]]></json>
<xml><![CDATA[<increment_authorizemessages_get_response><authorize_messages list="true"><authorize_message><app_key>12023790</app_key><nick>我是一个用户名</nick><start_date>2000-01-01 00:00:00</start_date><end_date>2000-01-01 00:00:00</end_date><created>2000-01-01 00:00:00</created><modified>2000-01-01 00:00:00</modified><status>normal</status></authorize_message></authorize_messages><total_results>123</total_results></increment_authorizemessages_get_response>]]></xml>
</sample>
</api>
<api>
<cat>增量API</cat>
<name>taobao.increment.items.get</name>
<cname>获取商品变更通知信息</cname>
<authorize>不需用户授权</authorize>
<desc>自用型应用：执行taobao.increment.app.subscribe进行订阅，设置duration参数值为-1。自用型应用订阅后默认会自动进行一次授权，授权时间是永远有效。  
他用型应用：首先，执行taobao.increment.app.subscribe进行订阅，设置合理的duration参数（如果为淘宝合作伙伴应用可以设置为-1）；然后执行taobao.increment.user.authorize进行用户授权。  
授权后，应用即可通过taobao.increment.items.get、taobao.increment.trades.get或taobao.increment.refunds.get获取已授权用户的增量数据。  
</desc>
<request>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>商品操作状态，默认查询所有状态的数据，除了默认值外每次只能查询一种状态。具体类型列表见： 
ItemAdd（新增商品）  
ItemUpshelf（上架商品）  
ItemDownshelf（下架商品）  
ItemDelete（删除商品）  
ItemUpdate（更新商品）  
ItemRecommendDelete（取消橱窗推荐商品）  
ItemRecommendAdd（橱窗推荐商品）  
ItemZeroStock（商品卖空）</desc>
<sample>ItemAdd</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所属于的用户的昵称。设置此参数，返回的消息会根据传入nick的进行过滤。自用型AppKey的昵称默认为自己的绑定昵称，此参数无效。</desc>
<sample>我是一个用户名</sample>
<default/>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所对应的操作时间的最小值。和end_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了end_modified，默认为与 end_modified同一天的00:00:00，否则默认为调用接口当天的00:00:00。（格式：yyyy-MM-dd HH:mm:ss）</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所对应的操作时间的最大值。和start_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了start_modified，默认为与start_modified同一天的23:59:59；否则默认为调用接口当天的23:59:59。（格式：yyyy-MM-dd HH:mm:ss）</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1,即返回第一页数据。</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40。</desc>
<sample>40</sample>
<default>40</default>
</param>
</request>
<response>
<param>
<name>notify_items</name>
<type>NotifyItem</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc/>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>10</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"increment_items_get_response":{"notify_items":{"notify_item":[{"iid":"123456","num_iid":123456,"title":"淘宝手机，500元一部","nick":"我是一个用户名","num":123,"status":"ItemAdd","changed_fields":"title,price","price":"10.80","modified":"2000-01-01 00:00:00"}]},"total_results":10}}]]></json>
<xml><![CDATA[<increment_items_get_response><notify_items list="true"><notify_item><iid>123456</iid><num_iid>123456</num_iid><title>淘宝手机，500元一部</title><nick>我是一个用户名</nick><num>123</num><status>ItemAdd</status><changed_fields>title,price</changed_fields><price>10.80</price><modified>2000-01-01 00:00:00</modified></notify_item></notify_items><total_results>10</total_results></increment_items_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>user 不存在</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:status</code>
<desc>参数：status无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>增量API</cat>
<name>taobao.increment.refunds.get</name>
<cname>获取退款变更通知信息</cname>
<authorize>不需用户授权</authorize>
<desc>自用型应用：执行taobao.increment.app.subscribe进行订阅，设置duration参数值为-1。自用型应用订阅后默认会自动进行一次授权，授权时间是永远有效。  
他用型应用：首先，执行taobao.increment.app.subscribe进行订阅，设置合理的duration参数（如果为淘宝合作伙伴应用可以设置为-1）；然后执行taobao.increment.user.authorize进行用户授权。  
授权后，应用即可通过taobao.increment.items.get、taobao.increment.trades.get或taobao.increment.refunds.get获取已授权用户的增量数据。  
</desc>
<request>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>退款操作状态，默认查询所有状态的数据，除了默认值外每次只能查询一种状态。具体字段说明请见 退款消息状态</desc>
<sample>RefundSuccess</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所属于的用户的昵称。设置此参数，返回的消息会根据传入nick的进行过滤。自用型appKey的昵称默认为自己的绑定昵称，此参数无效。</desc>
<sample>hz0799</sample>
<default/>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所对应的操作时间的最小值。和end_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了end_modified，默认为与 end_modified同一天的00:00:00，否则默认为调用接口当天的00:00:00。（格式：yyyy-MM-dd HH:mm:ss）</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所对应的操作时间的最大值。和start_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了start_modified，默认为与start_modified同一天的23:59:59；否则默认为调用接口当天的23:59:59。（格式：yyyy-MM-dd HH:mm:ss）</desc>
<sample>2000-01-01 23:59:59</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1,即返回第一页数据。</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40。</desc>
<sample>40</sample>
<default>40</default>
</param>
</request>
<response>
<param>
<name>notify_refunds</name>
<type>NotifyRefund</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>获取的退款通知消息体 ，具体字段见NotifyRefund数据结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"increment_refunds_get_response":{"notify_refunds":{"notify_refund":[{"rid":123456,"tid":123456,"oid":123456,"seller_nick":"我是一个用户名","buyer_nick":"我是一个用户名","refund_fee":"10.80","status":"RefundSuccess","modified":"2000-01-01 00:00:00"}]},"total_results":1}}]]></json>
<xml><![CDATA[<increment_refunds_get_response><notify_refunds list="true"><notify_refund><rid>123456</rid><tid>123456</tid><oid>123456</oid><seller_nick>我是一个用户名</seller_nick><buyer_nick>我是一个用户名</buyer_nick><refund_fee>10.80</refund_fee><status>RefundSuccess</status><modified>2000-01-01 00:00:00</modified></notify_refund></notify_refunds><total_results>1</total_results></increment_refunds_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:start_modified-or-end_modified</code>
<desc>参数：start_modified和end_modified无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>user 不存在</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>增量API</cat>
<name>taobao.increment.subscribemessage.get</name>
<cname>ISV订阅信息查询</cname>
<authorize>不需用户授权</authorize>
<desc>此接口用于ISV查询订阅信息。</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>需要返回的字段。具体字段间SubscribeMessage说明</desc>
<sample>app_key,start_date,end_date,subscription,modified</sample>
<default/>
</param>
</request>
<response>
<param>
<name>subscribe_message</name>
<type>SubscribeMessage</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>ISV增量消息订阅信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"increment_subscribemessage_get_response":{"subscribe_message":{"app_key":"12023790","start_date":"2000-01-01 00:00:00","end_date":"2000-01-01 00:00:00","modified":"2000-01-01 00:00:00","subscriptions":{"subscription":[{"topic":"trade","status":"ItemAdd"}]}}}}]]></json>
<xml><![CDATA[<increment_subscribemessage_get_response><subscribe_message><app_key>12023790</app_key><start_date>2000-01-01 00:00:00</start_date><end_date>2000-01-01 00:00:00</end_date><modified>2000-01-01 00:00:00</modified><subscriptions list="true"><subscription><topic>trade</topic><status>ItemAdd</status></subscription></subscriptions></subscribe_message></increment_subscribemessage_get_response>]]></xml>
</sample>
</api>
<api>
<cat>增量API</cat>
<name>taobao.increment.trades.get</name>
<cname>获取交易和评价变更通知信息</cname>
<authorize>不需用户授权</authorize>
<desc>自用型应用：执行taobao.increment.app.subscribe进行订阅，设置duration参数值为-1。自用型应用订阅后默认会自动进行一次授权，授权时间是永远有效。  
他用型应用：首先，执行taobao.increment.app.subscribe进行订阅，设置合理的duration参数（如果为淘宝合作伙伴应用可以设置为-1）；然后执行taobao.increment.user.authorize进行用户授权。  
授权后，应用即可通过taobao.increment.items.get、taobao.increment.trades.get或taobao.increment.refunds.get获取已授权用户的增量数据。  
</desc>
<request>
<param>
<name>status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易或评价的状态，默认查询所有状态的数据，除了默认值外每次只能查询一种状态。除了交易超时提醒消息没有type分类以外，交易的其他消息都有type分类。 
可选值  
TradeCreate（创建交易）  
TradeModifyFee（修改交易费用）  
TradeCloseAndModifyDetailOrder（关闭或修改子订单）  
TradeClose（关闭交易）  
TradeBuyerPay（买家付款）  
TradeSellerShip（卖家发货）  
TradeDelayConfirmPay（延长收货时间）  
TradePartlyRefund（子订单退款成功）  
TradePartlyConfirmPay（子订单打款成功）  
TradeSuccess（交易成功）  
TradeTimeoutRemind（交易超时提醒）  
TradeRated（交易评价变更）  
TradeMemoModified（交易备注修改）  
TradeLogisticsAddressChanged（修改交易收货地址）  
TradeChanged（修改订单信息（SKU等））</desc>
<sample>TradeCreate</sample>
<default/>
</param>
<param>
<name>type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>交易所属的类型，默认查询所有类型的数据，除了默认值外每次只能查询一种类型。交易超时提醒类型的消息没有消息类型，固定返回“timeout”。 
可选值： 
ec（直冲）  
guarantee_trade（一口价、拍卖）  
auto_delivery（自动发货）  
cod（货到付款）  
independent_shop_trade（旺店标准版交易）  
independent_simple_trade（旺店入门版交易）  
shopex_trade（ShopEX版)  
netcn_trade（淘宝与万网合作版网）  
travel（旅游产品交易）  
fenxiao（分销平台交易）  
game_equipment（网游虚拟交易）</desc>
<sample>independent_shop_trade</sample>
<default/>
</param>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所属于的用户的昵称。设置此参数，返回的消息会根据传入nick的进行过滤。自用型appKey的昵称默认为自己的绑定昵称，此参数无效。</desc>
<sample>我是一个用户名</sample>
<default/>
</param>
<param>
<name>start_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所对应的操作时间的最小值。和end_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了end_modified，默认为与end_modified同一天的00:00:00，否则默认为调用接口当天的00:00:00。（格式：yyyy-MM-dd HH:mm:ss）</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_modified</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>消息所对应的操作时间的最大值。和start_modified搭配使用能过滤消通知消息的时间段。不传时：如果设置了start_modified，默认为与start_modified同一天的23:59:59；否则默认为调用接口当天的23:59:59。（格式：yyyy-MM-dd HH:mm:ss）</desc>
<sample>2000-01-01 00:00:00</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。取值范围:大于零的整数; 默认值:1,即返回第一页数据。</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数。取值范围:大于零的整数;最大值:200;默认值:40。</desc>
<sample>40</sample>
<default>40</default>
</param>
</request>
<response>
<param>
<name>notify_trades</name>
<type>NotifyTrade</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>获取的交易通知消息体 ，具体字段见NotifyTrade数据结构</desc>
</param>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>123</sample>
<desc>搜索到符合条件的结果总数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"increment_trades_get_response":{"notify_trades":{"notify_trade":[{"tid":123456,"seller_nick":"我是一个用户名","buyer_nick":"我是一个用户名","payment":"10.80","is_3D":true,"type":"cod","status":"TradeClose","modified":"2000-01-01 00:00:00"}]},"total_results":123}}]]></json>
<xml><![CDATA[<increment_trades_get_response><notify_trades list="true"><notify_trade><tid>123456</tid><seller_nick>我是一个用户名</seller_nick><buyer_nick>我是一个用户名</buyer_nick><payment>10.80</payment><is_3D>true</is_3D><type>cod</type><status>TradeClose</status><modified>2000-01-01 00:00:00</modified></notify_trade></notify_trades><total_results>123</total_results></increment_trades_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.invalid-parameter:status</code>
<desc>参数：status无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.invalid-parameter:start_modified-or-end_modified</code>
<desc>参数：start_modified和end_modified无效，格式不对、非法值、越界等</desc>
<solution/>
</error>
<error>
<code>isv.user-not-exist:invalid-nick</code>
<desc>user 不存在</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>系统API</cat>
<name>taobao.time.get</name>
<cname>获取淘宝系统当前时间</cname>
<authorize>不需用户授权</authorize>
<desc>获取淘宝系统当前时间</desc>
<response>
<param>
<name>time</name>
<type>Date</type>
<level>Basic</level>
<required>true</required>
<sample>2000-01-01 00:00:00</sample>
<desc>淘宝系统当前时间。格式:yyyy-MM-dd HH:mm:ss</desc>
</param>
</response>
<sample>
<json><![CDATA[{
    "time_get_response": {
        "time": "2000-01-01 00:00:00"
    }
}]]></json>
<xml><![CDATA[<time_get_response>
    <time>
        2000-01-01 00:00:00
    </time>
</time_get_response>]]></xml>
</sample>
</api>
<api>
<cat>信息安全API</cat>
<name>taobao.kfc.keyword.search</name>
<cname>关键词过滤匹配</cname>
<authorize>必须用户授权</authorize>
<desc>对输入的文本信息进行禁忌关键词匹配，返回匹配的结果</desc>
<request>
<param>
<name>nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>发布信息的淘宝会员名，可以不传</desc>
<sample>淘宝会员名</sample>
<default/>
</param>
<param>
<name>content</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>需要过滤的文本信息</desc>
<sample>文本信息</sample>
<default/>
</param>
<param>
<name>apply</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>应用点，分为一级应用点、二级应用点。其中一级应用点通常是指某一个系统或产品，比如淘宝的商品应用（taobao_auction）；二级应用点，是指一级应用点下的具体的分类，比如商品标题(title)、商品描述(content)。不同的二级应用可以设置不同关键词。 
 
这里的apply参数是由一级应用点与二级应用点合起来的字符（一级应用点+"."+二级应用点），如taobao_auction.title。 
 
 
通常apply参数是不需要传递的。如有特殊需求（比如特殊的过滤需求，需要自己维护一套自己词库），需传递此参数。</desc>
<sample>taobao_auction.title</sample>
<default/>
</param>
</request>
<response>
<param>
<name>kfc_search_result</name>
<type>KfcSearchResult</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>KFC关键词匹配返回的结果信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"kfc_keyword_search_sns_response":{"KfcSearchResult":{"matched":true,"level":"A","content":"你好，***，世界"}}}]]></json>
<xml><![CDATA[<<kfc_keyword_search_sns_response><KfcSearchResult><matched>true</matched><level>A</level><content>你好，***，世界</content></KfcSearchResult></kfc_keyword_search_sns_response>]]></xml>
</sample>
</api>
<api>
<cat>收藏夹API</cat>
<name>taobao.favorite.add</name>
<cname>添加收藏夹</cname>
<authorize>必须用户授权</authorize>
<desc>根据用户昵称和收藏目标的数字id以及收藏目标的类型，实现收藏行为</desc>
<request>
<param>
<name>item_numid</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>如果收藏的是商品，就传num_iid，如果是店铺，就传入sid</desc>
<sample>1600171134</sample>
<default/>
</param>
<param>
<name>collect_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>ITEM表示宝贝，SHOP表示店铺，只能传入这两者之一</desc>
<sample>ITEM</sample>
<default/>
</param>
<param>
<name>shared</name>
<type>Boolean</type>
<level>Basic</level>
<required>必须</required>
<desc>该收藏是否公开</desc>
<sample>false</sample>
<default>false</default>
</param>
</request>
<response>
<param>
<name>success</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>是否收藏成功</desc>
</param>
</response>
<sample>
<json><![CDATA[{"favorite_boolean_collect_response":{"result":true}}]]></json>
<xml><![CDATA[<favorite_boolean_collect_response><result>true</result></favorite_boolean_collect_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.add-service-error:owner</code>
<desc>不可以自己收藏自己的商品或店铺</desc>
<solution/>
</error>
<error>
<code>isv.add-service-error:is_in_blacklist</code>
<desc>该用户已经被列入黑名单，无法收藏商品</desc>
<solution/>
</error>
<error>
<code>isv.add-service-error:is_full</code>
<desc>用户单日的收藏量达到上限（80）或超过总收藏数上限（1000）</desc>
<solution/>
</error>
<error>
<code>isv.add-service-erroris:is_not_exit</code>
<desc>需要收藏的目标不存在</desc>
<solution/>
</error>
<error>
<code>isv.add-service-erroris:already_collect</code>
<desc>目标已经被用户收藏</desc>
<solution/>
</error>
<error>
<code>isp.service-error</code>
<desc>服务端应用出错</desc>
<solution>联系开发者</solution>
</error>
<error>
<code>isv.invalid-paramete:collect_type</code>
<desc>collect_type格式不正确</desc>
<solution>应该为：SHOP或ITEM</solution>
</error>
</errors>
</api>
<api>
<cat>收藏夹API</cat>
<name>taobao.favorite.search</name>
<cname>查询</cname>
<authorize>可选用户授权</authorize>
<desc>查询淘宝用户收藏的商品或店铺信息</desc>
<request>
<param>
<name>user_nick</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>用户昵称</desc>
<sample>zhangyang</sample>
<default/>
</param>
<param>
<name>collect_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>ITEM表示宝贝，SHOP表示商铺，collect_type只能为这两者之一</desc>
<sample>ITEM</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>页码。取值范围:大于零的整数; 默认值:1。一页20条记录。</desc>
<sample>1</sample>
<default/>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>false</required>
<sample>55</sample>
<desc>查询到的宝贝的收藏总数</desc>
</param>
<param>
<name>collect_items</name>
<type>CollectItem</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>返回查询到的商品或店铺的数字id列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"favorite_search_response":{"total_result":55,"search_list":{"collect_item":[{"item_numid":11111}]}}}]]></json>
<xml><![CDATA[<favorite_search_response><total_result>55</total_result><search_list list="true"><collect_item><item_numid>11111</item_numid></collect_item></search_list></favorite_search_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.userid-not-exit:usernick</code>
<desc>根据usernick查询不到userid</desc>
<solution/>
</error>
<error>
<code>isv.invalid-paramete:collect_type</code>
<desc>collect_type格式不正确</desc>
<solution>应该为：SHOP或ITEM</solution>
</error>
<error>
<code>isv.invalid-paramete:page_no</code>
<desc>page_no参数格式不正确</desc>
<solution>page_no应该为正整数</solution>
</error>
</errors>
</api>
<api>
<cat>异步API</cat>
<name>taobao.topats.delivery.send</name>
<cname>异步批量物流发货api</cname>
<authorize>必须用户授权</authorize>
<desc>使用指南：http://open.taobao.com/dev/index.php/ATS%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97 
1.提供异步批量物流发货功能 2.一次最多发货40个订单 3.提交任务会进行初步任务校验，如果成功会返回任务号和创建时间，如果失败就报错 4.可以接收淘宝发出的任务完成消息，也可以过一段时间来取结果。获取结果接口为taobao.topats.result.get 
5.此api执行完成发送的通知消息格式为{"task":{"task_id":123456,"created":"2010-8-19"}}</desc>
<request>
<param>
<name>tids</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>批量发货的订单id列表，每个订单id必需是合法的数字类型的tid，每个tid之间以";"分隔，至少要指定一个tid，最多不超过40个tid</desc>
<sample>123456;66666;321564</sample>
<default/>
</param>
<param>
<name>company_codes</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>每个tid所对应的物流公司代码。可以不传，表示所有的物流公司都为"其他"，但是只要有一个订单需要指定物流公司，所有的订单都需要指定物流公司,每个类型之间用";"连接。排列要和tid顺序一致，不需要指定物流公司的订单，该位置上放上一个空字符串""。可以不传，传了长度和位置要和tid保持一致。 
 
每个company_code表示物流公司代码.如"POST"就代表中国邮政,"ZJS"就代表宅急送.调用 taobao.logisticcompanies.get 获取。如传入的代码非淘宝官方物流合作公司，默认是“其他”物流的方式，在淘宝不显示物流具体进度，故传入需谨慎。如果orderType为delivery_needed，则必传</desc>
<sample>POST;;ZJS</sample>
<default/>
</param>
<param>
<name>out_sids</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>每个tid所对应的物流公司运单号。可以不传，表示所有的物流订单都没有订单号，但是只要有一个订单需要有订单号，所有的订单都需要指定订单号,每个订单号之间用";"连接。排列要和tid顺序一致，不需要指定订单号的订单，该位置上放上一个空字符串""。可以不传，传了长度和位置要和tid保持一致。 
具体一个物流公司的真实运单号码。淘宝官方物流会校验，请谨慎传入；若company_codes中传入的代码非淘宝官方物流合作公司，此处运单号不校验。如果orderType为delivery_needed，则必传</desc>
<sample>5257222;;5257223</sample>
<default/>
</param>
<param>
<name>seller_name</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家姓名。如果orderType为delivery_needed，则必传</desc>
<sample>淘宝卖家</sample>
<default/>
</param>
<param>
<name>seller_area_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家所在地国家公布的标准地区码.参考:http://www.stats.gov.cn/tjbz/xzqhdm/t20080215_402462675.htm 或者调用 taobao.areas.get 获取。如果orderType为delivery_needed，则必传</desc>
<sample>55255</sample>
<default/>
</param>
<param>
<name>seller_address</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家地址(详细地址).如:XXX街道XXX门牌,省市区不需要提供。如果orderType为delivery_needed，则必传</desc>
<sample>XXX街道XXX门牌</sample>
<default/>
</param>
<param>
<name>seller_zip</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家邮编。如果orderType为delivery_needed，则必传</desc>
<sample>55555</sample>
<default/>
</param>
<param>
<name>seller_phone</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家固定电话.包含区号,电话,分机号,中间用 " – "; 卖家固定电话和卖家手机号码,必须填写一个.</desc>
<sample>0571-88155642</sample>
<default/>
</param>
<param>
<name>seller_mobile</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>卖家手机号码</desc>
<sample>12345666666</sample>
<default/>
</param>
<param>
<name>order_types</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>每个tid所对应的物流发货类型。可以不传，表示所有的发货类型都为"delivery_needed"，但是只要有一个订单需要指定发货类型，所有的订单都需要指定发货类型,每个类型之间用";"连接。排列要和tid顺序一致，不需要指定发货类型的订单，该位置上放上一个空字符串""。可以不传，传了长度和位置要和tid保持一致。 每个类型可选( delivery_needed(物流订单发货),virtual_goods(虚拟物品发货). ) 注:选择virtual_goods类型进行发货的话下面的参数可以不需填写。如果选择delivery_needed 则下面的参数必须要填写</desc>
<sample>delivery_needed;;virtual_goods</sample>
<default/>
</param>
<param>
<name>memos</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>每个tid所对应的卖家备注。可以不传，表示所有的发货订单都不需要卖家备注，但是只要有一个订单需要指定卖家备注，所有的订单都需要指定卖家备注,每个卖家备注之间用";"连接。排列要和tid顺序一致，不需要指定卖家备注的订单，该位置上放上一个空字符串""。可以不传，传了长度和位置要和tid保持一致。卖家备注.最大长度为250个字符。如果orderType为delivery_needed，则必传</desc>
<sample>卖家备注;;卖家备注other</sample>
<default/>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
<sample>
<json><![CDATA[{"topats_delivery_send_response":{"task":{"task_id":12345,"created":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<topats_delivery_send_response><task><task_id>12345</task_id><created>2000-01-01 00:00:00</created></task></topats_delivery_send_response>]]></xml>
</sample>
</api>
<api>
<cat>异步API</cat>
<name>taobao.topats.result.get</name>
<cname>获取异步任务结果</cname>
<authorize>不需用户授权</authorize>
<desc>使用指南：http://open.taobao.com/dev/index.php/ATS%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97 
1.此接口用于获取异步任务处理的结果，传入的task_id必需属于当前的appKey才可以 
2.此接口只返回执行完成的任务结果，未执行完的返回结果里面不包含任务结果，只有任务id，执行状态 
3.执行完成的每个task的子任务结果内容与单个任务的结果结构一致。如：taobao.topats.trades.fullinfo.get返回的子任务结果就会是Trade的结构体。</desc>
<request>
<param>
<name>task_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>任务id号，创建任务时返回的task_id</desc>
<sample>12345</sample>
<default/>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>返回任务处理信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"topats_result_get_response":{"task":{"task_id":12345,"status":"done","subtasks":{"subtask":[{"sub_task_request":"{"tid":123456,"fields":"tid,seller_nick"}","sub_task_result":"{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}","is_success":true}]},"method":"taobao.topats.trades.fullinfo.get"}}}]]></json>
<xml><![CDATA[<topats_result_get_response><task><task_id>12345</task_id><status>done</status><subtasks list="true"><subtask><sub_task_request>{"tid":"123456","fields":"tid,seller_nick"}</sub_task_request><sub_task_result>{“trade”:{"tid":123456,"seller_nick":"淘宝卖家"}}</sub_task_result><is_success>true</is_success></subtask></subtasks><method>taobao.topats.trades.fullinfo.get</method></task></topats_result_get_response>]]></xml>
</sample>
</api>
<api>
<cat>异步API</cat>
<name>taobao.topats.trade.accountreport.get</name>
<cname>异步获取淘宝卖家绑定的支付宝账户的财务明细</cname>
<authorize>必须用户授权</authorize>
<desc>1.提供异步下载用户支付宝对账信息接口 2.一次调用最多支持下载3个月的对账信息 3.仅能获取2010年6月10日以后的信息 4.提交任务会进行初步任务校验，如果成功会返回任务号和创建时间，如果失败就报错 5.可以接收淘宝发出的任务完成消息，也可以过一段时间来取结果。获取结果接口为taobao.topats.result.get 6.支付宝证书签名方法见文档：“http://open.taobao.com/dev/index.php/如何数字证书签名” 7.此api执行完成发送的通知消息格式为{"task":{"task_id":123456,"created":"2010-8-19"}} 
8.此任务是大数据任务，获取任务结果时只能得到下载url 
9.子任务结果解析见TradeAccountDetail结构体说明 
10.此接口执行任务时间段为：00:00:00-09:30:00;11:00:00-14:00:00;17:00:00-20:00:00;22:30:00-23:59:59，只有在这段时间内才能返回查询结果 
</desc>
<request>
<param>
<name>start_created</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>账务日期开始时间，时间必须大于2010-06-10 00:00:00</desc>
<sample>2010-07-01 00:00:00</sample>
<default/>
</param>
<param>
<name>end_created</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>账务日期查询结束时间。查询结束时间必须大于查询开始时间，并且时间跨度不能超过3个月。</desc>
<sample>2010-09-01 00:00:00</sample>
<default/>
</param>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>返回信息包含的字段，详情请见TradeAccountDetail结构体说明</desc>
<sample>taobao_tid,alipay_tid</sample>
<default/>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
<sample>
<json><![CDATA[{"topats_trade_accountreport_get_response":{"task":{"task_id":12345,"created":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<topats_trade_accountreport_get_response><task><task_id>12345</task_id><created>2000-01-01 00:00:00</created></task></topats_trade_accountreport_get_response>]]></xml>
</sample>
</api>
<api>
<cat>异步API</cat>
<name>taobao.topats.trades.fullinfo.get</name>
<cname>异步批量获取交易订单详情api</cname>
<authorize>必须用户授权</authorize>
<desc>使用指南：http://open.taobao.com/dev/index.php/ATS%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97 
1.提供异步批量获取订单详情功能 2.一次调用最多支持40个订单 3.提交任务会进行初步任务校验，如果成功会返回任务号和创建时间，如果失败就报错 4.可以接收淘宝发出的任务完成消息，也可以过一段时间来取结果。获取结果接口为taobao.topats.result.get 
5.此api执行完成发送的通知消息格式为{"task":{"task_id":123456,"created":"2010-8-19"}}</desc>
<request>
<param>
<name>fields</name>
<type>Field List</type>
<level>Basic</level>
<required>必须</required>
<desc>指定此字段表示获取的所有订单都按照这个字段请求来返回，同（taobao.trade.fullinfo.get的fields一样）。
1.Trade中可以指定返回的fields：seller_nick, buyer_nick, title, type, created, sid, tid, seller_rate, buyer_rate, status, payment, discount_fee, adjust_fee, post_fee, total_fee, pay_time, end_time, modified, consign_time, buyer_obtain_point_fee, point_fee, real_point_fee, received_payment, commission_fee, buyer_memo, seller_memo, alipay_no, buyer_message, pic_path, num_iid, num, price, buyer_alipay_no, receiver_name, receiver_state, receiver_city, receiver_district, receiver_address, receiver_zip, receiver_mobile, receiver_phone, buyer_email, seller_alipay_no, seller_mobile, seller_phone, seller_name, seller_email, available_confirm_fee, has_post_fee, timeout_action_time, snapshot_url, cod_fee, cod_status, shipping_type, trade_memo, is_3D 2.Order中可以指定返回fields：orders.title, orders.pic_path, orders.price, orders.num, orders.num_iid, orders.sku_id, orders.refund_status, orders.status, orders.oid, orders.total_fee, orders.payment, orders.discount_fee, orders.adjust_fee, orders.snapshot_url, orders.timeout_action_time，orders.sku_properties_name, orders.item_meal_name, item_memo,orders.buyer_rate, orders.seller_rate, orders.outer_iid, orders.outer_sku_id, orders.refund_id, orders.seller_type 3.fields：orders（返回Order的所有内容）</desc>
<sample>tid,alipay_no,commission_fee,received_payment,buyer_alipay_no</sample>
<default/>
</param>
<param>
<name>tids</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>批量获取的订单id列表，每个订单id必需是合法的数字类型的tid，每个tid之间以";"分隔，至少要指定一个tid，最多不超过40个tid</desc>
<sample>123456;22222</sample>
<default/>
</param>
</request>
<response>
<param>
<name>task</name>
<type>Task</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>创建任务信息。里面只包含task_id和created</desc>
</param>
</response>
<sample>
<json><![CDATA[{"topats_trades_fullinfo_get_response":{"task":{"task_id":12345,"created":"2000-01-01 00:00:00"}}}]]></json>
<xml><![CDATA[<topats_trades_fullinfo_get_response><task><task_id>12345</task_id><created>2000-01-01 00:00:00</created></task></topats_trades_fullinfo_get_response>]]></xml>
</sample>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.activity.add</name>
<cname>店铺优惠券领取活动创建接口</cname>
<authorize>必须用户授权</authorize>
<desc>查询某个卖家的店铺优惠券领取活动。返回，优惠券领取活动ID，优惠券领取链接</desc>
<request>
<param>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>优惠券的id，唯一标识这个优惠券</desc>
<sample>155888</sample>
<default/>
</param>
<param>
<name>coupon_count</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>优惠券总领用数量</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>person_limit_count</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>每个人最多领用数量，0代表不限</desc>
<sample>2</sample>
<default/>
</param>
</request>
<response>
<param>
<name>activity</name>
<type>Activity</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>活动信息，包括活动id和链接</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_activity_add_response":{"activity":{"activity_id":88744,"coupon_id":8554,"total_count":50,"applied_count":50,"person_limit_count":4,"status":"enabled","activity_url":"http://ecrm.taobao","create_user":"self"}}}]]></json>
<xml><![CDATA[<promotion_activity_add_response><activity><activity_id>88744</activity_id><coupon_id>8554</coupon_id><total_count>50</total_count><applied_count>50</applied_count><person_limit_count>4</person_limit_count><status>enabled</status><activity_url>http:</activity_url><create_user>self</create_user></activity></promotion_activity_add_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.coupon-notexisting</code>
<desc>优惠券不存在</desc>
<solution>优惠券不存在，重新选择优惠券</solution>
</error>
<error>
<code>isv.totalcount-error</code>
<desc>优惠券总数必须在1-999999之间</desc>
<solution>优惠券总数必须在1-999999之间</solution>
</error>
<error>
<code>isv.personlimitcount-error</code>
<desc>每个人领用数量必须在0-5之间</desc>
<solution>每个人领用数量必须在0-5之间</solution>
</error>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统异常</desc>
<solution>系统异常，联系淘宝</solution>
</error>
<error>
<code>isv.error-unauthorized</code>
<desc>卖家没有订购优惠券的服务</desc>
<solution>卖家没有订购优惠券的服务，必须订购优惠券或者是商城的用户</solution>
</error>
<error>
<code>isv.activitycount-error</code>
<desc>扶植版套餐用户最多只能创建5个优惠券活动，非扶植版套餐用户最多只能创建50个优惠券活动</desc>
<solution>扶植版套餐用户最多只能创建5个优惠券活动，非扶植版套餐用户最多只能创建50个优惠券活动</solution>
</error>
</errors>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.activity.cancel</name>
<cname>取消活动</cname>
<authorize>必须用户授权</authorize>
<desc>取消正在开始的店铺优惠券活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>活动id</desc>
<sample>8558585</sample>
<default/>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>true成功，false 失败</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_activity_cancel_response":{"is_success":true}}]]></json>
<xml><![CDATA[<promotion_activity_cancel_response><is_success>true</is_success></promotion_activity_cancel_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统异常</desc>
<solution>系统异常</solution>
</error>
<error>
<code>isv.activity-error</code>
<desc>取消的活动不存在，或者不是同一个isv创建的活动</desc>
<solution>检查活动</solution>
</error>
<error>
<code>isv.error-unauthorized</code>
<desc>卖家没有订购优惠券的服务</desc>
<solution>卖家没有订购优惠券的服务，必须订购优惠券或者是商城的用户</solution>
</error>
</errors>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.activity.delete</name>
<cname>删除活动</cname>
<authorize>必须用户授权</authorize>
<desc>删除卖家创建的店铺优惠券活动</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>优惠券的id</desc>
<sample>874547</sample>
<default/>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>true成功，false失败</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_activity_delete_response":{"is_success":true}}]]></json>
<xml><![CDATA[<promotion_activity_delete_response><is_success>true</is_success></promotion_activity_delete_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.activity-error</code>
<desc>删除的活动不存在，或者不是同一个isv创建的活动，或者活动不是失效的活动</desc>
<solution>删除的活动不存在，或者不是同一个isv创建的活动，或者活动不是失效的活动</solution>
</error>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统异常</desc>
<solution>系统异常</solution>
</error>
<error>
<code>isv.error-unauthorized</code>
<desc>卖家没有订购优惠券的服务</desc>
<solution>卖家没有订购优惠券的服务，必须订购优惠券或者是商城的用户</solution>
</error>
</errors>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.activity.get</name>
<cname>查询某个卖家的店铺优惠券领取活动</cname>
<authorize>必须用户授权</authorize>
<desc>查询某个卖家的店铺优惠券领取活动 
返回，优惠券领取活动ID，优惠券ID，总领用量，每人限领量，已领取数量 
领取活动状态，优惠券领取链接 
最多50个优惠券</desc>
<request>
<param>
<name>activity_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>活动的id</desc>
<sample>585448</sample>
<default/>
</param>
</request>
<response>
<param>
<name>activitys</name>
<type>Activity</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc>活动列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_activity_get_response":{"activitys":{"activity":[{"activity_id":88744,"coupon_id":8554,"total_count":50,"applied_count":50,"person_limit_count":4,"status":"enabled","activity_url":"http://ecrm.taobao"}]}}}]]></json>
<xml><![CDATA[<promotion_activity_get_response><activitys list="true"><activity><activity_id>88744</activity_id><coupon_id>8554</coupon_id><total_count>50</total_count><applied_count>50</applied_count><person_limit_count>4</person_limit_count><status>enabled</status><activity_url>http:</activity_url></activity></activitys></promotion_activity_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统异常</desc>
<solution>系统异常</solution>
</error>
<error>
<code>isv.error-unauthorized</code>
<desc>卖家没有订购优惠券的服务</desc>
<solution>卖家没有订购优惠券的服务，必须订购优惠券或者是商城的用户</solution>
</error>
</errors>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.coupon.add</name>
<cname>创建店铺优惠券接口</cname>
<authorize>必须用户授权</authorize>
<desc>创建店铺优惠券。有效期内的店铺优惠券总数量不超过100张</desc>
<request>
<param>
<name>denominations</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>优惠券的面额，必须是3，5，10，20，50，100</desc>
<sample>3</sample>
<default/>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<required>必须</required>
<desc>优惠券的截止日期</desc>
<sample>2010-02-15 23:59:59</sample>
<default/>
</param>
<param>
<name>condition</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>订单满多少元才能用这个优惠券，500就是满500才能使用</desc>
<sample>5</sample>
<default/>
</param>
</request>
<response>
<param>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>123456</sample>
<desc>优惠券的id</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_coupon_add_response":{"coupon_id":123456}}]]></json>
<xml><![CDATA[<promotion_coupon_add_response><coupon_id>123456</coupon_id></promotion_coupon_add_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统异常</desc>
<solution>系统异常联络淘宝</solution>
</error>
<error>
<code>isv.parameter-endtime-error</code>
<desc>优惠券日期错误</desc>
<solution>优惠券的结束日期必须大于等于当天，例如今天是2011-02-22，结束日期必须大于等于2011-02-22 23:59:59，优惠券结束日期不能大于6个月</solution>
</error>
<error>
<code>isv.parameter-denominations-error</code>
<desc>面额必须是3，5，10，20，50，100</desc>
<solution>面额必须是3，5，10，20，50，100</solution>
</error>
<error>
<code>isv.parameter-condition-error</code>
<desc>优惠券的使用条件错误</desc>
<solution>优惠券的使用条件不能小于面额，0代表没有使用条件，默认使用条件面额+1分</solution>
</error>
<error>
<code>isv.error-unauthorized</code>
<desc>卖家没有订购优惠券的服务</desc>
<solution>卖家没有订购优惠券的服务，必须订购优惠券或者是商城的用户</solution>
</error>
<error>
<code>isv.parameter-count-overflowing</code>
<desc>优惠券数量超出100个</desc>
<solution>优惠券数量超出100个</solution>
</error>
</errors>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.coupon.send</name>
<cname>店铺优惠券发放接口</cname>
<authorize>必须用户授权</authorize>
<desc>通过接口批量发放店铺优惠券。（每次只能发送100张）</desc>
<request>
<param>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>优惠券的id</desc>
<sample>48552</sample>
<default/>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<level>Basic Array</level>
<required>必须</required>
<desc>买家昵称用半角';'号分割</desc>
<sample>张三;历史</sample>
<default/>
</param>
</request>
<response>
<param>
<name>is_success</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>true 成功，false失败</desc>
</param>
<param>
<name>failure_buyers</name>
<type>ErrorMessage</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc>没有发送成功的买家</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_coupon_send_response":{"is_success":true,"failure_buyers":{"error_message":[{"buyer_nike":"张三","reason":"买家不存在"}]}}}]]></json>
<xml><![CDATA[<promotion_coupon_send_response><is_success>true</is_success><failure_buyers list="true"><error_message><buyer_nike>张三</buyer_nike><reason>买家不存在</reason></error_message></failure_buyers></promotion_coupon_send_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.coupon-error</code>
<desc>优惠券不存在或者优惠券已经过期</desc>
<solution>检查优惠券</solution>
</error>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统异常</desc>
<solution>系统异常</solution>
</error>
<error>
<code>isv.error-unauthorized</code>
<desc>卖家没有订购优惠券的服务</desc>
<solution>卖家没有订购优惠券的服务，必须订购优惠券或者是商城的用户</solution>
</error>
</errors>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.coupondetail.get</name>
<cname>通过接口可以查询某个店铺优惠券的买家详细信息</cname>
<authorize>必须用户授权</authorize>
<desc>通过接口可以查询某个店铺优惠券的买家详细信息返回的信息，买家昵称， 使用渠道，使用状态，总数量</desc>
<request>
<param>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>优惠券的id</desc>
<sample>15588</sample>
<default/>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>买家昵称</desc>
<sample>张三</sample>
<default/>
</param>
<param>
<name>state</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>优惠券使用情况unused：代表未使用using：代表使用中used：代表已使用。必须是unused，using，used</desc>
<sample>unused</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>查询的页号，结果集是分页返回的，每页20条</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页行数</desc>
<sample>20</sample>
<default>20</default>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>10</sample>
<desc>查询数量总数</desc>
</param>
<param>
<name>coupon_details</name>
<type>CouponDetail</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc>优惠券详细信息</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_coupondetail_get_response":{"total_results":10,"coupon_details":{"coupon_detail":[{"buyer_nick":"张三","channel":"rewardforgifts","state":"Unused"}]}}}]]></json>
<xml><![CDATA[<promotion_coupondetail_get_response><total_results>10</total_results><coupon_details list="true"><coupon_detail><buyer_nick>张三</buyer_nick><channel>rewardforgifts</channel><state>Unused</state></coupon_detail></coupon_details></promotion_coupondetail_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.user-notexisting</code>
<desc>买家不存在</desc>
<solution>买家昵称不存在</solution>
</error>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统异常</desc>
<solution>系统异常，联络淘宝</solution>
</error>
<error>
<code>isv.coupon-notexisting</code>
<desc>优惠券不存在</desc>
<solution>优惠券不存在</solution>
</error>
<error>
<code>isv.error-unauthorized</code>
<desc>卖家没有订购优惠券的服务</desc>
<solution>卖家没有订购优惠券的服务，必须订购优惠券或者是商城的用户</solution>
</error>
</errors>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.coupons.get</name>
<cname>查询卖家优惠券</cname>
<authorize>必须用户授权</authorize>
<desc>查询卖家已经创建的优惠券，接口返回信息：优惠券ID，面值，创建时间，有效期，使用条件，使用渠道，创建渠道，优惠券总数量</desc>
<request>
<param>
<name>coupon_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>优惠券的id，唯一标识这个优惠券</desc>
<sample>184780</sample>
<default/>
</param>
<param>
<name>end_time</name>
<type>Date</type>
<level>Basic</level>
<required>可选</required>
<desc>优惠券的截止日期</desc>
<sample>2010-02-15 23:59:59</sample>
<default/>
</param>
<param>
<name>denominations</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>优惠券的面额，必须是3，5，10，20，50,100</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>查询的页号，结果集是分页返回的，每页20条</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页条数</desc>
<sample>20</sample>
<default>20</default>
</param>
</request>
<response>
<param>
<name>total_results</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>200</sample>
<desc>查询的总数量</desc>
</param>
<param>
<name>coupons</name>
<type>Coupon</type>
<level>Object Array</level>
<required>false</required>
<sample/>
<desc>优惠券列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_coupons_get_response":{"tot_results":200,"coupons":{"coupon":[{"coupon_id":123456,"denominations":5,"creat_time":"2000-01-01 00:00:00","end_time":"2000-01-01 00:00:00","condition":500}]}}}]]></json>
<xml><![CDATA[<promotion_coupons_get_response><tot_results>200</tot_results><coupons list="true"><coupon><coupon_id>123456</coupon_id><denominations>5</denominations><creat_time>2000-01-01 00:00:00</creat_time><end_time>2000-01-01 00:00:00</end_time><condition>500</condition></coupon></coupons></promotion_coupons_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.error-inaccurate</code>
<desc>传入的日期不正确，必须是yyyy-MM-dd格式</desc>
<solution>必须是yyyy-MM-dd格式</solution>
</error>
<error>
<code>isv.error-numeric</code>
<desc>面额不正确</desc>
<solution>面额必须是3，5，10，20，50，100</solution>
</error>
<error>
<code>isv.error-unauthorized</code>
<desc>卖家没有订购优惠券的服务</desc>
<solution>卖家没有订购优惠券的服务，必须订购优惠券或者是商城的用户</solution>
</error>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统异常</desc>
<solution>系统异常，联系淘宝</solution>
</error>
</errors>
</api>
<api>
<cat>营销API</cat>
<name>taobao.promotion.members.get</name>
<cname>卖家取得会员信息</cname>
<authorize>必须用户授权</authorize>
<desc>取某个卖家的客户信息。只有购买了会员关系管理软件的用户才能使用。</desc>
<request>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>每页行数</desc>
<sample>20</sample>
<default/>
</param>
<param>
<name>current_page</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>要查询第几页</desc>
<sample>1</sample>
<default/>
</param>
<param>
<name>buyer_nick</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>会员昵称</desc>
<sample>张三</sample>
<default/>
</param>
<param>
<name>min_trade_count</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>最小交易量</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>max_trade_count</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>最大交易量</desc>
<sample>200</sample>
<default/>
</param>
<param>
<name>min_trade_amount</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>最小交易额，用分表示</desc>
<sample>10000</sample>
<default/>
</param>
<param>
<name>max_trade_amoun</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>最大交易额，用分表示</desc>
<sample>20000</sample>
<default/>
</param>
<param>
<name>grade</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>买家会员级别 general：普通会员 senior ：高级会员 vip：VIP会员 king：至尊VIP</desc>
<sample>general</sample>
<default/>
</param>
</request>
<response>
<param>
<name>tot_count</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>1500</sample>
<desc>一共有多少条</desc>
</param>
<param>
<name>members</name>
<type>Member</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>会员列表</desc>
</param>
</response>
<sample>
<json><![CDATA[{"promotion_members_get_response":{"tot_count":1500,"members":{"member":[{"buyer_id":"685587","buyer_nick":"张三","member_grade":"general","trade_amount":5000,"trade_count":200,"laste_time":"2000-01-01 00:00:00","status":"normal"}]}}}]]></json>
<xml><![CDATA[<promotion_members_get_response><tot_count>1500</tot_count><members list="true"><member><buyer_id>685587</buyer_id><buyer_nick>张三</buyer_nick><member_grade>general</member_grade><trade_amount>5000</trade_amount><trade_count>200</trade_count><laste_time>2000-01-01 00:00:00</laste_time><status>normal</status></member></members></promotion_members_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter</code>
<desc>参数不正确</desc>
<solution/>
</error>
<error>
<code>isp.promotiontop-service-unavailable</code>
<desc>系统出现异常</desc>
<solution/>
</error>
<error>
<code>isv.not-hasecrm</code>
<desc>用户没有权限，没有订购ECRM的用户不能使用这个接口</desc>
<solution/>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.boughtitem.is</name>
<cname>用户是否购买过该商品</cname>
<authorize>必须用户授权</authorize>
<desc>判断用户是否购买过该商品</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品ID</desc>
<sample>5314</sample>
<default/>
</param>
</request>
<response>
<param>
<name>is_bought</name>
<type>Boolean</type>
<level>Basic</level>
<required>true</required>
<sample>true</sample>
<desc>返回结果，true代表该商品已经被购买过，false代表该商品还没有被购买过</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_boughtitem_is_response":{"is_bought":true}}]]></json>
<xml><![CDATA[<taohua_boughtitem_is_response><is_bought>true</is_bought></taohua_boughtitem_is_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.childcates.get</name>
<cname>获取子类目列表</cname>
<authorize>不需用户授权</authorize>
<desc>通过类目ID获取它的类目列表</desc>
<request>
<param>
<name>cate_id</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>通过类目ID获取它的子类目列表</desc>
<sample>66659</sample>
<default>0</default>
</param>
</request>
<response>
<param>
<name>taohua_categories</name>
<type>TaohuaCategory</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>淘花类目数据结构</desc>
</param>
<param>
<name>total_cates</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>15</sample>
<desc>总类目数</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_childcates_get_response":{"taohua_categories":{"taohua_category":[{"cate_id":6698,"name":"文档","parent_id":1,"cate_level":3,"sort_order":2}]},"total_cates":15}}]]></json>
<xml><![CDATA[<taohua_childcates_get_response><taohua_categories list="true"><taohua_category><cate_id>6698</cate_id><name>文档</name><parent_id>1</parent_id><cate_level>3</cate_level><sort_order>2</sort_order></taohua_category></taohua_categories><total_cates>15</total_cates></taohua_childcates_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
<error>
<code>isp.empty-data</code>
<desc>数据为空或者不存在</desc>
<solution>等待相匹配的数据录入</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.item.like</name>
<cname>我喜欢商品</cname>
<authorize>不需用户授权</authorize>
<desc>用户调本接口后，对应的商品喜欢值加1</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品ID</desc>
<sample>1256</sample>
<default/>
</param>
</request>
<response>
<param>
<name>like_result</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>success</sample>
<desc>成功返回success</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_item_like_response":{"like_result":"success"}}]]></json>
<xml><![CDATA[<taohua_item_like_response><like_result>success</like_result></taohua_item_like_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.itemcomment.add</name>
<cname>对指定商品进行评论</cname>
<authorize>必须用户授权</authorize>
<desc>对指定商品发表评论</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品ID</desc>
<sample>100000</sample>
<default/>
</param>
<param>
<name>comment</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>对商品的评论内容</desc>
<sample>武林还是那个武林，外传却成了二人转。</sample>
<default/>
</param>
</request>
<response>
<param>
<name>add_comment_result</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>success</sample>
<desc>发表评论成功标志</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_itemcomment_add_response":{"add_comment_result":"success"}}]]></json>
<xml><![CDATA[<taohua_itemcomment_add_response><add_comment_result>success</add_comment_result></taohua_itemcomment_add_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.itemcomments.get</name>
<cname>获取淘花指定商品的评论列表</cname>
<authorize>不需用户授权</authorize>
<desc>获取淘花指定商品的评论列表</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>指定商品的ID</desc>
<sample>8888</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>页码。 
取值范围：大于零的整数 
默认值：1 即返回第一页数据</desc>
<sample>3</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页记录数 
取值范围：大于零的整数  
默认值：10 即每页返回10条数据</desc>
<sample>5</sample>
<default>10</default>
</param>
</request>
<response>
<param>
<name>taohua_comments_result</name>
<type>TaohuaItemCommentResult</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>淘花商品评论</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_itemcomments_get_response":{"taohua_comments_result":{"taohua_item_comments":{"taohua_item_comment":[{"comment":"哇，这片子不错","comment_date":"2000-01-01 00:00:00","user_nick":"qy_test0"}]},"total_comment_num":10}}}]]></json>
<xml><![CDATA[<taohua_itemcomments_get_response><taohua_comments_result><taohua_item_comments list="true"><taohua_item_comment><comment>哇，这片子不错</comment><comment_date>2000-01-01 00:00:00</comment_date><user_nick>qy_test0</user_nick></taohua_item_comment></taohua_item_comments><total_comment_num>10</total_comment_num></taohua_comments_result></taohua_itemcomments_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数。</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.itemdetail.get</name>
<cname>文档详情</cname>
<authorize>不需用户授权</authorize>
<desc>商品详情接口</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品ID</desc>
<sample>43865</sample>
<default/>
</param>
</request>
<response>
<param>
<name>taohua_item_detail</name>
<type>TaohuaItem</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>淘花商品数据结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_itemdetail_get_response":{"taohua_item_detail":{"item_id":3364,"file_type":"epub","size":"1024","description":"商品描述信息","root_cate_id":100,"root_cate_name":"文档","leaf_cate_id":33642,"leaf_cate_name":"武侠小说","status_name":"never_put_shelves","pic_url":"http://img02.taobaocdn.com/bao/uploaded/i2/$!detail.picPath/T1Z8JhXn6EctP1upjX.jpg","taohua_item_pv_pairs":{"taohua_cate_prop":{"prop_id":365,"name":"作者"},"taohua_cate_prop_values":{"value_id":669,"prop_value":"小刀"}}}}}]]></json>
<xml><![CDATA[<taohua_itemdetail_get_response><taohua_item_detail><item_id>3364</item_id><file_type>epub</file_type><size>1024</size><description>商品描述信息</description><root_cate_id>100</root_cate_id><root_cate_name>文档</root_cate_name><leaf_cate_id>33642</leaf_cate_id><leaf_cate_name>武侠小说</leaf_cate_name><status_name>never_put_shelves</status_name><pic_url>http:</pic_url><taohua_item_pv_pairs><taohua_cate_prop><prop_id>365</prop_id><name>作者</name></taohua_cate_prop><taohua_cate_prop_values><value_id>669</value_id><prop_value>小刀</prop_value></taohua_cate_prop_values></taohua_item_pv_pairs></taohua_item_detail></taohua_itemdetail_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数。</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.itempayurl.get</name>
<cname>获取商品支付链接</cname>
<authorize>必须用户授权</authorize>
<desc>获取商品支付链接API</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品ID</desc>
<sample>66659</sample>
<default/>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>http://www.taohua.com/xxx/xxxx.do?item_id=123&amp;uid=942&amp;sign=Xdsfsdf324234XXSf3434CVd&amp;sign_type=RSA&amp;timestamp=1293766895688</sample>
<desc>支付URL</desc>
</param>
</response>
<sample>
<json><![CDATA[{
    "dts_itempayurl_get_response": {
        "url": "http://www.taohua.com/xxx/xxxx.do?item_id=123&uid=942&sign=Xdsfsdf324234XXSf3434CVd&sign_type=RSA&timestamp=1293766895688"
    }
}]]></json>
<xml><![CDATA[<dts_itempayurl_get_response>
    <url>
        http://www.taohua.com/xxx/xxxx.do?item_id=123&uid=942&sign=Xdsfsdf324234XXSf3434CVd&sign_type=RSA&timestamp=1293766895688
    </url>
</dts_itempayurl_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数。</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.itemresurl.get</name>
<cname>获取商品资源下载地址</cname>
<authorize>必须用户授权</authorize>
<desc>获取商品资源下载链接。 
URL调用示例： 
http://gw.api.taobao.com/router/rest?timestamp=1982-07-27 06:06:06&amp;method=taobao.taohua.itemresurl.get&amp;app_key=2005&amp;session=XXXXX&amp;sign=ERITJKEIJKJHKKKKKKKHJEREEEEEEEEEEE&amp;item_id=3365&amp;position=3652</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品ID</desc>
<sample>3365</sample>
<default/>
</param>
<param>
<name>position</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>因为下载地址涉及到断点续传的功能，所以需要客户端高速服务器端，应该从哪个byte开始返回文件流，那么这个字段作用就是用于告诉服务端从指定位置读取文件流</desc>
<sample>3652</sample>
<default>0</default>
</param>
<param>
<name>file_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>商品资源的下载文件类型，可选值：1、pdf，2、epub，3、src。 
dpf代表下载pdf类型的文件，epub代表下载epub类型的文件，src代表下载源文件</desc>
<sample>pdf|epub|src</sample>
<default>default</default>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>http://www.taohua.com/xxx/xxxx.htm?item_id=123&amp;position=3654&amp;uid=942&amp;file_type=pdf&amp;ticket=Xdsfsdf324234XXSf3434CVd</sample>
<desc>下载链接地址.</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_itemresurl_get_response":{"url":"http://www.taohua.com/xxx/xxxx.htm?item_id=123&position=3654&uid=942&file_type=pdf&ticket=Xdsfsdf324234XXSf3434CVd"}}]]></json>
<xml><![CDATA[<taohua_itemresurl_get_response><url>http:</url></taohua_itemresurl_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数。</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>参数不符合规范，格式不对、非法值、越界</desc>
<solution>根据提示纠正参数格式</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.items.search</name>
<cname>商品搜索列表接口</cname>
<authorize>不需用户授权</authorize>
<desc>商品搜索列表接口</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>分页搜索商品信息，page_no代表的是第几页</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>keywords</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>查询关键字,超过60好字符则自动截断为60个字符.  默认允许为null</desc>
<sample>淘花网</sample>
<default/>
</param>
<param>
<name>sort</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>排序值: 
 
1. 评分排序：ratescoredesc, 
2. 价格升序: priceasc, 
3. 价格降序: pricedesc, 
4. 时间排序: shelvesdate, 
5. 浏览排序：viewcount, 
6. 销量升序：saleasc, 
7. 默认排序：default,</desc>
<sample>saleasc</sample>
<default>default</default>
</param>
<param>
<name>free</name>
<type>Boolean</type>
<level>Basic</level>
<required>可选</required>
<desc>是否免费，如果为true则表示只搜索免费的商品。</desc>
<sample>false</sample>
<default/>
</param>
<param>
<name>begin_size</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>文件最小size,单位byte。</desc>
<sample>1024</sample>
<default/>
</param>
<param>
<name>end_size</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>文件最大size,单位byte。</desc>
<sample>2046</sample>
<default/>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>分页搜索商品信息，page_size代表：每页显示多少条数据。  目前最少5条，最多30条数据。</desc>
<sample>10</sample>
<default>9</default>
</param>
<param>
<name>file_type</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>按照文件类型来搜索</desc>
<sample>epub</sample>
<default/>
</param>
<param>
<name>cid</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>类目id</desc>
<sample>981</sample>
<default/>
</param>
</request>
<response>
<param>
<name>search_items_result</name>
<type>TaohuaSearchItems</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>商品搜索列表数据结构</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_items_search_response":{"search_items_result":{"taohua_search_items":{"taohua_search_item":[{"favorite":156,"author":"张爱玲","publish_date":"2011-03-16","item_id":123123,"root_cate_id":1233,"pic_url":"http://img02.taobaocdn.com/bao/uploaded/i2/$!detail.picPath/T1Z8JhXn6EctP1upjX.jpg","title":"侠客行","two_level_name":"武侠","suffix":"pdf","description":"石破天","shop_title":"淘花专卖","seller_id":4984,"seller_nick":"兔斯基","price":"0.02","doc_pages":22,"view_count":1065,"sell_count":11233,"size":"65000"}]},"cate_paths":{"taohua_category":[{"cate_id":6698,"name":"文档","parent_id":1,"cate_level":3,"sort_order":2}]},"cate_stats":{"taohua_cate_stat":[{"cate_id":36,"name":"小说","count":6000}]},"total_item":100}}}]]></json>
<xml><![CDATA[<taohua_items_search_response><search_items_result><taohua_search_items list="true"><taohua_search_item><favorite>156</favorite><author>张爱玲</author><publish_date>2011-03-16</publish_date><item_id>123123</item_id><root_cate_id>1233</root_cate_id><pic_url>http:</pic_url><title>侠客行</title><two_level_name>武侠</two_level_name><suffix>pdf</suffix><description>石破天</description><shop_title>淘花专卖</shop_title><seller_id>4984</seller_id><seller_nick>兔斯基</seller_nick><price>0.02</price><doc_pages>22</doc_pages><view_count>1065</view_count><sell_count>11233</sell_count><size>65000</size></taohua_search_item></taohua_search_items><cate_paths list="true"><taohua_category><cate_id>6698</cate_id><name>文档</name><parent_id>1</parent_id><cate_level>3</cate_level><sort_order>2</sort_order></taohua_category></cate_paths><cate_stats list="true"><taohua_cate_stat><cate_id>36</cate_id><name>小说</name><count>6000</count></taohua_cate_stat></cate_stats><total_item>100</total_item></search_items_result></taohua_items_search_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数。</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.latestupdateinfo.get</name>
<cname>获取最新的更新信息</cname>
<authorize>不需用户授权</authorize>
<desc>获取最新更新信息</desc>
<response>
<param>
<name>taohua_update_info</name>
<type>TaohuaUpdateInfo</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>更新信息版本号</desc>
</param>
</response>
<sample>
<json><![CDATA[{
    "taohua_latestupdateinfo_get_response": {
        "taohua_update_info": {
            "version": "0.2",
            "url": "http://www.taohua.com/sdjflsjd/cccc",
            "message": "有最新版本的软件"
        }
    }
}]]></json>
<xml><![CDATA[<taohua_latestupdateinfo_get_response>
    <taohua_update_info>
        <version>
            0.2
        </version>
        <url>
            http://www.taohua.com/sdjflsjd/cccc
        </url>
        <message>
            有最新版本的软件
        </message>
    </taohua_update_info>
</taohua_latestupdateinfo_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.orders.get</name>
<cname>查询买家订单列表</cname>
<authorize>必须用户授权</authorize>
<desc>查询买家订单列表</desc>
<request>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>分页获取订单列表信息，page_no代表的是第几页</desc>
<sample>1</sample>
<default>1</default>
</param>
<param>
<name>trade_status</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>查询的交易状态： 
1.	全部 all 
2.	等待买家付款 wait_pay 
3.	交易成功 trade_suc 
4.	交易关闭 trade_close</desc>
<sample>wait_pay</sample>
<default>all</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>分页获取订单列表信息，page_size代表每页显示多少条。  注意：每页显示条数。最小5条，最多30条，凡是超出范围的条数，都会被默认为10条。</desc>
<sample>10</sample>
<default>10</default>
</param>
<param>
<name>start_date</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>系统默认为：当前时间-90天。  日期精确到日</desc>
<sample>2010-09-01</sample>
<default/>
</param>
<param>
<name>end_date</name>
<type>String</type>
<level>Basic</level>
<required>可选</required>
<desc>默认为当前时间， 日期格式精确到天数</desc>
<sample>2010-12-31</sample>
<default/>
</param>
</request>
<response>
<param>
<name>taohua_order_result</name>
<type>TaohuaOrders</type>
<level>Object</level>
<required>true</required>
<sample/>
<desc>淘花订单列表数据结构对象</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_orders_get_response":{"taohua_order_result":{"taohua_orders":{"order_id":1233,"modified":"2010-12-27 10:48:00","pic_url":"http://img02.taobaocdn.com/bao/uploaded/i2/$!detail.picPath/T1Z8JhXn6EctP1upjX.jpg","title":"侠客行","price":"0.02","seller_nick":"淘花卖家","pay_status":"wait_pay"},"total_order":20}}}]]></json>
<xml><![CDATA[<taohua_orders_get_response><taohua_order_result><taohua_orders><order_id>1233</order_id><modified>2010-12-27 10:48:00</modified><pic_url>http:</pic_url><title>侠客行</title><price>0.02</price><seller_nick>淘花卖家</seller_nick><pay_status>wait_pay</pay_status></taohua_orders><total_order>20</total_order></taohua_order_result></taohua_orders_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数。</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
<error>
<code>isp.empty-data</code>
<desc>数据为空或者不存在</desc>
<solution>等待数据相匹配的数据录入</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.previewurl.get</name>
<cname>获取商品预览链接</cname>
<authorize>不需用户授权</authorize>
<desc>获取商品预览链接</desc>
<request>
<param>
<name>item_id</name>
<type>Number</type>
<level>Basic</level>
<required>必须</required>
<desc>商品ID</desc>
<sample>1654</sample>
<default/>
</param>
<param>
<name>position</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>文件位置</desc>
<sample>100</sample>
<default/>
</param>
<param>
<name>file_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>用来区分要预览的文档类型,目前支持两种 
pre_epub 预览epub文档 
pre_pdf  预览pdf文档</desc>
<sample>pdf_pre</sample>
<default/>
</param>
</request>
<response>
<param>
<name>url</name>
<type>String</type>
<level>Basic</level>
<required>true</required>
<sample>http://www.taohua.com/sss/xxxx/lll.do?item_id=aaaaa</sample>
<desc>预览链接</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_previewurl_get_response":{"url":"http://www.taohua.com/sss/xxxx/lll.do?item_id=aaaaa"}}]]></json>
<xml><![CDATA[<taohua_previewurl_get_response><url>http:</url></taohua_previewurl_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isv.missing-parameter</code>
<desc>缺少必要参数</desc>
<solution>根据提示，补全参数。</solution>
</error>
<error>
<code>isv.invalid-parameter</code>
<desc>格式不对、非法值、越界等</desc>
<solution>根据提示，修在参数的格式，类型</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
</errors>
</api>
<api>
<cat>淘花API</cat>
<name>taobao.taohua.staffrecitems.get</name>
<cname>获取小二推荐的商品</cname>
<authorize>不需用户授权</authorize>
<desc>获取小二推荐的商品</desc>
<request>
<param>
<name>item_type</name>
<type>String</type>
<level>Basic</level>
<required>必须</required>
<desc>推荐的商品类型: 
1. free:获取推荐的免费商品 
2. charges:获取推荐的收费商品</desc>
<sample>free</sample>
<default/>
</param>
<param>
<name>page_no</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>当前页数，大于0的整数，默认值1，代表第一页</desc>
<sample>5</sample>
<default>1</default>
</param>
<param>
<name>page_size</name>
<type>Number</type>
<level>Basic</level>
<required>可选</required>
<desc>每页显示最大条数，要求：大于0的整数。默认为5，代表每页显示5条</desc>
<sample>4</sample>
<default>5</default>
</param>
</request>
<response>
<param>
<name>taohua_items</name>
<type>TaohuaItem</type>
<level>Object Array</level>
<required>true</required>
<sample/>
<desc>淘花商品数据结构列表</desc>
</param>
<param>
<name>total_items</name>
<type>Number</type>
<level>Basic</level>
<required>true</required>
<sample>20</sample>
<desc>总商品数量</desc>
</param>
</response>
<sample>
<json><![CDATA[{"taohua_staffrecitems_get_response":{"taohua_items":{"taohua_item":[{"price":"0.23","favorite":1000,"author":"张爱玲","publish_date":"2011-03-16","item_id":3364,"file_type":"epub","size":"1024","description":"商品描述信息","root_cate_id":100,"root_cate_name":"文档","leaf_cate_id":33642,"leaf_cate_name":"武侠小说","status_name":"never_put_shelves","pic_url":"http://img02.taobaocdn.com/bao/uploaded/i2/$!detail.picPath/T1Z8JhXn6EctP1upjX.jpg","taohua_item_pv_pairs":{"taohua_item_p_v_pair":[{"taohua_cate_prop":{"prop_id":365,"name":"作者"},"taohua_cate_prop_values":{"taohua_cate_prop_value":[{"value_id":669,"prop_value":"小刀"}]}}]},"title":"淘花书籍"}]},"total_items":20}}]]></json>
<xml><![CDATA[<taohua_staffrecitems_get_response><taohua_items list="true"><taohua_item><price>0.23</price><favorite>1000</favorite><author>张爱玲</author><publish_date>2011-03-16</publish_date><item_id>3364</item_id><file_type>epub</file_type><size>1024</size><description>商品描述信息</description><root_cate_id>100</root_cate_id><root_cate_name>文档</root_cate_name><leaf_cate_id>33642</leaf_cate_id><leaf_cate_name>武侠小说</leaf_cate_name><status_name>never_put_shelves</status_name><pic_url>http:</pic_url><taohua_item_pv_pairs list="true"><taohua_item_p_v_pair><taohua_cate_prop><prop_id>365</prop_id><name>作者</name></taohua_cate_prop><taohua_cate_prop_values list="true"><taohua_cate_prop_value><value_id>669</value_id><prop_value>小刀</prop_value></taohua_cate_prop_value></taohua_cate_prop_values></taohua_item_p_v_pair></taohua_item_pv_pairs><title>淘花书籍</title></taohua_item></taohua_items><total_items>20</total_items></taohua_staffrecitems_get_response>]]></xml>
</sample>
<errors>
<error>
<code>isp.persistence-error</code>
<desc>系统错误，请稍候再试。</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
<error>
<code>isp.empty-data</code>
<desc>数据为空或者不存在</desc>
<solution>等待数据相匹配的数据录入</solution>
</error>
<error>
<code>isp.service-unavailable</code>
<desc>调用后端服务抛异常，服务不可用</desc>
<solution>联系IPS开发人员共同解决</solution>
</error>
</errors>
</api>
</apis>
</metadata>
